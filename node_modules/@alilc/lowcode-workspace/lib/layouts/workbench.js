"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.Workbench = void 0;
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _react = require("react");
var _lowcodeEditorCore = require("@alilc/lowcode-editor-core");
var _windowView = require("../view/window-view");
var _classnames = _interopRequireDefault(require("classnames"));
var _skeletonContext = require("../skeleton-context");
var _lowcodeEditorSkeleton = require("@alilc/lowcode-editor-skeleton");
var _class;
var Workbench = exports.Workbench = (0, _lowcodeEditorCore.observer)(_class = /*#__PURE__*/function (_Component) {
  (0, _inheritsLoose2["default"])(Workbench, _Component);
  function Workbench(props) {
    var _this;
    _this = _Component.call(this, props) || this;
    var _this$props = _this.props,
      config = _this$props.config,
      components = _this$props.components,
      workspace = _this$props.workspace;
    var skeleton = workspace.skeleton;
    skeleton.buildFromConfig(config, components);
    _lowcodeEditorCore.engineConfig.onGot('theme', function (theme) {
      _this.setState({
        theme: theme
      });
    });
    _lowcodeEditorCore.engineConfig.onGot('workspaceEmptyComponent', function (workspaceEmptyComponent) {
      _this.setState({
        workspaceEmptyComponent: workspaceEmptyComponent
      });
    });
    _this.state = {
      workspaceEmptyComponent: _lowcodeEditorCore.engineConfig.get('workspaceEmptyComponent'),
      theme: _lowcodeEditorCore.engineConfig.get('theme')
    };
    return _this;
  }
  var _proto = Workbench.prototype;
  _proto.render = function render() {
    var _this$props2 = this.props,
      workspace = _this$props2.workspace,
      className = _this$props2.className,
      topAreaItemClassName = _this$props2.topAreaItemClassName;
    var skeleton = workspace.skeleton;
    var _this$state = this.state,
      WorkspaceEmptyComponent = _this$state.workspaceEmptyComponent,
      theme = _this$state.theme;
    return /*#__PURE__*/React.createElement("div", {
      className: (0, _classnames["default"])('lc-workspace-workbench', className, theme)
    }, /*#__PURE__*/React.createElement(_skeletonContext.SkeletonContext.Provider, {
      value: skeleton
    }, /*#__PURE__*/React.createElement(_lowcodeEditorSkeleton.TopArea, {
      className: "lc-workspace-top-area",
      area: skeleton.topArea,
      itemClassName: topAreaItemClassName
    }), /*#__PURE__*/React.createElement("div", {
      className: "lc-workspace-workbench-body"
    }, /*#__PURE__*/React.createElement(_lowcodeEditorSkeleton.LeftArea, {
      className: "lc-workspace-left-area lc-left-area",
      area: skeleton.leftArea
    }), /*#__PURE__*/React.createElement(_lowcodeEditorSkeleton.LeftFloatPane, {
      area: skeleton.leftFloatArea
    }), /*#__PURE__*/React.createElement(_lowcodeEditorSkeleton.LeftFixedPane, {
      area: skeleton.leftFixedArea
    }), /*#__PURE__*/React.createElement("div", {
      className: "lc-workspace-workbench-center"
    }, /*#__PURE__*/React.createElement("div", {
      className: "lc-workspace-workbench-center-content"
    }, /*#__PURE__*/React.createElement(_lowcodeEditorSkeleton.SubTopArea, {
      area: skeleton.subTopArea,
      itemClassName: topAreaItemClassName
    }), /*#__PURE__*/React.createElement("div", {
      className: "lc-workspace-workbench-window"
    }, workspace.windows.map(function (d) {
      var _workspace$window;
      return /*#__PURE__*/React.createElement(_windowView.WindowView, {
        active: d.id === ((_workspace$window = workspace.window) === null || _workspace$window === void 0 ? void 0 : _workspace$window.id),
        window: d,
        key: d.id
      });
    }), !workspace.windows.length && WorkspaceEmptyComponent ? /*#__PURE__*/React.createElement(WorkspaceEmptyComponent, null) : null)), /*#__PURE__*/React.createElement(_lowcodeEditorSkeleton.MainArea, {
      area: skeleton.mainArea
    }), /*#__PURE__*/React.createElement(_lowcodeEditorSkeleton.BottomArea, {
      area: skeleton.bottomArea
    }))), /*#__PURE__*/React.createElement(_lowcodeEditorCore.TipContainer, null)));
  };
  return Workbench;
}(_react.Component)) || _class;