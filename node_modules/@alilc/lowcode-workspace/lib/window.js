"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.WINDOW_STATE = exports.EditorWindow = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _initializerDefineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerDefineProperty"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));
var _initializerWarningHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerWarningHelper"));
var _lowcodeUtils = require("@alilc/lowcode-utils");
var _lowcodeEditorCore = require("@alilc/lowcode-editor-core");
var _viewContext = require("./context/view-context");
var _dec, _class, _descriptor, _descriptor2, _descriptor3;
var WINDOW_STATE = exports.WINDOW_STATE = /*#__PURE__*/function (WINDOW_STATE) {
  WINDOW_STATE["sleep"] = "sleep";
  WINDOW_STATE["active"] = "active";
  WINDOW_STATE["inactive"] = "inactive";
  WINDOW_STATE["destroyed"] = "destroyed";
  return WINDOW_STATE;
}({});
var EditorWindow = exports.EditorWindow = (_dec = _lowcodeEditorCore.obx.ref, (_class = /*#__PURE__*/function () {
  function EditorWindow(resource, workspace, config) {
    var _this = this;
    this.resource = resource;
    this.workspace = workspace;
    this.config = config;
    this.id = (0, _lowcodeUtils.uniqueId)('window');
    this.icon = void 0;
    this.emitter = (0, _lowcodeEditorCore.createModuleEventBus)('Project');
    this.title = void 0;
    this.url = void 0;
    (0, _initializerDefineProperty2["default"])(this, "_editorView", _descriptor, this);
    (0, _initializerDefineProperty2["default"])(this, "editorViews", _descriptor2, this);
    (0, _initializerDefineProperty2["default"])(this, "initReady", _descriptor3, this);
    this.sleep = void 0;
    this.initViewTypes = /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
      var editorViews, i, _name;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            editorViews = _this.resource.editorViews;
            if (editorViews) {
              _context.next = 3;
              break;
            }
            return _context.abrupt("return");
          case 3:
            i = 0;
          case 4:
            if (!(i < editorViews.length)) {
              _context.next = 12;
              break;
            }
            _name = editorViews[i].viewName;
            _context.next = 8;
            return _this.initViewType(_name);
          case 8:
            if (!_this._editorView) {
              _this.changeViewName(_name);
            }
          case 9:
            i++;
            _context.next = 4;
            break;
          case 12:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    this.execViewTypesInit = /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
      var editorViews, i, _this$editorViews$get, _name2;
      return _regenerator["default"].wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            editorViews = _this.resource.editorViews;
            if (editorViews) {
              _context2.next = 3;
              break;
            }
            return _context2.abrupt("return");
          case 3:
            i = 0;
          case 4:
            if (!(i < editorViews.length)) {
              _context2.next = 12;
              break;
            }
            _name2 = editorViews[i].viewName;
            _this.changeViewName(_name2);
            _context2.next = 9;
            return (_this$editorViews$get = _this.editorViews.get(_name2)) === null || _this$editorViews$get === void 0 ? void 0 : _this$editorViews$get.init();
          case 9:
            i++;
            _context2.next = 4;
            break;
          case 12:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    this.setDefaultViewName = function () {
      var _this$config$viewName;
      _this.changeViewName((_this$config$viewName = _this.config.viewName) !== null && _this$config$viewName !== void 0 ? _this$config$viewName : _this.resource.defaultViewName);
    };
    this.initViewType = /*#__PURE__*/function () {
      var _ref3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(name) {
        var viewInfo, editorView;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              viewInfo = _this.resource.getEditorView(name);
              if (!_this.editorViews.get(name)) {
                _context3.next = 3;
                break;
              }
              return _context3.abrupt("return");
            case 3:
              editorView = new _viewContext.Context(_this.workspace, _this, viewInfo, _this.config.options);
              _this.editorViews.set(name, editorView);
            case 5:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      return function (_x) {
        return _ref3.apply(this, arguments);
      };
    }();
    this.changeViewName = function (name, ignoreEmit) {
      var _this$_editorView;
      if (ignoreEmit === void 0) {
        ignoreEmit = true;
      }
      (_this$_editorView = _this._editorView) === null || _this$_editorView === void 0 ? void 0 : _this$_editorView.setActivate(false);
      _this._editorView = _this.editorViews.get(name);
      if (!_this._editorView) {
        return;
      }
      _this._editorView.setActivate(true);
      if (!ignoreEmit) {
        _this.emitter.emit('window.change.view.type', name);
        if (_this.id === _this.workspace.window.id) {
          _this.workspace.emitChangeActiveEditorView();
        }
      }
    };
    (0, _lowcodeEditorCore.makeObservable)(this);
    this.title = config.title;
    this.icon = resource.icon;
    this.sleep = config.sleep;
    if (config.sleep) {
      this.updateState(WINDOW_STATE.sleep);
    }
  }
  var _proto = EditorWindow.prototype;
  _proto.updateState = function updateState(state) {
    var _this$_editorView2, _this$_editorView3;
    switch (state) {
      case WINDOW_STATE.active:
        (_this$_editorView2 = this._editorView) === null || _this$_editorView2 === void 0 ? void 0 : _this$_editorView2.setActivate(true);
        break;
      case WINDOW_STATE.inactive:
        (_this$_editorView3 = this._editorView) === null || _this$_editorView3 === void 0 ? void 0 : _this$_editorView3.setActivate(false);
        break;
      case WINDOW_STATE.destroyed:
        break;
    }
  };
  _proto.importSchema = /*#__PURE__*/function () {
    var _importSchema = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(schema) {
      var _this2 = this;
      var newSchema;
      return _regenerator["default"].wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return this.resource["import"](schema);
          case 2:
            newSchema = _context4.sent;
            if (newSchema) {
              _context4.next = 5;
              break;
            }
            return _context4.abrupt("return");
          case 5:
            Object.keys(newSchema).forEach(function (key) {
              var view = _this2.editorViews.get(key);
              view === null || view === void 0 ? void 0 : view.project.importSchema(newSchema[key]);
            });
          case 6:
          case "end":
            return _context4.stop();
        }
      }, _callee4, this);
    }));
    function importSchema(_x2) {
      return _importSchema.apply(this, arguments);
    }
    return importSchema;
  }();
  _proto.save = /*#__PURE__*/function () {
    var _save = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5() {
      var value, editorViews, i, _this$editorViews$get2, _name3, saveResult, result;
      return _regenerator["default"].wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            value = {};
            editorViews = this.resource.editorViews;
            if (editorViews) {
              _context5.next = 4;
              break;
            }
            return _context5.abrupt("return");
          case 4:
            i = 0;
          case 5:
            if (!(i < editorViews.length)) {
              _context5.next = 14;
              break;
            }
            _name3 = editorViews[i].viewName;
            _context5.next = 9;
            return (_this$editorViews$get2 = this.editorViews.get(_name3)) === null || _this$editorViews$get2 === void 0 ? void 0 : _this$editorViews$get2.save();
          case 9:
            saveResult = _context5.sent;
            value[_name3] = saveResult;
          case 11:
            i++;
            _context5.next = 5;
            break;
          case 14:
            _context5.next = 16;
            return this.resource.save(value);
          case 16:
            result = _context5.sent;
            this.emitter.emit('handle.save');
            return _context5.abrupt("return", result);
          case 19:
          case "end":
            return _context5.stop();
        }
      }, _callee5, this);
    }));
    function save() {
      return _save.apply(this, arguments);
    }
    return save;
  }();
  _proto.onSave = function onSave(fn) {
    var _this3 = this;
    this.emitter.on('handle.save', fn);
    return function () {
      _this3.emitter.off('handle.save', fn);
    };
  };
  _proto.init = /*#__PURE__*/function () {
    var _init = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6() {
      var _this4 = this;
      return _regenerator["default"].wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return this.initViewTypes();
          case 2:
            _context6.next = 4;
            return this.execViewTypesInit();
          case 4:
            Promise.all(Array.from(this.editorViews.values()).map(function (d) {
              return d.onSimulatorRendererReady();
            })).then(function () {
              _this4.workspace.emitWindowRendererReady();
            });
            _context6.next = 7;
            return this.resource.url();
          case 7:
            this.url = _context6.sent;
            this.setDefaultViewName();
            this.initReady = true;
            this.workspace.checkWindowQueue();
            this.sleep = false;
            this.updateState(WINDOW_STATE.active);
          case 13:
          case "end":
            return _context6.stop();
        }
      }, _callee6, this);
    }));
    function init() {
      return _init.apply(this, arguments);
    }
    return init;
  }();
  _proto.onChangeViewType = function onChangeViewType(fn) {
    var _this5 = this;
    this.emitter.on('window.change.view.type', fn);
    return function () {
      _this5.emitter.off('window.change.view.type', fn);
    };
  };
  (0, _createClass2["default"])(EditorWindow, [{
    key: "editorView",
    get: function get() {
      if (!this._editorView) {
        return this.editorViews.values().next().value;
      }
      return this._editorView;
    }
  }, {
    key: "resourceType",
    get: function get() {
      return this.resource.resourceType.type;
    }
  }, {
    key: "project",
    get: function get() {
      var _this$editorView;
      return (_this$editorView = this.editorView) === null || _this$editorView === void 0 ? void 0 : _this$editorView.project;
    }
  }, {
    key: "innerProject",
    get: function get() {
      var _this$editorView2;
      return (_this$editorView2 = this.editorView) === null || _this$editorView2 === void 0 ? void 0 : _this$editorView2.innerProject;
    }
  }, {
    key: "innerSkeleton",
    get: function get() {
      var _this$editorView3;
      return (_this$editorView3 = this.editorView) === null || _this$editorView3 === void 0 ? void 0 : _this$editorView3.innerSkeleton;
    }
  }, {
    key: "innerSetters",
    get: function get() {
      var _this$editorView4;
      return (_this$editorView4 = this.editorView) === null || _this$editorView4 === void 0 ? void 0 : _this$editorView4.innerSetters;
    }
  }, {
    key: "innerHotkey",
    get: function get() {
      var _this$editorView5;
      return (_this$editorView5 = this.editorView) === null || _this$editorView5 === void 0 ? void 0 : _this$editorView5.innerHotkey;
    }
  }, {
    key: "editor",
    get: function get() {
      var _this$editorView6;
      return (_this$editorView6 = this.editorView) === null || _this$editorView6 === void 0 ? void 0 : _this$editorView6.editor;
    }
  }, {
    key: "designer",
    get: function get() {
      var _this$editorView7;
      return (_this$editorView7 = this.editorView) === null || _this$editorView7 === void 0 ? void 0 : _this$editorView7.designer;
    }
  }, {
    key: "plugins",
    get: function get() {
      var _this$editorView8;
      return (_this$editorView8 = this.editorView) === null || _this$editorView8 === void 0 ? void 0 : _this$editorView8.plugins;
    }
  }, {
    key: "innerPlugins",
    get: function get() {
      var _this$editorView9;
      return (_this$editorView9 = this.editorView) === null || _this$editorView9 === void 0 ? void 0 : _this$editorView9.innerPlugins;
    }
  }]);
  return EditorWindow;
}(), (_descriptor = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "_editorView", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2 = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "editorViews", [_lowcodeEditorCore.obx], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return new Map();
  }
}), _descriptor3 = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "initReady", [_lowcodeEditorCore.obx], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return false;
  }
})), _class));