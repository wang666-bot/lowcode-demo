import { Editor, Setters as InnerSetters, IEngineConfig, IHotKey } from '@alilc/lowcode-editor-core';
import { IProject, IDesigner, ILowCodePluginManager } from '@alilc/lowcode-designer';
import { ISkeleton } from '@alilc/lowcode-editor-skeleton';
import { IPluginPreferenceMananger, IPublicApiCanvas, IPublicApiCommon, IPublicApiEvent, IPublicApiHotkey, IPublicApiMaterial, IPublicApiPlugins, IPublicApiProject, IPublicApiSetters, IPublicApiSkeleton, IPublicEnumPluginRegisterLevel, IPublicModelPluginContext } from '@alilc/lowcode-types';
import { Logger as InnerLogger } from '@alilc/lowcode-utils';
import { IWorkspace } from '../workspace';
import { IEditorWindow } from '../window';
export interface IBasicContext extends Omit<IPublicModelPluginContext, 'workspace'> {
    skeleton: IPublicApiSkeleton;
    plugins: IPublicApiPlugins;
    project: IPublicApiProject;
    setters: IPublicApiSetters;
    material: IPublicApiMaterial;
    common: IPublicApiCommon;
    config: IEngineConfig;
    event: IPublicApiEvent;
    logger: InnerLogger;
    hotkey: IPublicApiHotkey;
    innerProject: IProject;
    editor: Editor;
    designer: IDesigner;
    registerInnerPlugins: () => Promise<void>;
    innerSetters: InnerSetters;
    innerSkeleton: ISkeleton;
    innerHotkey: IHotKey;
    innerPlugins: ILowCodePluginManager;
    canvas: IPublicApiCanvas;
    pluginEvent: IPublicApiEvent;
    preference: IPluginPreferenceMananger;
    workspace: IWorkspace;
}
export declare class BasicContext implements IBasicContext {
    readonly registerLevel: IPublicEnumPluginRegisterLevel;
    editorWindow?: IEditorWindow;
    skeleton: IPublicApiSkeleton;
    plugins: IPublicApiPlugins;
    project: IPublicApiProject;
    setters: IPublicApiSetters;
    material: IPublicApiMaterial;
    common: IPublicApiCommon;
    config: IEngineConfig;
    event: IPublicApiEvent;
    logger: InnerLogger;
    hotkey: IPublicApiHotkey;
    innerProject: IProject;
    editor: Editor;
    designer: IDesigner;
    registerInnerPlugins: () => Promise<void>;
    innerSetters: InnerSetters;
    innerSkeleton: ISkeleton;
    innerHotkey: IHotKey;
    innerPlugins: ILowCodePluginManager;
    canvas: IPublicApiCanvas;
    pluginEvent: IPublicApiEvent;
    preference: IPluginPreferenceMananger;
    workspace: IWorkspace;
    constructor(innerWorkspace: IWorkspace, viewName: string, registerLevel: IPublicEnumPluginRegisterLevel, editorWindow?: IEditorWindow);
}
