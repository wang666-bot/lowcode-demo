import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import { project } from '@alilc/lowcode-engine';
import { Button, Icon } from '@alifd/next';
import './index.scss';
var UndoRedo = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(UndoRedo, _PureComponent);
  function UndoRedo(props) {
    var _this;
    _this = _PureComponent.call(this, props) || this;
    _this.history = void 0;
    _this.changeDocumentDispose = void 0;
    _this.changeStateDispose = void 0;
    _this.init = function () {
      _this.changeDocumentDispose = project.onChangeDocument(function (doc) {
        var _this$history, _this$changeStateDisp, _this2;
        _this.history = doc.history;
        _this.updateState(((_this$history = _this.history) === null || _this$history === void 0 ? void 0 : _this$history.getState()) || 0);
        (_this$changeStateDisp = (_this2 = _this).changeStateDispose) === null || _this$changeStateDisp === void 0 ? void 0 : _this$changeStateDisp.call(_this2);
        _this.changeStateDispose = _this.history.onChangeState(function () {
          var _this$history2;
          _this.updateState(((_this$history2 = _this.history) === null || _this$history2 === void 0 ? void 0 : _this$history2.getState()) || 0);
        });
      });
    };
    _this.updateState = function (state) {
      _this.setState({
        undoEnable: !!(state & 1),
        redoEnable: !!(state & 2)
      });
    };
    _this.handleUndoClick = function () {
      _this.history.back();
    };
    _this.handleRedoClick = function () {
      _this.history.forward();
    };
    _this.state = {
      undoEnable: false,
      redoEnable: false
    };
    _this.init();
    return _this;
  }
  var _proto = UndoRedo.prototype;
  _proto.componentWillUnmount = function componentWillUnmount() {
    var _this$changeDocumentD, _this$changeStateDisp2;
    (_this$changeDocumentD = this.changeDocumentDispose) === null || _this$changeDocumentD === void 0 ? void 0 : _this$changeDocumentD.call(this);
    (_this$changeStateDisp2 = this.changeStateDispose) === null || _this$changeStateDisp2 === void 0 ? void 0 : _this$changeStateDisp2.call(this);
  };
  _proto.render = function render() {
    var _this$state = this.state,
      undoEnable = _this$state.undoEnable,
      redoEnable = _this$state.redoEnable;
    return /*#__PURE__*/React.createElement("div", {
      className: "lowcode-plugin-undo-redo"
    }, /*#__PURE__*/React.createElement(Button, {
      size: "medium",
      "data-tip": "\u64A4\u9500",
      "data-dir": "bottom",
      onClick: this.handleUndoClick,
      ghost: true,
      disabled: !undoEnable
    }, /*#__PURE__*/React.createElement(Icon, {
      type: "houtui"
    })), /*#__PURE__*/React.createElement(Button, {
      size: "medium",
      "data-tip": "\u6062\u590D",
      "data-dir": "bottom",
      onClick: this.handleRedoClick,
      ghost: true,
      disabled: !redoEnable
    }, /*#__PURE__*/React.createElement(Icon, {
      type: "qianjin"
    })));
  };
  return UndoRedo;
}(PureComponent);
UndoRedo.displayName = 'LowcodeUndoRedo';
var plugin = function plugin(ctx) {
  return {
    // 插件名，注册环境下唯一
    name: 'PluginUndoRedo',
    // 依赖的插件（插件名数组）
    dep: [],
    // 插件的初始化函数，在引擎初始化之后会立刻调用
    init: function init() {
      // 往引擎增加面板
      ctx.skeleton.add({
        area: 'topArea',
        type: 'Widget',
        name: 'undoRedo',
        content: UndoRedo,
        props: {
          align: 'right',
          width: 88
        }
      });
    }
  };
};
plugin.pluginName = 'PluginUndoRedo';
export default plugin;