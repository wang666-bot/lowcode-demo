import { IPublicTypeEngineOptions, IPublicApiWorkspace } from '@alilc/lowcode-types';
import { PluginPreference } from '@alilc/lowcode-designer';
import { Hotkey, Project, Skeleton, Setters, Material, Event, Plugins, Common, Logger, Canvas, Config, CommonUI, Command } from '@alilc/lowcode-shell';
import './modules/live-editing';
import * as classes from './modules/classes';
export * from './modules/skeleton-types';
export * from './modules/designer-types';
export * from './modules/lowcode-types';
declare const workspace: IPublicApiWorkspace;
declare const hotkey: Hotkey;
declare const project: Project;
declare const skeleton: Skeleton;
declare const setters: Setters;
declare const command: Command;
declare const material: Material;
declare const commonUI: CommonUI;
declare const config: Config;
declare const event: Event;
declare const logger: Logger;
declare const common: Common;
declare const canvas: Canvas;
declare let plugins: Plugins;
export { skeleton, plugins, project, setters, material, config, event, logger, hotkey, common, workspace, canvas, commonUI, command, };
export declare const isOpenSource = true;
export declare const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    symbols: {
        projectSymbol: symbol;
        documentSymbol: symbol;
        nodeSymbol: symbol;
        nodeChildrenSymbol: symbol;
        skeletonSymbol: symbol;
        editorSymbol: symbol;
        designerSymbol: symbol;
        settingPropEntrySymbol: symbol;
        settingTopEntrySymbol: symbol;
        designerCabinSymbol: symbol;
        editorCabinSymbol: symbol;
        skeletonCabinSymbol: symbol;
        propSymbol: symbol;
        simulatorHostSymbol: symbol;
        skeletonItemSymbol: symbol;
        simulatorRenderSymbol: symbol;
    };
    classes: typeof classes;
};
export declare const version: any;
export declare function init(container?: HTMLElement, options?: IPublicTypeEngineOptions, pluginPreference?: PluginPreference): Promise<void>;
export declare function destroy(): Promise<void>;
