"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = exports.CommandPlugin = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _nodeCommand = require("./node-command");
var _historyCommand = require("./history-command");
var CommandPlugin = exports.CommandPlugin = function CommandPlugin(ctx) {
  var plugins = ctx.plugins;
  return {
    init: function init() {
      return (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return plugins.register(_nodeCommand.nodeCommand, {}, {
                autoInit: true
              });
            case 2:
              _context.next = 4;
              return plugins.register(_historyCommand.historyCommand, {}, {
                autoInit: true
              });
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }))();
    },
    destroy: function destroy() {
      plugins["delete"](_nodeCommand.nodeCommand.pluginName);
      plugins["delete"](_historyCommand.historyCommand.pluginName);
    }
  };
};
CommandPlugin.pluginName = '___default_command___';
CommandPlugin.meta = {
  commandScope: 'common'
};
var _default = exports["default"] = CommandPlugin;