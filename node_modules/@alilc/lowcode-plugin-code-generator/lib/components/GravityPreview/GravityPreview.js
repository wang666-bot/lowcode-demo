"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.GravityPreview = GravityPreview;

var _react = _interopRequireWildcard(require("react"));

var _GravitySdk = _interopRequireDefault(require("./GravitySdk"));

var _ForceUpdate = require("./ForceUpdate");

var _fixPreviewCode = require("../CodeGenPreview/fixPreviewCode");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function GravityPreview(_ref) {
  var code = _ref.code,
      height = _ref.height,
      refresh = _ref.refresh;
  var fixedCode = (0, _react.useMemo)(function () {
    return fixGravityCode(code, refresh);
  }, [code, refresh]);

  if (!code || !fixedCode) {
    return null;
  }

  console.log('GravityPreview', fixedCode);
  return /*#__PURE__*/_react["default"].createElement(_ForceUpdate.ForceUpdate, {
    watchKey: refresh
  }, /*#__PURE__*/_react["default"].createElement(_GravitySdk["default"], {
    code: fixedCode,
    width: "100%",
    height: height
  }));
}

function fixGravityCode(code, refresh) {
  if (!code) {
    return null;
  }

  var fixed = (0, _fixPreviewCode.fixPreviewCode)(code);
  Object.assign(fixed.modules, {
    '/src/html.js': {
      fpath: '/src/html.js',
      code: "function runScript(script){\n  const newScript = document.createElement('script');\n  newScript.innerHTML = script.innerHTML;\n  const src = script.getAttribute('src');\n  if (src) newScript.setAttribute('src', src);\n\n  document.head.appendChild(newScript);\n  document.head.removeChild(newScript);\n}\n\nfunction setHTMLWithScript(container, rawHTML){\n  container.innerHTML = rawHTML;\n  const scripts = container.querySelectorAll('script');\n  for (let script of scripts) {\n    runScript(script);\n  }\n} var html = window.BrowserFS.BFSRequire('fs').readFileSync('/~/src/index.html').toString();setHTMLWithScript(document.getElementById(\"riddleContainer\"), html);",
      entry: 1
    }
  });
  return fixed;
}