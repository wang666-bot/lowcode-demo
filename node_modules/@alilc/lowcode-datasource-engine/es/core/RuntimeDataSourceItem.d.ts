import { IDataSourceRuntimeContext, IRuntimeDataSource, RequestHandler, RuntimeDataSourceConfig, RuntimeDataSourceStatus, UrlParamsHandler } from '@alilc/lowcode-types';
declare class RuntimeDataSourceItem<TParams extends Record<string, unknown> = Record<string, unknown>, TResultData = unknown> implements IRuntimeDataSource<TParams, TResultData> {
    private _data?;
    private _error?;
    private _status;
    private _dataSourceConfig;
    private _request;
    private _context;
    private _options?;
    constructor(dataSourceConfig: RuntimeDataSourceConfig, request: RequestHandler<{
        data: TResultData;
    }> | UrlParamsHandler<TResultData>, context: IDataSourceRuntimeContext);
    get data(): TResultData | undefined;
    get error(): Error | undefined;
    get status(): RuntimeDataSourceStatus;
    get isLoading(): boolean;
    load(params?: TParams): Promise<TResultData | undefined>;
}
export { RuntimeDataSourceItem };
