import * as React from 'react';
import PluginSchema from './editor';
import { enUS, zhCN } from './locale';
var plugin = function plugin(ctx, options) {
  return {
    // 插件的初始化函数，在引擎初始化之后会立刻调用
    init: function init() {
      var _ctx$common$utils$cre = ctx.common.utils.createIntl({
          'en-US': enUS,
          'zh-CN': zhCN
        }),
        intl = _ctx$common$utils$cre.intl,
        intlNode = _ctx$common$utils$cre.intlNode,
        getLocale = _ctx$common$utils$cre.getLocale;
      ctx.intl = intl;
      ctx.intlNode = intlNode;
      ctx.getLocale = getLocale;
      var isProjectSchema = (options && options['isProjectSchema']) === true;

      // 往引擎增加面板
      ctx.skeleton.add({
        area: 'leftArea',
        name: 'LowcodePluginAliLowcodePluginSchema',
        type: 'PanelDock',
        props: {
          align: 'bottom',
          icon: 'ellipsis',
          description: 'Schema'
        },
        panelProps: {
          width: 'calc(100% - 50px)'
        },
        content: function content() {
          return /*#__PURE__*/React.createElement(PluginSchema, {
            pluginContext: ctx,
            showProjectSchema: isProjectSchema
          });
        }
      });
    }
  };
};
plugin.pluginName = 'LowcodePluginAliLowcodePluginSchema';
plugin.meta = {
  preferenceDeclaration: {
    title: 'schema 面板配置',
    properties: [{
      key: 'isProjectSchema',
      type: 'boolean',
      description: '是否是项目级 schema',
      "default": false
    }]
  }
};
export default plugin;