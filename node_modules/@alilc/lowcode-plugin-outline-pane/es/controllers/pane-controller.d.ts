import { IPublicTypeScrollable, IPublicModelSensor, IPublicModelDropLocation, IPublicModelScrollTarget, IPublicModelLocateEvent } from '@alilc/lowcode-types';
import TreeNode from './tree-node';
import { ITreeBoard, TreeMaster } from './tree-master';
export declare class PaneController implements IPublicModelSensor, ITreeBoard, IPublicTypeScrollable {
    private pluginContext;
    private treeMaster?;
    readonly id: string;
    private indentTrack;
    private _sensorAvailable;
    /**
     * @see IPublicModelSensor
     */
    get sensorAvailable(): boolean;
    private dwell;
    /**
     * @see ITreeBoard
     */
    readonly at: string | symbol;
    private tryScrollAgain;
    private sensing;
    /**
     * @see IScrollable
     */
    get bounds(): DOMRect | null;
    private _scrollTarget?;
    /**
     * @see IScrollable
     */
    get scrollTarget(): IPublicModelScrollTarget;
    private scroller?;
    private _shell;
    constructor(at: string | symbol, treeMaster: TreeMaster);
    /** -------------------- IPublicModelSensor begin -------------------- */
    /**
     * @see IPublicModelSensor
     */
    fixEvent(e: IPublicModelLocateEvent): IPublicModelLocateEvent;
    /**
     * @see IPublicModelSensor
     */
    locate(e: IPublicModelLocateEvent): IPublicModelDropLocation | undefined | null;
    /**
     * @see IPublicModelSensor
     */
    isEnter(e: IPublicModelLocateEvent): boolean;
    /**
     * @see IPublicModelSensor
     */
    deactiveSensor(): void;
    /** -------------------- IPublicModelSensor end -------------------- */
    /** -------------------- ITreeBoard begin -------------------- */
    /**
     * @see ITreeBoard
     */
    scrollToNode(treeNode: TreeNode, detail?: any, tryTimes?: number): void;
    /** -------------------- ITreeBoard end -------------------- */
    private getNear;
    private drillLocate;
    purge(): void;
    mount(shell: HTMLDivElement | null): void;
    private getInsertionRect;
    private getTreeNodeRect;
    private getTreeTitleRect;
    private getTreeSlotsRect;
}
