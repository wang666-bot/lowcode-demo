"use strict";

exports.__esModule = true;
exports.IndentTrack = void 0;
var _lowcodeUtils = require("@alilc/lowcode-utils");
var IndentSensitive = 15;
var IndentTrack = exports.IndentTrack = /*#__PURE__*/function () {
  function IndentTrack() {
    this.indentStart = null;
  }
  var _proto = IndentTrack.prototype;
  _proto.reset = function reset() {
    this.indentStart = null;
  }

  // eslint-disable-next-line max-len
  ;
  _proto.getIndentParent = function getIndentParent(lastLoc, loc) {
    if (lastLoc.target !== loc.target || !(0, _lowcodeUtils.isLocationChildrenDetail)(lastLoc.detail) || !(0, _lowcodeUtils.isLocationChildrenDetail)(loc.detail) || lastLoc.source !== loc.source || lastLoc.detail.index !== loc.detail.index || loc.detail.index == null) {
      this.indentStart = null;
      return null;
    }
    if (this.indentStart == null) {
      this.indentStart = lastLoc.event.globalX;
    }
    var delta = loc.event.globalX - this.indentStart;
    var indent = Math.floor(Math.abs(delta) / IndentSensitive);
    if (indent < 1) {
      return null;
    }
    this.indentStart = loc.event.globalX;
    var direction = delta < 0 ? 'left' : 'right';
    var parent = loc.target;
    var index = loc.detail.index;
    if (direction === 'left') {
      var _parent$children;
      if (!parent.parent || index < (((_parent$children = parent.children) === null || _parent$children === void 0 ? void 0 : _parent$children.size) || 0) || parent.isSlotNode) {
        return null;
      }
      return [parent.parent, parent.index + 1];
    } else {
      var _parent$children2;
      if (index === 0) {
        return null;
      }
      parent = (_parent$children2 = parent.children) === null || _parent$children2 === void 0 ? void 0 : _parent$children2.get(index - 1);
      if (parent && parent.isContainerNode) {
        var _parent$children3;
        return [parent, (_parent$children3 = parent.children) === null || _parent$children3 === void 0 ? void 0 : _parent$children3.size];
      }
    }
    return null;
  };
  return IndentTrack;
}();