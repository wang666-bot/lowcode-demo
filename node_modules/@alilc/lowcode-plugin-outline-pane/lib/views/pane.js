"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.Pane = void 0;
var _loading = _interopRequireDefault(require("@alifd/next/lib/loading"));
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _react = _interopRequireWildcard(require("react"));
var _tree = _interopRequireDefault(require("./tree"));
require("./style.less");
var _filter = _interopRequireDefault(require("./filter"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var Pane = exports.Pane = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Pane, _PureComponent);
  function Pane(props) {
    var _this$props$treeMaste, _this$props$treeMaste2, _this$props$treeMaste3, _this$props$treeMaste4, _this$props$treeMaste5, _this$props$treeMaste6;
    var _this;
    _this = _PureComponent.call(this, props) || this;
    _this.controller = void 0;
    _this.simulatorRendererReadyDispose = void 0;
    _this.changeDocumentDispose = void 0;
    _this.removeDocumentDispose = void 0;
    _this.changeTree = function () {
      _this.setState({
        tree: _this.props.treeMaster.currentTree
      });
    };
    var controller = props.controller,
      treeMaster = props.treeMaster;
    _this.controller = controller;
    _this.state = {
      tree: treeMaster.currentTree
    };
    _this.simulatorRendererReadyDispose = (_this$props$treeMaste = _this.props.treeMaster.pluginContext) === null || _this$props$treeMaste === void 0 ? void 0 : (_this$props$treeMaste2 = _this$props$treeMaste.project) === null || _this$props$treeMaste2 === void 0 ? void 0 : _this$props$treeMaste2.onSimulatorRendererReady(_this.changeTree);
    _this.changeDocumentDispose = (_this$props$treeMaste3 = _this.props.treeMaster.pluginContext) === null || _this$props$treeMaste3 === void 0 ? void 0 : (_this$props$treeMaste4 = _this$props$treeMaste3.project) === null || _this$props$treeMaste4 === void 0 ? void 0 : _this$props$treeMaste4.onChangeDocument(_this.changeTree);
    _this.removeDocumentDispose = (_this$props$treeMaste5 = _this.props.treeMaster.pluginContext) === null || _this$props$treeMaste5 === void 0 ? void 0 : (_this$props$treeMaste6 = _this$props$treeMaste5.project) === null || _this$props$treeMaste6 === void 0 ? void 0 : _this$props$treeMaste6.onRemoveDocument(_this.changeTree);
    return _this;
  }
  var _proto = Pane.prototype;
  _proto.componentWillUnmount = function componentWillUnmount() {
    var _this$simulatorRender, _this$changeDocumentD, _this$removeDocumentD;
    this.controller.purge();
    (_this$simulatorRender = this.simulatorRendererReadyDispose) === null || _this$simulatorRender === void 0 ? void 0 : _this$simulatorRender.call(this);
    (_this$changeDocumentD = this.changeDocumentDispose) === null || _this$changeDocumentD === void 0 ? void 0 : _this$changeDocumentD.call(this);
    (_this$removeDocumentD = this.removeDocumentDispose) === null || _this$removeDocumentD === void 0 ? void 0 : _this$removeDocumentD.call(this);
  };
  _proto.render = function render() {
    var _this2 = this;
    var tree = this.state.tree;
    if (!tree) {
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "lc-outline-pane"
      }, /*#__PURE__*/_react["default"].createElement("p", {
        className: "lc-outline-notice"
      }, /*#__PURE__*/_react["default"].createElement(_loading["default"], {
        style: {
          display: 'block',
          marginTop: '40px'
        },
        tip: this.props.treeMaster.pluginContext.intl('Initializing')
      })));
    }
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "lc-outline-pane"
    }, !this.props.hideFilter && /*#__PURE__*/_react["default"].createElement(_filter["default"], {
      tree: tree
    }), /*#__PURE__*/_react["default"].createElement("div", {
      ref: function ref(shell) {
        return _this2.controller.mount(shell);
      },
      className: "lc-outline-tree-container " + (this.props.hideFilter ? 'lc-hidden-outline-filter' : '')
    }, /*#__PURE__*/_react["default"].createElement(_tree["default"], {
      key: tree.id,
      tree: tree
    })));
  };
  return Pane;
}(_react.PureComponent);