"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = void 0;
var _balloon = _interopRequireDefault(require("@alifd/next/lib/balloon"));
var _divider = _interopRequireDefault(require("@alifd/next/lib/divider"));
var _checkbox = _interopRequireDefault(require("@alifd/next/lib/checkbox"));
var _search = _interopRequireDefault(require("@alifd/next/lib/search"));
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _react = _interopRequireWildcard(require("react"));
require("./style.less");
var _filter = require("../icons/filter");
var _filterTree = require("./filter-tree");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var Filter = exports["default"] = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Filter, _PureComponent);
  function Filter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      keywords: '',
      filterOps: []
    };
    _this.handleSearchChange = function (val) {
      _this.setState({
        keywords: val.trim()
      }, _this.filterTree);
    };
    _this.handleOptionChange = function (val) {
      _this.setState({
        filterOps: val
      }, _this.filterTree);
    };
    _this.handleCheckAll = function () {
      var filterOps = _this.state.filterOps;
      var _final = filterOps.length === _filterTree.FILTER_OPTIONS.length ? [] : _filterTree.FILTER_OPTIONS.map(function (op) {
        return op.value;
      });
      _this.handleOptionChange(_final);
    };
    return _this;
  }
  var _proto = Filter.prototype;
  _proto.filterTree = function filterTree() {
    var tree = this.props.tree;
    var _this$state = this.state,
      keywords = _this$state.keywords,
      filterOps = _this$state.filterOps;
    (0, _filterTree.matchTreeNode)(tree.root, keywords, filterOps);
  };
  _proto.render = function render() {
    var _this2 = this;
    var _this$state2 = this.state,
      keywords = _this$state2.keywords,
      filterOps = _this$state2.filterOps;
    var indeterminate = filterOps.length > 0 && filterOps.length < _filterTree.FILTER_OPTIONS.length;
    var checkAll = filterOps.length === _filterTree.FILTER_OPTIONS.length;
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "lc-outline-filter"
    }, /*#__PURE__*/_react["default"].createElement(_search["default"], {
      hasClear: true,
      shape: "simple",
      placeholder: this.props.tree.pluginContext.intl('Filter Node'),
      className: "lc-outline-filter-search-input",
      value: keywords,
      onChange: this.handleSearchChange
    }), /*#__PURE__*/_react["default"].createElement(_balloon["default"], {
      v2: true,
      align: "br",
      closable: false,
      triggerType: "hover",
      trigger: /*#__PURE__*/_react["default"].createElement("div", {
        className: "lc-outline-filter-icon"
      }, /*#__PURE__*/_react["default"].createElement(_filter.IconFilter, null))
    }, /*#__PURE__*/_react["default"].createElement(_checkbox["default"], {
      checked: checkAll,
      indeterminate: indeterminate,
      onChange: this.handleCheckAll
    }, this.props.tree.pluginContext.intlNode('Check All')), /*#__PURE__*/_react["default"].createElement(_divider["default"], null), /*#__PURE__*/_react["default"].createElement(_checkbox["default"].Group, {
      value: filterOps,
      direction: "ver",
      onChange: this.handleOptionChange
    }, _filterTree.FILTER_OPTIONS.map(function (op) {
      return /*#__PURE__*/_react["default"].createElement(_checkbox["default"], {
        id: op.value,
        value: op.value,
        key: op.value
      }, _this2.props.tree.pluginContext.intlNode(op.label));
    }))));
  };
  return Filter;
}(_react.PureComponent);