import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { PureComponent } from 'react';
import { common } from '@alilc/lowcode-engine';
import { intl } from './locale';
import { IconZh } from './icons/zh';
import { IconEn } from './icons/en';
import './index.less';
var editorCabin = common.editorCabin;
var globalLocale = editorCabin.globalLocale,
    Tip = editorCabin.Tip;

var ZhEn = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(ZhEn, _PureComponent);

  function ZhEn() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      locale: globalLocale.getLocale()
    };
    _this.dispose = globalLocale.onChangeLocale(function (locale) {
      _this.setState({
        locale: locale
      });

      window.location.reload();
    });
    return _this;
  }

  var _proto = ZhEn.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.dispose();
  };

  _proto.render = function render() {
    var isZh = this.state.locale === 'zh-CN';
    return /*#__PURE__*/React.createElement("div", {
      className: "lowcode-plugin-zh-en",
      onClick: function onClick() {
        globalLocale.setLocale(isZh ? 'en-US' : 'zh-CN');
      }
    }, isZh ? /*#__PURE__*/React.createElement(IconEn, {
      size: 20
    }) : /*#__PURE__*/React.createElement(IconZh, {
      size: 20
    }), /*#__PURE__*/React.createElement(Tip, {
      direction: "right"
    }, intl('To Locale')));
  };

  return ZhEn;
}(PureComponent);

ZhEn.displayName = 'LowcodeZhEn';

var plugin = function plugin(ctx) {
  return {
    // 插件名，注册环境下唯一
    name: 'PluginZhEn',
    // 依赖的插件（插件名数组）
    dep: [],
    // 插件的初始化函数，在引擎初始化之后会立刻调用
    init: function init() {
      // 往引擎增加面板
      ctx.skeleton.add({
        area: 'leftArea',
        type: 'Widget',
        name: 'zhEn',
        content: ZhEn,
        contentProps: {},
        props: {
          align: 'bottom'
        }
      });
    }
  };
};

plugin.pluginName = 'PluginZhEn';
export default plugin;