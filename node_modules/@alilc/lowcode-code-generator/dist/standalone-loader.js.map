{
  "version": 3,
  "sources": ["../src/standalone-loader.ts"],
  "sourcesContent": ["import fetch from 'node-fetch';\nimport type { IPublicTypeProjectSchema, ResultDir } from '@alilc/lowcode-types';\nimport type { FlattenFile } from './types/file';\n\ndeclare const Worker: any;\ndeclare const self: any;\ndeclare const __PACKAGE_VERSION__: string;\n\nconst packageVersion = __PACKAGE_VERSION__ || 'latest';\n\nexport const DEFAULT_WORKER_JS = `https://cdn.jsdelivr.net/npm/@alilc/lowcode-code-generator@${packageVersion}/dist/standalone-worker.min.js`;\n\nexport const DEFAULT_TIMEOUT_IN_MS = 60 * 1000;\n\nconst workerJsCache = new Map<string, { content: string; url: string }>();\n\nexport async function init({\n  workerJsUrl = DEFAULT_WORKER_JS,\n}: {\n  workerJsUrl?: string;\n} = {}) {\n  await loadWorkerJs(workerJsUrl);\n}\n\nexport type Result = ResultDir | FlattenFile[];\n\nexport async function generateCode(options: {\n  solution: 'icejs' | 'rax';\n  schema: IPublicTypeProjectSchema;\n  flattenResult?: boolean;\n  workerJsUrl?: string;\n  timeoutInMs?: number;\n}): Promise<Result> {\n  if (typeof self !== 'object') {\n    throw new Error('self is not defined');\n  }\n\n  if (typeof Worker !== 'function') {\n    throw new Error('Worker is not supported');\n  }\n\n  const workerJsUrl = options.workerJsUrl || DEFAULT_WORKER_JS;\n\n  const workerJs = await loadWorkerJs(workerJsUrl);\n\n  const worker = new Worker(workerJs.url, {\n    type: 'classic',\n    credentials: 'omit',\n  });\n\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => {\n      reject(new Error('timeout'));\n      worker.terminate();\n    }, options.timeoutInMs || DEFAULT_TIMEOUT_IN_MS);\n\n    worker.onmessage = (event: any) => {\n      const msg = event.data;\n      switch (msg.type) {\n        case 'ready':\n          print('worker is ready.');\n          break;\n\n        case 'run:begin':\n          print('worker is running...');\n          break;\n        case 'run:end':\n          print('worker is done.');\n          resolve(msg.result);\n          clearTimeout(timer);\n          worker.terminate();\n          break;\n        case 'run:error':\n          printErr(`worker error: ${msg.errorMsg}`);\n          clearTimeout(timer);\n          reject(new Error(msg.errorMsg || 'unknown error'));\n          worker.terminate();\n          break;\n        default:\n          print('got unknown msg: %o', msg);\n          break;\n      }\n    };\n\n    worker.onerror = (err: any) => {\n      printErr('worker error: %o', err);\n      clearTimeout(timer);\n      reject(err);\n      worker.terminate();\n    };\n\n    worker.postMessage({\n      type: 'run',\n      solution: options.solution,\n      schema: options.schema,\n      flattenResult: options.flattenResult,\n    });\n  });\n}\n\nasync function loadWorkerJs(workerJsUrl: string) {\n  const cached = workerJsCache.get(workerJsUrl);\n  if (cached) {\n    return cached;\n  }\n\n  const workerJsContent = await fetch(workerJsUrl)\n    .then((res) => res.text())\n    .catch((err) => {\n      throw new Error(`Failed to fetch worker js: ${err}`);\n    });\n\n  const workerJs = {\n    content: workerJsContent,\n    url: self.URL.createObjectURL(\n      new self.Blob([workerJsContent], { type: 'application/javascript' }),\n    ),\n  };\n\n  workerJsCache.set(workerJsUrl, workerJs);\n\n  return workerJs;\n}\n\nfunction print(msg: string, ...args: unknown[]) {\n  // eslint-disable-next-line no-console\n  console.debug(`[code-generator/loader]: ${msg}`, ...args);\n}\n\nfunction printErr(msg: string, ...args: unknown[]) {\n  // eslint-disable-next-line no-console\n  console.debug(`[code-generator/loader]: %c${msg}`, 'color:red', ...args);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB;AAQlB,IAAM,iBAAiB;AAEhB,IAAM,oBAAoB,8DAA8D;AAExF,IAAM,wBAAwB,KAAK;AAE1C,IAAM,gBAAgB,oBAAI,IAA8C;AAExE,eAAsB,KAAK;AAAA,EACzB,cAAc;AAChB,IAEI,CAAC,GAAG;AACN,QAAM,aAAa,WAAW;AAChC;AAIA,eAAsB,aAAa,SAMf;AAClB,MAAI,OAAO,SAAS,UAAU;AAC5B,UAAM,IAAI,MAAM,qBAAqB;AAAA,EACvC;AAEA,MAAI,OAAO,WAAW,YAAY;AAChC,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AAEA,QAAM,cAAc,QAAQ,eAAe;AAE3C,QAAM,WAAW,MAAM,aAAa,WAAW;AAE/C,QAAM,SAAS,IAAI,OAAO,SAAS,KAAK;AAAA,IACtC,MAAM;AAAA,IACN,aAAa;AAAA,EACf,CAAC;AAED,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,QAAQ,WAAW,MAAM;AAC7B,aAAO,IAAI,MAAM,SAAS,CAAC;AAC3B,aAAO,UAAU;AAAA,IACnB,GAAG,QAAQ,eAAe,qBAAqB;AAE/C,WAAO,YAAY,CAAC,UAAe;AACjC,YAAM,MAAM,MAAM;AAClB,cAAQ,IAAI;AAAA,aACL;AACH,gBAAM,kBAAkB;AACxB;AAAA,aAEG;AACH,gBAAM,sBAAsB;AAC5B;AAAA,aACG;AACH,gBAAM,iBAAiB;AACvB,kBAAQ,IAAI,MAAM;AAClB,uBAAa,KAAK;AAClB,iBAAO,UAAU;AACjB;AAAA,aACG;AACH,mBAAS,iBAAiB,IAAI,UAAU;AACxC,uBAAa,KAAK;AAClB,iBAAO,IAAI,MAAM,IAAI,YAAY,eAAe,CAAC;AACjD,iBAAO,UAAU;AACjB;AAAA;AAEA,gBAAM,uBAAuB,GAAG;AAChC;AAAA;AAAA,IAEN;AAEA,WAAO,UAAU,CAAC,QAAa;AAC7B,eAAS,oBAAoB,GAAG;AAChC,mBAAa,KAAK;AAClB,aAAO,GAAG;AACV,aAAO,UAAU;AAAA,IACnB;AAEA,WAAO,YAAY;AAAA,MACjB,MAAM;AAAA,MACN,UAAU,QAAQ;AAAA,MAClB,QAAQ,QAAQ;AAAA,MAChB,eAAe,QAAQ;AAAA,IACzB,CAAC;AAAA,EACH,CAAC;AACH;AAEA,eAAe,aAAa,aAAqB;AAC/C,QAAM,SAAS,cAAc,IAAI,WAAW;AAC5C,MAAI,QAAQ;AACV,WAAO;AAAA,EACT;AAEA,QAAM,kBAAkB,UAAM,kBAAAA,SAAM,WAAW,EAC5C,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,EACxB,MAAM,CAAC,QAAQ;AACd,UAAM,IAAI,MAAM,8BAA8B,KAAK;AAAA,EACrD,CAAC;AAEH,QAAM,WAAW;AAAA,IACf,SAAS;AAAA,IACT,KAAK,KAAK,IAAI;AAAA,MACZ,IAAI,KAAK,KAAK,CAAC,eAAe,GAAG,EAAE,MAAM,yBAAyB,CAAC;AAAA,IACrE;AAAA,EACF;AAEA,gBAAc,IAAI,aAAa,QAAQ;AAEvC,SAAO;AACT;AAEA,SAAS,MAAM,QAAgB,MAAiB;AAE9C,UAAQ,MAAM,4BAA4B,OAAO,GAAG,IAAI;AAC1D;AAEA,SAAS,SAAS,QAAgB,MAAiB;AAEjD,UAAQ,MAAM,8BAA8B,OAAO,aAAa,GAAG,IAAI;AACzE;",
  "names": ["fetch"]
}
