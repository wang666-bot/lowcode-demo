/// <reference types="node" />
import { IPublicEnumTransformStage, IPublicModelComponentMeta } from '@alilc/lowcode-types';
interface Variable {
    type: 'variable';
    variable: string;
    value: any;
}
export declare function isVariable(obj: any): obj is Variable;
export declare function isUseI18NSetter(prototype: any, propName: string): boolean;
export declare function convertToI18NObject(v: string | any, locale?: string): any;
export declare function isString(v: any): v is string;
export declare function waitForThing(obj: any, path: string): Promise<any>;
export declare function arrShallowEquals(arr1: any[], arr2: any[]): boolean;
/**
 * 判断当前 meta 是否从 vc prototype 转换而来
 * @param meta
 */
export declare function isFromVC(meta: IPublicModelComponentMeta): boolean;
export declare function executePendingFn(fn: () => void, timeout?: number): NodeJS.Timeout;
/**
 * 兼容原来的数字版本的枚举对象
 * @param stage
 * @returns
 */
export declare function compatStage(stage: IPublicEnumTransformStage | number): IPublicEnumTransformStage;
export declare function invariant(check: any, message: string, thing?: any): void;
export declare function deprecate(fail: any, message: string, alterative?: string): void;
export declare function isRegExp(obj: any): obj is RegExp;
/**
 * The prop supportVariable SHOULD take precedence over default global supportVariable.
 * @param propSupportVariable prop supportVariable
 * @param globalSupportVariable global supportVariable
 * @returns
 */
export declare function shouldUseVariableSetter(propSupportVariable: boolean | undefined, globalSupportVariable: boolean): boolean;
export {};
