import { ComponentType } from 'react';
import { IPublicTypeNpmInfo, IPublicTypeComponentSchema, IPublicTypeProjectSchema } from '@alilc/lowcode-types';
declare type Component = ComponentType<any> | object;
interface LibraryMap {
    [key: string]: string;
}
export declare function accessLibrary(library: string | Record<string, unknown>): any;
export declare function generateHtmlComp(library: string): import("react").ForwardRefExoticComponent<import("react").RefAttributes<unknown>>;
export declare function getSubComponent(library: any, paths: string[]): any;
export declare function buildComponents(libraryMap: LibraryMap, componentsMap: {
    [componentName: string]: IPublicTypeNpmInfo | ComponentType<any> | IPublicTypeComponentSchema;
}, createComponent: (schema: IPublicTypeProjectSchema<IPublicTypeComponentSchema>) => Component | null): any;
export interface UtilsMetadata {
    name: string;
    npm: {
        package: string;
        version?: string;
        exportName: string;
        subName?: string;
        destructuring?: boolean;
        main?: string;
    };
}
interface LibrayMap {
    [key: string]: string;
}
interface ProjectUtils {
    [packageName: string]: any;
}
export declare function getProjectUtils(librayMap: LibrayMap, utilsMetadata: UtilsMetadata[]): ProjectUtils;
export {};
