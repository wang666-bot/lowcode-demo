import { AssetType, AssetLevel } from '@alilc/lowcode-types';
import type { AssetItem, Asset, AssetList, AssetBundle, IPublicTypeAssetsJson } from '@alilc/lowcode-types';
export { AssetType, AssetLevels, AssetLevel } from '@alilc/lowcode-types';
export type { AssetItem, Asset, AssetList, AssetBundle, IPublicTypeAssetsJson } from '@alilc/lowcode-types';
export declare function isAssetItem(obj: any): obj is AssetItem;
export declare function isAssetBundle(obj: any): obj is AssetBundle;
export declare function assetBundle(assets?: Asset | AssetList | null, level?: AssetLevel): AssetBundle | null;
export declare function assetItem(type: AssetType, content?: string | null, level?: AssetLevel, id?: string): AssetItem | null;
export declare function mergeAssets(assets: IPublicTypeAssetsJson, incrementalAssets: IPublicTypeAssetsJson): IPublicTypeAssetsJson;
export declare class StylePoint {
    private lastContent;
    private lastUrl;
    private placeholder;
    readonly level: number;
    readonly id: string;
    constructor(level: number, id?: string);
    applyText(content: string): void;
    applyUrl(url: string): Promise<any>;
}
export declare class AssetLoader {
    private stylePoints;
    load(asset: Asset): Promise<void>;
    private loadStyle;
    private loadScript;
    loadAsyncLibrary(asyncLibraryMap: Record<string, any>): Promise<void>;
}
