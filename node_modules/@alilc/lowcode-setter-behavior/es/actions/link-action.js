import _Select from "@alifd/next/lib/select";
import _Input from "@alifd/next/lib/input";
import _Radio from "@alifd/next/lib/radio";
import _extends from "@babel/runtime/helpers/extends";
import _Box from "@alifd/next/lib/box";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import * as React from 'react';

var fetchLinkList = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!url) {
              _context.next = 6;
              break;
            }

            _context.next = 3;
            return fetch(url);

          case 3:
            _context.t0 = _context.sent.json();
            _context.next = 7;
            break;

          case 6:
            _context.t0 = [];

          case 7:
            return _context.abrupt("return", _context.t0);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function fetchLinkList(_x) {
    return _ref.apply(this, arguments);
  };
}();

function fillDefaultValue(value) {
  if (typeof value !== 'object') {
    console.warn('value passed to fillDefaultValue should be an object');
    return;
  }

  if (!value.target) {
    value.target = '_self';
  }

  if (!value.type) {
    value.type = 'internal';
  }
}

var LinkContent = function LinkContent(_ref2) {
  var _ref2$value = _ref2.value,
      value = _ref2$value === void 0 ? {} : _ref2$value,
      _onChange = _ref2.onChange,
      _ref2$options = _ref2.options,
      options = _ref2$options === void 0 ? {} : _ref2$options;
  fillDefaultValue(value);
  var url = options.url,
      responseFormatter = options.responseFormatter;
  var formatter = responseFormatter;

  var _React$useState = React.useState([]),
      data = _React$useState[0],
      setData = _React$useState[1];

  React.useEffect(function () {
    var ignore = false;
    fetchLinkList(url).then(function (result) {
      if (!ignore) {
        setData(formatter ? formatter(result) : result);
      }
    });
    return function () {
      ignore = true;
    };
  }, [url, formatter]);
  return /*#__PURE__*/React.createElement(_Box, null, /*#__PURE__*/React.createElement(_Box, {
    direction: "row",
    align: "center",
    className: "behavior-item"
  }, /*#__PURE__*/React.createElement(_Box, {
    style: {
      width: 70
    }
  }, "\u8DF3\u8F6C\u65B9\u5F0F"), /*#__PURE__*/React.createElement(_Box, {
    className: "behavior-radio"
  }, /*#__PURE__*/React.createElement(_Radio.Group, {
    size: "small",
    dataSource: [{
      label: '当前窗口打开',
      value: '_self'
    }, {
      label: '新窗口打开',
      value: '_blank'
    }],
    defaultValue: "_self",
    shape: "button",
    value: value.target || '_self',
    onChange: function onChange(target) {
      _onChange(_extends({}, value, {
        target: target
      }));
    }
  }))), /*#__PURE__*/React.createElement(_Box, {
    direction: "row",
    align: "center",
    className: "behavior-item"
  }, /*#__PURE__*/React.createElement(_Box, {
    style: {
      width: 70
    }
  }, "\u8DF3\u8F6C\u7C7B\u578B"), /*#__PURE__*/React.createElement(_Box, {
    className: "behavior-radio"
  }, /*#__PURE__*/React.createElement(_Radio.Group, {
    size: "small",
    dataSource: [{
      label: '内部页面',
      value: 'internal'
    }, {
      label: '外部链接',
      value: 'external'
    }],
    defaultValue: "internal",
    shape: "button",
    value: value.type || 'internal',
    onChange: function onChange(type) {
      _onChange(_extends({}, value, {
        type: type
      }));
    }
  }))), /*#__PURE__*/React.createElement(_Box, {
    direction: "row",
    align: "center",
    className: "behavior-item"
  }, /*#__PURE__*/React.createElement(_Box, {
    style: {
      width: 70
    }
  }, "\u8DF3\u8F6C\u9875\u9762"), /*#__PURE__*/React.createElement(_Box, {
    className: "behavior-radio"
  }, (value === null || value === void 0 ? void 0 : value.type) === 'external' ? /*#__PURE__*/React.createElement(_Input, {
    size: "small",
    hasClear: true,
    placeholder: "\u8BF7\u8F93\u5165\u94FE\u63A5",
    value: value.url,
    onChange: function onChange(val) {
      _onChange({
        type: value.type || 'internal',
        url: val
      });
    }
  }) : /*#__PURE__*/React.createElement(_Select, {
    size: "small",
    hasClear: true,
    showSearch: true,
    dataSource: data,
    value: value === null || value === void 0 ? void 0 : value.url,
    onChange: function onChange(val) {
      _onChange(_extends({}, value, {
        url: val
      }));
    }
  }))));
};

export var linkBehaviorAction = {
  name: 'link',
  title: '链接',
  render: function render(props) {
    return /*#__PURE__*/React.createElement(LinkContent, props);
  },
  toActionValue: function toActionValue(link) {
    return link.url ? {
      type: 'JSExpression',
      value: "function() {window.open('" + link.url + "', '" + link.target + "');}"
    } : null;
  }
};