import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import _Radio from "@alifd/next/lib/radio";
import _Select from "@alifd/next/lib/select";
import _Box from "@alifd/next/lib/box";
import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
import { useState, useMemo } from 'react';
import './index.scss';
import { linkBehaviorAction } from './actions/link-action';
import { dialogBehaviorAction } from './actions/dialog-action';
import { messageBehaviorAction } from './actions/message-action';
import { tooltipBehaviorAction } from './actions/tooltip-action';
var defaultActionMap = {
  dialog: dialogBehaviorAction,
  link: linkBehaviorAction,
  tooltip: tooltipBehaviorAction,
  message: messageBehaviorAction
};

var BehaviorSetter = function BehaviorSetter(_ref) {
  var _ref$value = _ref.value,
      behaviors = _ref$value === void 0 ? {} : _ref$value,
      onChange = _ref.onChange,
      propsField = _ref.field,
      prop = _ref.prop,
      actions = _ref.actions,
      propsType = _ref.type,
      _ref$extraBehaviorAct = _ref.extraBehaviorActions,
      propsBehaviorActions = _ref$extraBehaviorAct === void 0 ? [] : _ref$extraBehaviorAct,
      _ref$extendedOptions = _ref.extendedOptions,
      extendedOptions = _ref$extendedOptions === void 0 ? {} : _ref$extendedOptions,
      url = _ref.url,
      responseFormatter = _ref.responseFormatter,
      enableMessageAction = _ref.enableMessageAction,
      enableTooltipAction = _ref.enableTooltipAction;
  var field = propsField || prop;

  var _useState = useState(actions[0]),
      currentEvent = _useState[0],
      setCurrentEvent = _useState[1];
  /** 当前的行为集合 */


  var currentBehavior = behaviors[currentEvent] || {};
  var currentBehaviorType = currentBehavior.type || propsType || 'dialog';
  var defaultActions = [];
  defaultActions.push(defaultActionMap.dialog, defaultActionMap.link);

  if (enableMessageAction) {
    defaultActions.push(defaultActionMap.message);
  }

  if (enableTooltipAction) {
    defaultActions.push(defaultActionMap.tooltip);
  }

  var behaviorActions = useMemo(function () {
    return [].concat(defaultActions, propsBehaviorActions);
  }, [propsBehaviorActions]);

  var updateCurrentEventBehavior = function updateCurrentEventBehavior(type, newVal) {
    var _currentEvent, _extends2;

    onChange(_extends({}, behaviors, (_extends2 = {}, _extends2[currentEvent] = (_currentEvent = {
      type: type
    }, _currentEvent[type] = newVal, _currentEvent), _extends2)));
  };

  var behaviorOption = behaviorActions.find(function (vo) {
    return vo.name === currentBehaviorType;
  });
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_Box, {
    direction: "row",
    align: "center",
    className: "behavior-item"
  }, /*#__PURE__*/React.createElement(_Box, {
    style: {
      width: 70
    }
  }, "\u4E8B\u4EF6\u5217\u8868"), /*#__PURE__*/React.createElement(_Box, {
    className: "behavior-radio"
  }, /*#__PURE__*/React.createElement(_Select, {
    size: "small",
    dataSource: actions.map(function (action) {
      return {
        label: action,
        value: action
      };
    }),
    value: currentEvent,
    onChange: function onChange(eventName) {
      return setCurrentEvent(eventName);
    }
  }))), /*#__PURE__*/React.createElement(_Box, {
    direction: "row",
    align: "center",
    className: "behavior-item"
  }, /*#__PURE__*/React.createElement(_Box, {
    style: {
      width: 70
    }
  }, "\u64CD\u4F5C\u7C7B\u578B"), /*#__PURE__*/React.createElement(_Box, {
    className: "behavior-radio"
  }, /*#__PURE__*/React.createElement(_Radio.Group, {
    size: "small",
    dataSource: behaviorActions.map(function (vo) {
      return {
        value: vo.name,
        label: vo.title,
        disabled: propsType && vo.name !== propsType
      };
    }),
    value: currentBehaviorType,
    shape: "button",
    onChange: function onChange(behaviorType) {
      return updateCurrentEventBehavior(behaviorType, undefined);
    }
  }))), /*#__PURE__*/React.createElement(ErrorBoundary, null, behaviorOption && behaviorOption.render({
    field: field,
    value: currentBehavior[currentBehaviorType],
    onChange: function onChange(behaviorValue) {
      field.parent.setPropValue(currentEvent, behaviorOption.toActionValue(behaviorValue, extendedOptions[currentBehaviorType]));
      updateCurrentEventBehavior(currentBehaviorType, behaviorValue);
    },
    options: currentBehaviorType === 'link' ? _extends({}, extendedOptions[currentBehaviorType], {
      url: url,
      responseFormatter: responseFormatter
    }) : extendedOptions[currentBehaviorType]
  })));
};

export default BehaviorSetter; // eslint-disable-next-line @iceworks/best-practices/recommend-functional-component

var ErrorBoundary = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(ErrorBoundary, _React$Component);

  function ErrorBoundary() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      hasError: false,
      error: undefined
    };
    return _this;
  }

  var _proto = ErrorBoundary.prototype;

  _proto.componentDidCatch = function componentDidCatch(error, errorInfo) {
    // 你同样可以将错误日志上报给服务器
    console.error(error, errorInfo);
  };

  _proto.render = function render() {
    if (this.state.hasError) {
      var _this$state$error;

      // 你可以自定义降级后的 UI 并渲染
      return /*#__PURE__*/React.createElement("div", null, "\u6E32\u67D3\u5F02\u5E38: ", ((_this$state$error = this.state.error) === null || _this$state$error === void 0 ? void 0 : _this$state$error.message) || this.state.error || '');
    }

    return this.props.children;
  };

  return ErrorBoundary;
}(React.Component);

ErrorBoundary.getDerivedStateFromError = function (error) {
  return {
    hasError: true,
    error: error
  };
};