"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _box = _interopRequireDefault(require("@alifd/next/lib/box"));

var _input = _interopRequireDefault(require("@alifd/next/lib/input"));

var _switch = _interopRequireDefault(require("@alifd/next/lib/switch"));

var React = _interopRequireWildcard(require("react"));

require("./index.scss");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var TitleSetter = function TitleSetter(props) {
  var value = props.value,
      defaultValue = props.defaultValue,
      defaultChecked = props.defaultChecked,
      onChange = props.onChange;

  var _React$useState = React.useState(defaultChecked),
      checked = _React$useState[0],
      setChecked = _React$useState[1];

  var theVal = value || defaultValue;

  var handleToggle = function handleToggle(vis) {
    onChange === null || onChange === void 0 ? void 0 : onChange(vis ? theVal : '');
    setChecked(vis);
  };

  var handleChangeText = function handleChangeText(text) {
    onChange === null || onChange === void 0 ? void 0 : onChange(text);
  };

  return /*#__PURE__*/React.createElement(_box["default"], {
    className: "setter-title",
    direction: "row",
    align: "center",
    spacing: 10
  }, /*#__PURE__*/React.createElement(_switch["default"], {
    size: "small",
    checked: checked,
    onChange: handleToggle
  }), checked && /*#__PURE__*/React.createElement(_input["default"], {
    size: "small",
    value: theVal,
    onChange: handleChangeText
  }));
};

var _default = TitleSetter;
exports["default"] = _default;