"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _pane = _interopRequireDefault(require("./pane"));
var ComponentPanelPlugin = function ComponentPanelPlugin(ctx) {
  return {
    init: function init() {
      return (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
        var _componentsPane$disab;
        var skeleton, project, componentsPane;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              skeleton = ctx.skeleton, project = ctx.project; // 注册组件面板
              componentsPane = skeleton.add({
                area: 'leftArea',
                type: 'PanelDock',
                name: 'componentsPane',
                content: _pane["default"],
                contentProps: {},
                props: {
                  align: 'top',
                  icon: 'zujianku',
                  description: '组件库'
                }
              });
              componentsPane === null || componentsPane === void 0 ? void 0 : (_componentsPane$disab = componentsPane.disable) === null || _componentsPane$disab === void 0 ? void 0 : _componentsPane$disab.call(componentsPane);
              project.onSimulatorRendererReady(function () {
                var _componentsPane$enabl;
                componentsPane === null || componentsPane === void 0 ? void 0 : (_componentsPane$enabl = componentsPane.enable) === null || _componentsPane$enabl === void 0 ? void 0 : _componentsPane$enabl.call(componentsPane);
              });
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }))();
    }
  };
};
ComponentPanelPlugin.pluginName = 'ComponentPanelPlugin';
var _default = ComponentPanelPlugin;
exports["default"] = _default;