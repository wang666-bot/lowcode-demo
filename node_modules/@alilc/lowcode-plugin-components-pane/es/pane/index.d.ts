import React from 'react';
import { PluginProps } from '@alilc/lowcode-types';
import ComponentManager from '../store';
import { SortedGroups, Text, StandardComponentMeta, SnippetMeta } from '../utils/transform';
interface ComponentPaneProps extends PluginProps {
    [key: string]: any;
}
interface ComponentPaneState {
    groups: SortedGroups[];
    filter: SortedGroups[];
    keyword: string;
}
export default class ComponentPane extends React.Component<ComponentPaneProps, ComponentPaneState> {
    static displayName: string;
    static defaultProps: {
        lang: string;
    };
    state: ComponentPaneState;
    store: ComponentManager;
    t: (input: Text) => string;
    getStrKeywords: (keywords: Text[]) => string;
    getKeyToSearch(c: StandardComponentMeta | SnippetMeta): string;
    getFilteredComponents: any;
    constructor(props: any);
    componentDidMount(): void;
    /**
     * 初始化组件列表
     * TODO: 无副作用，可多次执行
     */
    initComponentList(): void;
    registerAdditive: (shell: HTMLDivElement | null) => void;
    handleSearch: (keyword?: string) => void;
    renderEmptyContent(): JSX.Element;
    renderContent(): JSX.Element;
    render(): JSX.Element;
}
export declare const PaneIcon: any;
export {};
