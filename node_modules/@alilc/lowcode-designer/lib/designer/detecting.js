"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.Detecting = void 0;
var _initializerDefineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerDefineProperty"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));
var _initializerWarningHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerWarningHelper"));
var _lowcodeEditorCore = require("@alilc/lowcode-editor-core");
var _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3;
var DETECTING_CHANGE_EVENT = 'detectingChange';
var Detecting = exports.Detecting = (_dec = _lowcodeEditorCore.obx.ref, _dec2 = _lowcodeEditorCore.obx.ref, _dec3 = _lowcodeEditorCore.obx.ref, (_class = /*#__PURE__*/function () {
  function Detecting() {
    (0, _initializerDefineProperty2["default"])(this, "_enable", _descriptor, this);
    (0, _initializerDefineProperty2["default"])(this, "xRayMode", _descriptor2, this);
    (0, _initializerDefineProperty2["default"])(this, "_current", _descriptor3, this);
    this.emitter = (0, _lowcodeEditorCore.createModuleEventBus)('Detecting');
    (0, _lowcodeEditorCore.makeObservable)(this);
  }
  var _proto = Detecting.prototype;
  _proto.capture = function capture(node) {
    if (this._current !== node) {
      this._current = node;
      this.emitter.emit(DETECTING_CHANGE_EVENT, this.current);
    }
  };
  _proto.release = function release(node) {
    if (this._current === node) {
      this._current = null;
      this.emitter.emit(DETECTING_CHANGE_EVENT, this.current);
    }
  };
  _proto.leave = function leave(document) {
    if (this.current && this.current.document === document) {
      this._current = null;
    }
  };
  _proto.onDetectingChange = function onDetectingChange(fn) {
    var _this = this;
    this.emitter.on(DETECTING_CHANGE_EVENT, fn);
    return function () {
      _this.emitter.off(DETECTING_CHANGE_EVENT, fn);
    };
  };
  (0, _createClass2["default"])(Detecting, [{
    key: "enable",
    get:
    /**
     * 控制大纲树 hover 时是否出现悬停效果
     * TODO: 将该逻辑从设计器中抽离出来
     */
    function get() {
      return this._enable;
    },
    set: function set(flag) {
      this._enable = flag;
      if (!flag) {
        this._current = null;
      }
    }
  }, {
    key: "current",
    get: function get() {
      return this._current;
    }
  }]);
  return Detecting;
}(), (_descriptor = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "_enable", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return true;
  }
}), _descriptor2 = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "xRayMode", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return false;
  }
}), _descriptor3 = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "_current", [_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return null;
  }
})), _class));