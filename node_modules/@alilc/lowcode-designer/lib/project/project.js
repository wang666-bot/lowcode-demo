"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.Project = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _initializerDefineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerDefineProperty"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));
var _initializerWarningHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/initializerWarningHelper"));
var _lowcodeEditorCore = require("@alilc/lowcode-editor-core");
var _document = require("../document");
var _lowcodeTypes = require("@alilc/lowcode-types");
var _lowcodeUtils = require("@alilc/lowcode-utils");
var _dec, _dec2, _class, _descriptor, _descriptor2, _descriptor3;
var Project = exports.Project = (_dec = _lowcodeEditorCore.obx.shallow, _dec2 = _lowcodeEditorCore.obx.ref, (_class = /*#__PURE__*/function () {
  function Project(designer, schema, viewName) {
    if (viewName === void 0) {
      viewName = 'global';
    }
    this.designer = designer;
    this.viewName = viewName;
    this.emitter = (0, _lowcodeEditorCore.createModuleEventBus)('Project');
    (0, _initializerDefineProperty2["default"])(this, "documents", _descriptor, this);
    this.data = {
      version: '1.0.0',
      componentsMap: [],
      componentsTree: [],
      i18n: {}
    };
    this._simulator = void 0;
    this.isRendererReady = false;
    (0, _initializerDefineProperty2["default"])(this, "_config", _descriptor2, this);
    (0, _initializerDefineProperty2["default"])(this, "_i18n", _descriptor3, this);
    this.documentsMap = new Map();
    (0, _lowcodeEditorCore.makeObservable)(this);
    this.load(schema);
  }
  var _proto = Project.prototype;
  _proto.getComponentsMap = function getComponentsMap() {
    return this.documents.reduce(function (componentsMap, curDoc) {
      var curComponentsMap = curDoc.getComponentsMap();
      if (Array.isArray(curComponentsMap)) {
        curComponentsMap.forEach(function (item) {
          var found = componentsMap.find(function (eItem) {
            if ((0, _lowcodeUtils.isProCodeComponentType)(eItem) && (0, _lowcodeUtils.isProCodeComponentType)(item) && eItem["package"] === item["package"] && eItem.componentName === item.componentName) {
              return true;
            } else if ((0, _lowcodeUtils.isLowCodeComponentType)(eItem) && eItem.componentName === item.componentName) {
              return true;
            }
            return false;
          });
          if (found) return;
          componentsMap.push(item);
        });
      }
      return componentsMap;
    }, []);
  }

  /**
   * 获取项目整体 schema
   */;
  _proto.getSchema = function getSchema(stage) {
    if (stage === void 0) {
      stage = _lowcodeTypes.IPublicEnumTransformStage.Save;
    }
    return (0, _extends2["default"])({}, this.data, {
      componentsMap: this.getComponentsMap(),
      componentsTree: this.documents.filter(function (doc) {
        return !doc.isBlank();
      }).map(function (doc) {
        return doc["export"](stage) || {};
      }),
      i18n: this.i18n
    });
  }

  /**
   * 替换当前 document 的 schema，并触发渲染器的 render
   * @param schema
   */;
  _proto.setSchema = function setSchema(schema) {
    var _this$simulator;
    // FIXME: 这里的行为和 getSchema 并不对等，感觉不太对
    var doc = this.documents.find(function (doc) {
      return doc.active;
    });
    doc && (schema === null || schema === void 0 ? void 0 : schema.componentsTree[0]) && doc["import"](schema === null || schema === void 0 ? void 0 : schema.componentsTree[0]);
    (_this$simulator = this.simulator) === null || _this$simulator === void 0 ? void 0 : _this$simulator.rerender();
  }

  /**
   * 整体设置项目 schema
   *
   * @param autoOpen true 自动打开文档 string 指定打开的文件
   */;
  _proto.load = function load(schema, autoOpen) {
    var _this = this;
    this.unload();
    // load new document
    this.data = (0, _extends2["default"])({
      version: '1.0.0',
      componentsMap: [],
      componentsTree: [],
      i18n: {}
    }, schema);
    this.config = (schema === null || schema === void 0 ? void 0 : schema.config) || this.config;
    this.i18n = (schema === null || schema === void 0 ? void 0 : schema.i18n) || this.i18n;
    if (autoOpen) {
      if (autoOpen === true) {
        var _this$config, _this$config$layout, _this$config$layout$p, _this$config$layout$p2, _this$config$layout$p3;
        // auto open first document or open a blank page
        // this.open(this.data.componentsTree[0]);
        var documentInstances = this.data.componentsTree.map(function (data) {
          return _this.createDocument(data);
        });
        // TODO: 暂时先读 config tabBar 里的值，后面看整个 layout 结构是否能作为引擎规范
        if (((_this$config = this.config) === null || _this$config === void 0 ? void 0 : (_this$config$layout = _this$config.layout) === null || _this$config$layout === void 0 ? void 0 : (_this$config$layout$p = _this$config$layout.props) === null || _this$config$layout$p === void 0 ? void 0 : (_this$config$layout$p2 = _this$config$layout$p.tabBar) === null || _this$config$layout$p2 === void 0 ? void 0 : (_this$config$layout$p3 = _this$config$layout$p2.items) === null || _this$config$layout$p3 === void 0 ? void 0 : _this$config$layout$p3.length) > 0) {
          var _documentInstances$fi;
          // slice(1) 这个贼不雅，默认任务 fileName 是类'/fileName'的形式
          (_documentInstances$fi = documentInstances.find(function (i) {
            var _this$config$layout$p4;
            return i.fileName === ((_this$config$layout$p4 = _this.config.layout.props.tabBar.items[0].path) === null || _this$config$layout$p4 === void 0 ? void 0 : _this$config$layout$p4.slice(1));
          })) === null || _documentInstances$fi === void 0 ? void 0 : _documentInstances$fi.open();
        } else {
          documentInstances[0].open();
        }
      } else {
        // auto open should be string of fileName
        this.open(autoOpen);
      }
    }
  }

  /**
   * 卸载当前项目数据
   */;
  _proto.unload = function unload() {
    if (this.documents.length < 1) {
      return;
    }
    for (var i = this.documents.length - 1; i >= 0; i--) {
      this.documents[i].remove();
    }
  };
  _proto.removeDocument = function removeDocument(doc) {
    var index = this.documents.indexOf(doc);
    if (index < 0) {
      return;
    }
    this.documents.splice(index, 1);
    this.documentsMap["delete"](doc.id);
  }

  /**
   * 分字段设置储存数据，不记录操作记录
   */;
  _proto.set = function set(key, value) {
    var _Object$assign;
    if (key === 'config') {
      this.config = value;
    }
    if (key === 'i18n') {
      this.i18n = value;
    }
    Object.assign(this.data, (_Object$assign = {}, _Object$assign[key] = value, _Object$assign));
  }

  /**
   * 分字段设置储存数据
   */;
  _proto.get = function get(key) {
    if (key === 'config') {
      return this.config;
    }
    if (key === 'i18n') {
      return this.i18n;
    }
    return Reflect.get(this.data, key);
  };
  _proto.getDocument = function getDocument(id) {
    // 此处不能使用 this.documentsMap.get(id)，因为在乐高 rollback 场景，document.id 会被改成其他值
    return this.documents.find(function (doc) {
      return doc.id === id;
    }) || null;
  };
  _proto.getDocumentByFileName = function getDocumentByFileName(fileName) {
    return this.documents.find(function (doc) {
      return doc.fileName === fileName;
    }) || null;
  };
  _proto.createDocument = function createDocument(data) {
    var _this$data, _this$data$components;
    var doc = new _document.DocumentModel(this, data || (this === null || this === void 0 ? void 0 : (_this$data = this.data) === null || _this$data === void 0 ? void 0 : (_this$data$components = _this$data.componentsTree) === null || _this$data$components === void 0 ? void 0 : _this$data$components[0]));
    this.documents.push(doc);
    this.documentsMap.set(doc.id, doc);
    return doc;
  };
  _proto.open = function open(doc) {
    if (!doc) {
      var got = this.documents.find(function (item) {
        return item.isBlank();
      });
      if (got) {
        return got.open();
      }
      doc = this.createDocument();
      return doc.open();
    }
    if (typeof doc === 'string' || typeof doc === 'number') {
      var _got = this.documents.find(function (item) {
        return item.fileName === String(doc) || String(item.id) === String(doc);
      });
      if (_got) {
        return _got.open();
      }
      var _data = this.data.componentsTree.find(function (data) {
        return data.fileName === String(doc);
      });
      if (_data) {
        doc = this.createDocument(_data);
        return doc.open();
      }
      return null;
    } else if ((0, _document.isDocumentModel)(doc)) {
      return doc.open();
    }
    //  else if (isPageSchema(doc)) {
    // 暂时注释掉，影响了 diff 功能
    // const foundDoc = this.documents.find(curDoc => curDoc?.rootNode?.id && curDoc?.rootNode?.id === doc?.id);
    // if (foundDoc) {
    //   foundDoc.remove();
    // }
    // }

    doc = this.createDocument(doc);
    return doc.open();
  };
  _proto.checkExclusive = function checkExclusive(activeDoc) {
    this.documents.forEach(function (doc) {
      if (doc !== activeDoc) {
        doc.suspense();
      }
    });
    this.emitter.emit('current-document.change', activeDoc);
  };
  _proto.closeOthers = function closeOthers(opened) {
    this.documents.forEach(function (doc) {
      if (doc !== opened) {
        doc.close();
      }
    });
  };
  _proto.mountSimulator = function mountSimulator(simulator) {
    // TODO: 多设备 simulator 支持
    this._simulator = simulator;
    this.emitter.emit('lowcode_engine_simulator_ready', simulator);
  };
  _proto.setRendererReady = function setRendererReady(renderer) {
    this.isRendererReady = true;
    this.emitter.emit('lowcode_engine_renderer_ready', renderer);
  };
  _proto.onSimulatorReady = function onSimulatorReady(fn) {
    var _this2 = this;
    if (this._simulator) {
      fn(this._simulator);
      return function () {};
    }
    this.emitter.on('lowcode_engine_simulator_ready', fn);
    return function () {
      _this2.emitter.removeListener('lowcode_engine_simulator_ready', fn);
    };
  };
  _proto.onRendererReady = function onRendererReady(fn) {
    var _this3 = this;
    if (this.isRendererReady) {
      fn();
    }
    this.emitter.on('lowcode_engine_renderer_ready', fn);
    return function () {
      _this3.emitter.removeListener('lowcode_engine_renderer_ready', fn);
    };
  };
  _proto.onCurrentDocumentChange = function onCurrentDocumentChange(fn) {
    var _this4 = this;
    this.emitter.on('current-document.change', fn);
    return function () {
      _this4.emitter.removeListener('current-document.change', fn);
    };
  };
  (0, _createClass2["default"])(Project, [{
    key: "simulator",
    get:
    /**
     * 模拟器
     */
    function get() {
      return this._simulator || null;
    }
  }, {
    key: "currentDocument",
    get: function get() {
      return this.documents.find(function (doc) {
        return doc.active;
      });
    }
  }, {
    key: "config",
    get: function get() {
      // TODO: parse layout Component
      return this._config;
    },
    set: function set(value) {
      this._config = value;
    }
  }, {
    key: "i18n",
    get: function get() {
      return this._i18n;
    },
    set: function set(value) {
      this._i18n = value || {};
    }
  }]);
  return Project;
}(), (_descriptor = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "documents", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return [];
  }
}), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "currentDocument", [_lowcodeEditorCore.computed], Object.getOwnPropertyDescriptor(_class.prototype, "currentDocument"), _class.prototype), _descriptor2 = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "_config", [_lowcodeEditorCore.obx], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return {};
  }
}), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "config", [_lowcodeEditorCore.computed], Object.getOwnPropertyDescriptor(_class.prototype, "config"), _class.prototype), _descriptor3 = (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "_i18n", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return {};
  }
}), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "i18n", [_lowcodeEditorCore.computed], Object.getOwnPropertyDescriptor(_class.prototype, "i18n"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "load", [_lowcodeEditorCore.action], Object.getOwnPropertyDescriptor(_class.prototype, "load"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "createDocument", [_lowcodeEditorCore.action], Object.getOwnPropertyDescriptor(_class.prototype, "createDocument"), _class.prototype)), _class));