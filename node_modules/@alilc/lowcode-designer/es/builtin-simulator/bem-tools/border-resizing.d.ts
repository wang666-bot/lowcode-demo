import { Component } from 'react';
import { BuiltinSimulatorHost } from '../host';
import { OffsetObserver, Designer, INode } from '../../designer';
import { Node } from '../../document';
export default class BoxResizing extends Component<{
    host: BuiltinSimulatorHost;
}> {
    static contextType: import("react").Context<BuiltinSimulatorHost>;
    get host(): BuiltinSimulatorHost;
    get dragging(): boolean;
    get selecting(): INode[];
    componentDidUpdate(): void;
    render(): JSX.Element;
}
export declare class BoxResizingForNode extends Component<{
    host: BuiltinSimulatorHost;
    node: Node;
}> {
    static contextType: import("react").Context<BuiltinSimulatorHost>;
    get host(): BuiltinSimulatorHost;
    get dragging(): boolean;
    get instances(): import("@alilc/lowcode-types").IPublicTypeComponentInstance[];
    render(): JSX.Element;
}
export declare class BoxResizingInstance extends Component<{
    observed: OffsetObserver;
    highlight?: boolean;
    dragging?: boolean;
    designer?: Designer;
}> {
    private willUnbind;
    private outlineN;
    private outlineE;
    private outlineS;
    private outlineW;
    private outlineNE;
    private outlineNW;
    private outlineSE;
    private outlineSW;
    private dragEngine;
    constructor(props: any);
    componentWillUnmount(): void;
    componentDidMount(): void;
    willBind(): void;
    render(): JSX.Element;
}
