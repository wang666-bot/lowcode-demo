import _createClass from "@babel/runtime/helpers/createClass";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
var _class, _class2, _BoxResizingForNode, _class3, _class4, _class5, _BoxResizing;
import React, { Component, Fragment } from 'react';
import DragResizeEngine from './drag-resize-engine';
import { observer, computed } from '@alilc/lowcode-editor-core';
import classNames from 'classnames';
import { SimulatorContext } from '../context';
import { normalizeTriggers } from '../../utils/misc';
var BoxResizing = observer(_class4 = (_class5 = (_BoxResizing = /*#__PURE__*/function (_Component3) {
  _inheritsLoose(BoxResizing, _Component3);
  function BoxResizing() {
    return _Component3.apply(this, arguments) || this;
  }
  var _proto3 = BoxResizing.prototype;
  _proto3.componentDidUpdate = function componentDidUpdate() {
    // this.hoveringCapture.setBoundary(this.outline);
    // this.willBind();
  };
  _proto3.render = function render() {
    var _this5 = this;
    var selecting = this.selecting;
    if (!selecting || selecting.length < 1) {
      // DIRTY FIX, recore has a bug!
      return /*#__PURE__*/React.createElement(Fragment, null);
    }

    // const componentMeta = selecting[0].componentMeta;
    // const metadata = componentMeta.getMetadata();

    return /*#__PURE__*/React.createElement(Fragment, null, selecting.map(function (node) {
      return /*#__PURE__*/React.createElement(BoxResizingForNode, {
        key: node.id,
        node: node,
        host: _this5.props.host
      });
    }));
  };
  _createClass(BoxResizing, [{
    key: "host",
    get: function get() {
      return this.props.host;
    }
  }, {
    key: "dragging",
    get: function get() {
      return this.host.designer.dragon.dragging;
    }
  }, {
    key: "selecting",
    get: function get() {
      var doc = this.host.currentDocument;
      if (!doc || doc.suspensed) {
        return null;
      }
      var selection = doc.selection;
      return this.dragging ? selection.getTopNodes() : selection.getNodes();
    }
  }]);
  return BoxResizing;
}(Component), _BoxResizing.contextType = SimulatorContext, _BoxResizing), (_applyDecoratedDescriptor(_class5.prototype, "selecting", [computed], Object.getOwnPropertyDescriptor(_class5.prototype, "selecting"), _class5.prototype)), _class5)) || _class4;
export { BoxResizing as default };
export var BoxResizingForNode = observer(_class = (_class2 = (_BoxResizingForNode = /*#__PURE__*/function (_Component) {
  _inheritsLoose(BoxResizingForNode, _Component);
  function BoxResizingForNode() {
    return _Component.apply(this, arguments) || this;
  }
  var _proto = BoxResizingForNode.prototype;
  _proto.render = function render() {
    var _this = this;
    var instances = this.instances;
    var node = this.props.node;
    var designer = this.host.designer;
    if (!instances || instances.length < 1 || this.dragging) {
      return null;
    }
    return /*#__PURE__*/React.createElement(Fragment, {
      key: node.id
    }, instances.map(function (instance) {
      var observed = designer.createOffsetObserver({
        node: node,
        instance: instance
      });
      if (!observed) {
        return null;
      }
      return /*#__PURE__*/React.createElement(BoxResizingInstance, {
        key: observed.id,
        dragging: _this.dragging,
        designer: designer,
        observed: observed
      });
    }));
  };
  _createClass(BoxResizingForNode, [{
    key: "host",
    get: function get() {
      return this.props.host;
    }
  }, {
    key: "dragging",
    get: function get() {
      return this.host.designer.dragon.dragging;
    }
  }, {
    key: "instances",
    get: function get() {
      return this.host.getComponentInstances(this.props.node);
    }
  }]);
  return BoxResizingForNode;
}(Component), _BoxResizingForNode.contextType = SimulatorContext, _BoxResizingForNode), (_applyDecoratedDescriptor(_class2.prototype, "instances", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, "instances"), _class2.prototype)), _class2)) || _class;
export var BoxResizingInstance = observer(_class3 = /*#__PURE__*/function (_Component2) {
  _inheritsLoose(BoxResizingInstance, _Component2);
  function BoxResizingInstance(props) {
    var _this2;
    _this2 = _Component2.call(this, props) || this;
    // private outline: any;
    _this2.willUnbind = void 0;
    // outline of eight direction
    _this2.outlineN = void 0;
    _this2.outlineE = void 0;
    _this2.outlineS = void 0;
    _this2.outlineW = void 0;
    _this2.outlineNE = void 0;
    _this2.outlineNW = void 0;
    _this2.outlineSE = void 0;
    _this2.outlineSW = void 0;
    _this2.dragEngine = void 0;
    _this2.dragEngine = new DragResizeEngine(props.designer);
    return _this2;
  }
  var _proto2 = BoxResizingInstance.prototype;
  _proto2.componentWillUnmount = function componentWillUnmount() {
    if (this.willUnbind) {
      this.willUnbind();
    }
    this.props.observed.purge();
  };
  _proto2.componentDidMount = function componentDidMount() {
    // this.hoveringCapture.setBoundary(this.outline);
    this.willBind();
    var resize = function resize(e, direction, node, moveX, moveY) {
      var advanced = node.componentMeta.advanced;
      if (advanced.callbacks && typeof advanced.callbacks.onResize === 'function') {
        e.trigger = direction;
        e.deltaX = moveX;
        e.deltaY = moveY;
        var cbNode = node !== null && node !== void 0 && node.isNode ? node.internalToShellNode() : node;
        advanced.callbacks.onResize(e, cbNode);
      }
    };
    var resizeStart = function resizeStart(e, direction, node) {
      var advanced = node.componentMeta.advanced;
      if (advanced.callbacks && typeof advanced.callbacks.onResizeStart === 'function') {
        e.trigger = direction;
        var cbNode = node !== null && node !== void 0 && node.isNode ? node.internalToShellNode() : node;
        advanced.callbacks.onResizeStart(e, cbNode);
      }
    };
    var resizeEnd = function resizeEnd(e, direction, node) {
      var _node$document, _node$componentMeta, _node$componentMeta2, _node$parent;
      var advanced = node.componentMeta.advanced;
      if (advanced.callbacks && typeof advanced.callbacks.onResizeEnd === 'function') {
        e.trigger = direction;
        var cbNode = node !== null && node !== void 0 && node.isNode ? node.internalToShellNode() : node;
        advanced.callbacks.onResizeEnd(e, cbNode);
      }
      var editor = (_node$document = node.document) === null || _node$document === void 0 ? void 0 : _node$document.designer.editor;
      var npm = node === null || node === void 0 ? void 0 : (_node$componentMeta = node.componentMeta) === null || _node$componentMeta === void 0 ? void 0 : _node$componentMeta.npm;
      var selected = [npm === null || npm === void 0 ? void 0 : npm["package"], npm === null || npm === void 0 ? void 0 : npm.componentName].filter(function (item) {
        return !!item;
      }).join('-') || (node === null || node === void 0 ? void 0 : (_node$componentMeta2 = node.componentMeta) === null || _node$componentMeta2 === void 0 ? void 0 : _node$componentMeta2.componentName) || '';
      editor === null || editor === void 0 ? void 0 : editor.eventBus.emit('designer.border.resize', {
        selected: selected,
        layout: (node === null || node === void 0 ? void 0 : (_node$parent = node.parent) === null || _node$parent === void 0 ? void 0 : _node$parent.getPropValue('layout')) || ''
      });
    };
    this.dragEngine.onResize(resize);
    this.dragEngine.onResizeStart(resizeStart);
    this.dragEngine.onResizeEnd(resizeEnd);
  };
  _proto2.willBind = function willBind() {
    var _this3 = this;
    if (this.willUnbind) {
      this.willUnbind();
    }
    if (!this.outlineN && !this.outlineE && !this.outlineS && !this.outlineW && !this.outlineNE && !this.outlineNW && !this.outlineSE && !this.outlineSW) {
      return;
    }
    var unBind = [];
    var node = this.props.observed.node;
    unBind.push.apply(unBind, [this.dragEngine.from(this.outlineN, 'n', function () {
      return node;
    }), this.dragEngine.from(this.outlineE, 'e', function () {
      return node;
    }), this.dragEngine.from(this.outlineS, 's', function () {
      return node;
    }), this.dragEngine.from(this.outlineW, 'w', function () {
      return node;
    }), this.dragEngine.from(this.outlineNE, 'ne', function () {
      return node;
    }), this.dragEngine.from(this.outlineNW, 'nw', function () {
      return node;
    }), this.dragEngine.from(this.outlineSE, 'se', function () {
      return node;
    }), this.dragEngine.from(this.outlineSW, 'sw', function () {
      return node;
    })]);
    this.willUnbind = function () {
      if (unBind && unBind.length > 0) {
        unBind.forEach(function (item) {
          item();
        });
      }
      _this3.willUnbind = function () {};
    };
  };
  _proto2.render = function render() {
    var _this4 = this;
    var observed = this.props.observed;
    var triggerVisible = [];
    var offsetWidth = 0;
    var offsetHeight = 0;
    var offsetTop = 0;
    var offsetLeft = 0;
    if (observed.hasOffset) {
      var _metadata$configure, _metadata$configure$a;
      offsetWidth = observed.offsetWidth;
      offsetHeight = observed.offsetHeight;
      offsetTop = observed.offsetTop;
      offsetLeft = observed.offsetLeft;
      var node = observed.node;
      var metadata = node.componentMeta.getMetadata();
      if ((_metadata$configure = metadata.configure) !== null && _metadata$configure !== void 0 && (_metadata$configure$a = _metadata$configure.advanced) !== null && _metadata$configure$a !== void 0 && _metadata$configure$a.getResizingHandlers) {
        triggerVisible = metadata.configure.advanced.getResizingHandlers(node.internalToShellNode());
      }
    }
    triggerVisible = normalizeTriggers(triggerVisible);
    var baseSideClass = 'lc-borders lc-resize-side';
    var baseCornerClass = 'lc-borders lc-resize-corner';
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
      ref: function ref(_ref) {
        _this4.outlineN = _ref;
      },
      className: classNames(baseSideClass, 'n'),
      style: {
        height: 20,
        transform: "translate(" + offsetLeft + "px, " + (offsetTop - 10) + "px)",
        width: offsetWidth,
        display: triggerVisible.includes('N') ? 'flex' : 'none'
      }
    }), /*#__PURE__*/React.createElement("div", {
      ref: function ref(_ref2) {
        _this4.outlineNE = _ref2;
      },
      className: classNames(baseCornerClass, 'ne'),
      style: {
        transform: "translate(" + (offsetLeft + offsetWidth - 5) + "px, " + (offsetTop - 3) + "px)",
        cursor: 'nesw-resize',
        display: triggerVisible.includes('NE') ? 'flex' : 'none'
      }
    }), /*#__PURE__*/React.createElement("div", {
      className: classNames(baseSideClass, 'e'),
      ref: function ref(_ref3) {
        _this4.outlineE = _ref3;
      },
      style: {
        height: offsetHeight,
        transform: "translate(" + (offsetLeft + offsetWidth - 10) + "px, " + offsetTop + "px)",
        width: 20,
        display: triggerVisible.includes('E') ? 'flex' : 'none'
      }
    }), /*#__PURE__*/React.createElement("div", {
      ref: function ref(_ref4) {
        _this4.outlineSE = _ref4;
      },
      className: classNames(baseCornerClass, 'se'),
      style: {
        transform: "translate(" + (offsetLeft + offsetWidth - 5) + "px, " + (offsetTop + offsetHeight - 5) + "px)",
        cursor: 'nwse-resize',
        display: triggerVisible.includes('SE') ? 'flex' : 'none'
      }
    }), /*#__PURE__*/React.createElement("div", {
      ref: function ref(_ref5) {
        _this4.outlineS = _ref5;
      },
      className: classNames(baseSideClass, 's'),
      style: {
        height: 20,
        transform: "translate(" + offsetLeft + "px, " + (offsetTop + offsetHeight - 10) + "px)",
        width: offsetWidth,
        display: triggerVisible.includes('S') ? 'flex' : 'none'
      }
    }), /*#__PURE__*/React.createElement("div", {
      ref: function ref(_ref6) {
        _this4.outlineSW = _ref6;
      },
      className: classNames(baseCornerClass, 'sw'),
      style: {
        transform: "translate(" + (offsetLeft - 3) + "px, " + (offsetTop + offsetHeight - 5) + "px)",
        cursor: 'nesw-resize',
        display: triggerVisible.includes('SW') ? 'flex' : 'none'
      }
    }), /*#__PURE__*/React.createElement("div", {
      ref: function ref(_ref7) {
        _this4.outlineW = _ref7;
      },
      className: classNames(baseSideClass, 'w'),
      style: {
        height: offsetHeight,
        transform: "translate(" + (offsetLeft - 10) + "px, " + offsetTop + "px)",
        width: 20,
        display: triggerVisible.includes('W') ? 'flex' : 'none'
      }
    }), /*#__PURE__*/React.createElement("div", {
      ref: function ref(_ref8) {
        _this4.outlineNW = _ref8;
      },
      className: classNames(baseCornerClass, 'nw'),
      style: {
        transform: "translate(" + (offsetLeft - 3) + "px, " + (offsetTop - 3) + "px)",
        cursor: 'nwse-resize',
        display: triggerVisible.includes('NW') ? 'flex' : 'none'
      }
    }));
  };
  return BoxResizingInstance;
}(Component)) || _class3;