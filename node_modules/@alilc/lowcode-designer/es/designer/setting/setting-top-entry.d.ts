import { IPublicTypeCustomView, IPublicModelEditor, IPublicModelSettingTopEntry, IPublicApiSetters } from '@alilc/lowcode-types';
import { ISettingEntry } from './setting-entry-type';
import { ISettingField, SettingField } from './setting-field';
import { INode } from '../../document';
import type { IComponentMeta } from '../../component-meta';
import { IDesigner } from '../designer';
export interface ISettingTopEntry extends ISettingEntry, IPublicModelSettingTopEntry<INode, ISettingField> {
    readonly top: ISettingTopEntry;
    readonly parent: ISettingTopEntry;
    readonly path: never[];
    items: Array<ISettingField | IPublicTypeCustomView>;
    componentMeta: IComponentMeta | null;
    purge(): void;
    getExtraPropValue(propName: string): void;
    setExtraPropValue(propName: string, value: any): void;
}
export declare class SettingTopEntry implements ISettingTopEntry {
    readonly editor: IPublicModelEditor;
    readonly nodes: INode[];
    private emitter;
    private _items;
    private _componentMeta;
    private _isSame;
    private _settingFieldMap;
    readonly path: any[];
    readonly top: this;
    readonly parent: this;
    get componentMeta(): IComponentMeta;
    get items(): (IPublicTypeCustomView | SettingField)[];
    /**
     * 同样的
     */
    get isSameComponent(): boolean;
    /**
     * 一个
     */
    get isSingle(): boolean;
    get isLocked(): boolean;
    /**
     * 多个
     */
    get isMultiple(): boolean;
    readonly id: string;
    readonly first: INode;
    readonly designer: IDesigner | undefined;
    readonly setters: IPublicApiSetters;
    disposeFunctions: any[];
    constructor(editor: IPublicModelEditor, nodes: INode[]);
    private setupComponentMeta;
    private setupItems;
    private setupEvents;
    /**
     * 获取当前属性值
     */
    getValue(): any;
    /**
     * 设置当前属性值
     */
    setValue(val: any): void;
    /**
     * 获取子项
     */
    get(propName: string | number): ISettingField | null;
    /**
     * 设置子级属性值
     */
    setPropValue(propName: string | number, value: any): void;
    /**
     * 清除已设置值
     */
    clearPropValue(propName: string | number): void;
    /**
     * 获取子级属性值
     */
    getPropValue(propName: string | number): any;
    /**
     * 获取顶层附属属性值
     */
    getExtraPropValue(propName: string): any;
    /**
     * 设置顶层附属属性值
     */
    setExtraPropValue(propName: string, value: any): void;
    setProps(data: object): void;
    mergeProps(data: object): void;
    private disposeItems;
    purge(): void;
    getProp(propName: string | number): ISettingField;
    getStatus(): void;
    setStatus(): void;
    getChildren(): void;
    getDOMNode(): void;
    getId(): string;
    getPage(): import("../../document").IDocumentModel;
    /**
     * @deprecated
     */
    get node(): INode;
    getNode(): INode;
}
