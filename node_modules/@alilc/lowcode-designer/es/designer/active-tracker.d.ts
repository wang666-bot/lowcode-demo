import { INode } from '../document/node/node';
import { IPublicTypeActiveTarget, IPublicModelActiveTracker } from '@alilc/lowcode-types';
export interface IActiveTracker extends Omit<IPublicModelActiveTracker, 'track' | 'onChange'> {
    _target: ActiveTarget | INode;
    track(originalTarget: ActiveTarget | INode): void;
    onChange(fn: (target: ActiveTarget) => void): () => void;
}
export interface ActiveTarget extends Omit<IPublicTypeActiveTarget, 'node'> {
    node: INode;
}
export declare class ActiveTracker implements IActiveTracker {
    private _target?;
    private emitter;
    track(originalTarget: ActiveTarget | INode): void;
    get currentNode(): INode;
    get detail(): import("@alilc/lowcode-types").IPublicTypeLocationDetail;
    /**
     * @deprecated
     */
    get intance(): import("@alilc/lowcode-types").IPublicTypeComponentInstance;
    get instance(): import("@alilc/lowcode-types").IPublicTypeComponentInstance;
    onChange(fn: (target: ActiveTarget) => void): () => void;
}
