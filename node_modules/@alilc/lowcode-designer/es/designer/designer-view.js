import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
var _excluded = ["designer"];
import { Component } from 'react';
import classNames from 'classnames';
import BuiltinDragGhostComponent from './drag-ghost';
import { Designer } from './designer';
import { ProjectView } from '../project';
import './designer.less';
export var DesignerView = /*#__PURE__*/function (_Component) {
  _inheritsLoose(DesignerView, _Component);
  function DesignerView(props) {
    var _this;
    _this = _Component.call(this, props) || this;
    _this.designer = void 0;
    _this.viewName = void 0;
    var designer = props.designer,
      designerProps = _objectWithoutPropertiesLoose(props, _excluded);
    _this.viewName = designer === null || designer === void 0 ? void 0 : designer.viewName;
    if (designer) {
      _this.designer = designer;
      designer.setProps(designerProps);
    } else {
      _this.designer = new Designer(designerProps);
    }
    return _this;
  }
  var _proto = DesignerView.prototype;
  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
    this.designer.setProps(nextProps);
    var props = this.props;
    if (nextProps.className !== props.className || nextProps.style !== props.style || nextProps.dragGhostComponent !== props.dragGhostComponent) {
      return true;
    }
    return false;
  };
  _proto.componentDidMount = function componentDidMount() {
    var onMount = this.props.onMount;
    if (onMount) {
      onMount(this.designer);
    }
    this.designer.postEvent('mount', this.designer);
  };
  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {
    this.designer.purge();
  };
  _proto.render = function render() {
    var _this$props = this.props,
      className = _this$props.className,
      style = _this$props.style,
      dragGhostComponent = _this$props.dragGhostComponent;
    var DragGhost = dragGhostComponent || BuiltinDragGhostComponent;
    return /*#__PURE__*/React.createElement("div", {
      className: classNames('lc-designer', className),
      style: style
    }, /*#__PURE__*/React.createElement(DragGhost, {
      designer: this.designer
    }), /*#__PURE__*/React.createElement(ProjectView, {
      designer: this.designer
    }));
  };
  return DesignerView;
}(Component);