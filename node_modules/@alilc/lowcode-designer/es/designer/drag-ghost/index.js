import _initializerDefineProperty from "@babel/runtime/helpers/initializerDefineProperty";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
import _initializerWarningHelper from "@babel/runtime/helpers/initializerWarningHelper";
var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
import { Component } from 'react';
import { observer, obx, Title, makeObservable } from '@alilc/lowcode-editor-core';
import { isDragNodeObject } from '../dragon';
import { isSimulatorHost } from '../../simulator';
import './ghost.less';
var DragGhost = (_dec = obx.ref, _dec2 = obx.ref, _dec3 = obx.ref, observer(_class = (_class2 = /*#__PURE__*/function (_Component) {
  _inheritsLoose(DragGhost, _Component);
  function DragGhost(props) {
    var _this;
    _this = _Component.call(this, props) || this;
    _this.dispose = [];
    _initializerDefineProperty(_this, "titles", _descriptor, _assertThisInitialized(_this));
    _initializerDefineProperty(_this, "x", _descriptor2, _assertThisInitialized(_this));
    _initializerDefineProperty(_this, "y", _descriptor3, _assertThisInitialized(_this));
    _initializerDefineProperty(_this, "isAbsoluteLayoutContainer", _descriptor4, _assertThisInitialized(_this));
    _this.dragon = _this.props.designer.dragon;
    makeObservable(_assertThisInitialized(_this));
    _this.dispose = [_this.dragon.onDragstart(function (e) {
      if (e.originalEvent.type.slice(0, 4) === 'drag') {
        return;
      }
      _this.titles = _this.getTitles(e.dragObject);
      _this.x = e.globalX;
      _this.y = e.globalY;
    }), _this.dragon.onDrag(function (e) {
      _this.x = e.globalX;
      _this.y = e.globalY;
      if (isSimulatorHost(e.sensor)) {
        var container = e.sensor.getDropContainer(e);
        if (container !== null && container !== void 0 && container.container.componentMeta.advanced.isAbsoluteLayoutContainer) {
          _this.isAbsoluteLayoutContainer = true;
          return;
        }
      }
      _this.isAbsoluteLayoutContainer = false;
    }), _this.dragon.onDragend(function () {
      _this.titles = null;
      _this.x = 0;
      _this.y = 0;
    })];
    return _this;
  }
  var _proto = DragGhost.prototype;
  _proto.getTitles = function getTitles(dragObject) {
    var _this2 = this;
    if (isDragNodeObject(dragObject)) {
      return dragObject.nodes.map(function (node) {
        return node.title;
      });
    }
    var dataList = Array.isArray(dragObject.data) ? dragObject.data : [dragObject.data];
    return dataList.map(function (item, i) {
      return _this2.props.designer.getComponentMeta(item.componentName).title;
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.dispose) {
      this.dispose.forEach(function (off) {
        return off();
      });
    }
  };
  _proto.renderGhostGroup = function renderGhostGroup() {
    var _this$titles;
    return (_this$titles = this.titles) === null || _this$titles === void 0 ? void 0 : _this$titles.map(function (title, i) {
      var ghost = /*#__PURE__*/React.createElement("div", {
        className: "lc-ghost",
        key: i
      }, /*#__PURE__*/React.createElement(Title, {
        title: title
      }));
      return ghost;
    });
  };
  _proto.render = function render() {
    if (!this.titles || !this.titles.length) {
      return null;
    }
    if (this.isAbsoluteLayoutContainer) {
      return null;
    }
    return /*#__PURE__*/React.createElement("div", {
      className: "lc-ghost-group",
      style: {
        left: this.x,
        top: this.y
      }
    }, this.renderGhostGroup());
  };
  return DragGhost;
}(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "titles", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return null;
  }
}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "x", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return 0;
  }
}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "y", [_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return 0;
  }
}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "isAbsoluteLayoutContainer", [obx], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return false;
  }
})), _class2)) || _class);
export { DragGhost as default };