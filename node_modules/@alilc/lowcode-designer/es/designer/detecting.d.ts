import { IPublicModelDetecting } from '@alilc/lowcode-types';
import type { IDocumentModel } from '../document/document-model';
import type { INode } from '../document/node/node';
export interface IDetecting extends Omit<IPublicModelDetecting<INode>, 'capture' | 'release' | 'leave'> {
    capture(node: INode | null): void;
    release(node: INode | null): void;
    leave(document: IDocumentModel | undefined): void;
    get current(): INode | null;
}
export declare class Detecting implements IDetecting {
    private _enable;
    /**
     * 控制大纲树 hover 时是否出现悬停效果
     * TODO: 将该逻辑从设计器中抽离出来
     */
    get enable(): boolean;
    set enable(flag: boolean);
    xRayMode: boolean;
    private _current;
    private emitter;
    constructor();
    get current(): INode;
    capture(node: INode | null): void;
    release(node: INode | null): void;
    leave(document: IDocumentModel | undefined): void;
    onDetectingChange(fn: (node: INode) => void): () => void;
}
