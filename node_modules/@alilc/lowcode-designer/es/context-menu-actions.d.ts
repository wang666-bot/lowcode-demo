import { IPublicTypeContextMenuAction, IPublicTypeContextMenuItem, IPublicApiMaterial } from '@alilc/lowcode-types';
import { IDesigner, INode } from './designer';
import './context-menu-actions.scss';
export interface IContextMenuActions {
    actions: IPublicTypeContextMenuAction[];
    adjustMenuLayoutFn: (actions: IPublicTypeContextMenuItem[]) => IPublicTypeContextMenuItem[];
    addMenuAction: IPublicApiMaterial['addContextMenuOption'];
    removeMenuAction: IPublicApiMaterial['removeContextMenuOption'];
    adjustMenuLayout: IPublicApiMaterial['adjustContextMenuLayout'];
}
export declare class GlobalContextMenuActions {
    enableContextMenu: boolean;
    dispose: Function[];
    contextMenuActionsMap: Map<string, ContextMenuActions>;
    constructor();
    handleContextMenu: (event: MouseEvent) => void;
    initEvent(): void;
    registerContextMenuActions(contextMenu: ContextMenuActions): void;
}
export declare class ContextMenuActions implements IContextMenuActions {
    actions: IPublicTypeContextMenuAction[];
    designer: IDesigner;
    dispose: Function[];
    enableContextMenu: boolean;
    id: string;
    constructor(designer: IDesigner);
    handleContextMenu: (nodes: INode[], event: MouseEvent) => void;
    initEvent(): void;
    addMenuAction(action: IPublicTypeContextMenuAction): void;
    removeMenuAction(name: string): void;
    adjustMenuLayout(fn: (actions: IPublicTypeContextMenuItem[]) => IPublicTypeContextMenuItem[]): void;
}
