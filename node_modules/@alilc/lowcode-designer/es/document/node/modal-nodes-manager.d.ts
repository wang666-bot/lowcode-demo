import { INode } from './node';
import { DocumentModel } from '../document-model';
import { IPublicModelModalNodesManager } from '@alilc/lowcode-types';
export declare function getModalNodes(node: INode): any;
export interface IModalNodesManager extends IPublicModelModalNodesManager<INode> {
}
export declare class ModalNodesManager implements IModalNodesManager {
    willDestroy: any;
    private page;
    private modalNodes;
    private nodeRemoveEvents;
    private emitter;
    constructor(page: DocumentModel);
    getModalNodes(): INode[];
    getVisibleModalNode(): INode | null;
    hideModalNodes(): void;
    setVisible(node: INode): void;
    setInvisible(node: INode): void;
    onVisibleChange(func: () => any): () => void;
    onModalNodesChange(func: () => any): () => void;
    private addNode;
    private removeNode;
    private addNodeEvent;
    private removeNodeEvent;
    setNodes(): void;
}
