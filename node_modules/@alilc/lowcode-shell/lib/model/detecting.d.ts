import { IDocumentModel as InnerDocumentModel } from '@alilc/lowcode-designer';
import { documentSymbol, detectingSymbol } from '../symbols';
import { IPublicModelDetecting, IPublicModelNode, IPublicTypeDisposable } from '@alilc/lowcode-types';
export declare class Detecting implements IPublicModelDetecting {
    private readonly [documentSymbol];
    private readonly [detectingSymbol];
    constructor(document: InnerDocumentModel);
    /**
     * 控制大纲树 hover 时是否出现悬停效果
     */
    get enable(): boolean;
    /**
     * 当前 hover 的节点
     */
    get current(): IPublicModelNode;
    /**
     * hover 指定节点
     * @param id 节点 id
     */
    capture(id: string): void;
    /**
     * hover 离开指定节点
     * @param id 节点 id
     */
    release(id: string): void;
    /**
     * 清空 hover 态
     */
    leave(): void;
    onDetectingChange(fn: (node: IPublicModelNode | null) => void): IPublicTypeDisposable;
}
