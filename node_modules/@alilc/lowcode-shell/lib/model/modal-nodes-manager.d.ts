import { IModalNodesManager as InnerModalNodesManager } from '@alilc/lowcode-designer';
import { IPublicModelModalNodesManager, IPublicModelNode } from '@alilc/lowcode-types';
import { modalNodesManagerSymbol } from '../symbols';
export declare class ModalNodesManager implements IPublicModelModalNodesManager {
    private readonly [modalNodesManagerSymbol];
    constructor(modalNodesManager: InnerModalNodesManager);
    static create(modalNodesManager: InnerModalNodesManager | null): IPublicModelModalNodesManager | null;
    /**
     * 设置模态节点，触发内部事件
     */
    setNodes(): void;
    /**
     * 获取模态节点（们）
     */
    getModalNodes(): IPublicModelNode[];
    /**
     * 获取当前可见的模态节点
     */
    getVisibleModalNode(): IPublicModelNode | null;
    /**
     * 隐藏模态节点（们）
     */
    hideModalNodes(): void;
    /**
     * 设置指定节点为可见态
     * @param node Node
     */
    setVisible(node: IPublicModelNode): void;
    /**
     * 设置指定节点为不可见态
     * @param node Node
     */
    setInvisible(node: IPublicModelNode): void;
}
