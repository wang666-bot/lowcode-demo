/// <reference types="react" />
import { windowSymbol } from '../symbols';
import { IPublicModelResource, IPublicModelWindow, IPublicTypeDisposable } from '@alilc/lowcode-types';
import { IEditorWindow } from '@alilc/lowcode-workspace';
export declare class Window implements IPublicModelWindow {
    private readonly [windowSymbol];
    get id(): string;
    get title(): string;
    get icon(): import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    get resource(): IPublicModelResource;
    constructor(editorWindow: IEditorWindow);
    importSchema(schema: any): any;
    changeViewType(viewName: string): void;
    onChangeViewType(fun: (viewName: string) => void): IPublicTypeDisposable;
    save(): Promise<any>;
    onSave(fn: () => void): IPublicTypeDisposable;
    get currentEditorView(): any;
    get editorViews(): any[];
}
