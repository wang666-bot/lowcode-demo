import { IPublicApiCanvas, IPublicModelDropLocation, IPublicModelScrollTarget, IPublicTypeScrollable, IPublicModelScroller, IPublicTypeLocationData, IPublicModelEditor, IPublicModelDragon, IPublicModelActiveTracker, IPublicModelClipboard } from '@alilc/lowcode-types';
import { editorSymbol, designerSymbol } from '../symbols';
declare const clipboardInstanceSymbol: unique symbol;
export declare class Canvas implements IPublicApiCanvas {
    readonly workspaceMode: boolean;
    private readonly [editorSymbol];
    private readonly [clipboardInstanceSymbol];
    private get [designerSymbol]();
    get dragon(): IPublicModelDragon | null;
    get activeTracker(): IPublicModelActiveTracker | null;
    get isInLiveEditing(): boolean;
    get clipboard(): IPublicModelClipboard;
    constructor(editor: IPublicModelEditor, workspaceMode?: boolean);
    createScrollTarget(shell: HTMLDivElement): IPublicModelScrollTarget;
    createScroller(scrollable: IPublicTypeScrollable): IPublicModelScroller;
    /**
     * 创建插入位置，考虑放到 dragon 中
     */
    createLocation(locationData: IPublicTypeLocationData): IPublicModelDropLocation;
    /**
     * @deprecated
     */
    get dropLocation(): IPublicModelDropLocation;
}
export {};
