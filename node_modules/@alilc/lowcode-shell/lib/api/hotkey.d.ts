import { Hotkey as InnerHotkey } from '@alilc/lowcode-editor-core';
import { hotkeySymbol } from '../symbols';
import { IPublicTypeDisposable, IPublicTypeHotkeyCallback, IPublicTypeHotkeyCallbacks, IPublicApiHotkey } from '@alilc/lowcode-types';
declare const innerHotkeySymbol: unique symbol;
export declare class Hotkey implements IPublicApiHotkey {
    readonly workspaceMode: boolean;
    private readonly [innerHotkeySymbol];
    get [hotkeySymbol](): InnerHotkey;
    constructor(hotkey: InnerHotkey, workspaceMode?: boolean);
    get callbacks(): IPublicTypeHotkeyCallbacks;
    /**
     * @deprecated
     */
    get callBacks(): IPublicTypeHotkeyCallbacks;
    /**
     * 绑定快捷键
     * @param combos 快捷键，格式如：['command + s'] 、['ctrl + shift + s'] 等
     * @param callback 回调函数
     * @param action
     * @returns
     */
    bind(combos: string[] | string, callback: IPublicTypeHotkeyCallback, action?: string): IPublicTypeDisposable;
}
export {};
