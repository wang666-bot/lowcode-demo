"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.CommonUI = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _lowcodeEditorCore = require("@alilc/lowcode-editor-core");
var _next = require("@alifd/next");
var _contextMenu = require("../components/context-menu");
var _symbols = require("../symbols");
var CommonUI = exports.CommonUI = /*#__PURE__*/function () {
  function CommonUI(editor) {
    this[_symbols.editorSymbol] = void 0;
    this.Balloon = _next.Balloon;
    this.Breadcrumb = _next.Breadcrumb;
    this.Button = _next.Button;
    this.Card = _next.Card;
    this.Checkbox = _next.Checkbox;
    this.DatePicker = _next.DatePicker;
    this.Dialog = _next.Dialog;
    this.Dropdown = _next.Dropdown;
    this.Form = _next.Form;
    this.Icon = _next.Icon;
    this.Input = _next.Input;
    this.Loading = _next.Loading;
    this.Message = _next.Message;
    this.Overlay = _next.Overlay;
    this.Pagination = _next.Pagination;
    this.Radio = _next.Radio;
    this.Search = _next.Search;
    this.Select = _next.Select;
    this.SplitButton = _next.SplitButton;
    this.Step = _next.Step;
    this.Switch = _next.Switch;
    this.Tab = _next.Tab;
    this.Table = _next.Table;
    this.Tree = _next.Tree;
    this.TreeSelect = _next.TreeSelect;
    this.Upload = _next.Upload;
    this.Divider = _next.Divider;
    this.ContextMenu = void 0;
    this[_symbols.editorSymbol] = editor;
    var innerContextMenu = function innerContextMenu(props) {
      var pluginContext = editor.get('pluginContext');
      return /*#__PURE__*/React.createElement(_contextMenu.ContextMenu, (0, _extends2["default"])({}, props, {
        pluginContext: pluginContext
      }));
    };
    innerContextMenu.create = function (menus, event) {
      var pluginContext = editor.get('pluginContext');
      return _contextMenu.ContextMenu.create(pluginContext, menus, event);
    };
    this.ContextMenu = innerContextMenu;
  }
  (0, _createClass2["default"])(CommonUI, [{
    key: "Tip",
    get: function get() {
      return _lowcodeEditorCore.Tip;
    }
  }, {
    key: "HelpTip",
    get: function get() {
      return _lowcodeEditorCore.HelpTip;
    }
  }, {
    key: "Title",
    get: function get() {
      return _lowcodeEditorCore.Title;
    }
  }]);
  return CommonUI;
}();