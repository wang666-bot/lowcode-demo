import _createClass from "@babel/runtime/helpers/createClass";
import { resourceSymbol } from '../symbols';
export var Resource = /*#__PURE__*/function () {
  function Resource(resource) {
    this[resourceSymbol] = void 0;
    this[resourceSymbol] = resource;
  }
  _createClass(Resource, [{
    key: "title",
    get: function get() {
      return this[resourceSymbol].title;
    }
  }, {
    key: "id",
    get: function get() {
      return this[resourceSymbol].id;
    }
  }, {
    key: "icon",
    get: function get() {
      return this[resourceSymbol].icon;
    }
  }, {
    key: "options",
    get: function get() {
      return this[resourceSymbol].options;
    }
  }, {
    key: "name",
    get: function get() {
      return this[resourceSymbol].resourceType.name;
    }
  }, {
    key: "config",
    get: function get() {
      return this[resourceSymbol].config;
    }
  }, {
    key: "type",
    get: function get() {
      return this[resourceSymbol].resourceType.type;
    }
  }, {
    key: "category",
    get: function get() {
      return this[resourceSymbol].category;
    }
  }, {
    key: "description",
    get: function get() {
      return this[resourceSymbol].description;
    }
  }, {
    key: "children",
    get: function get() {
      return this[resourceSymbol].children.map(function (child) {
        return new Resource(child);
      });
    }
  }, {
    key: "viewName",
    get: function get() {
      return this[resourceSymbol].viewName;
    }
  }]);
  return Resource;
}();