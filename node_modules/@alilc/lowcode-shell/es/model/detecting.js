import _createClass from "@babel/runtime/helpers/createClass";
import { Node as ShellNode } from './node';
import { documentSymbol, detectingSymbol } from '../symbols';
export var Detecting = /*#__PURE__*/function () {
  function Detecting(document) {
    var _document$designer;
    this[documentSymbol] = void 0;
    this[detectingSymbol] = void 0;
    this[documentSymbol] = document;
    this[detectingSymbol] = (_document$designer = document.designer) === null || _document$designer === void 0 ? void 0 : _document$designer.detecting;
  }

  /**
   * 控制大纲树 hover 时是否出现悬停效果
   */
  var _proto = Detecting.prototype;
  /**
   * hover 指定节点
   * @param id 节点 id
   */
  _proto.capture = function capture(id) {
    this[detectingSymbol].capture(this[documentSymbol].getNode(id));
  }

  /**
   * hover 离开指定节点
   * @param id 节点 id
   */;
  _proto.release = function release(id) {
    this[detectingSymbol].release(this[documentSymbol].getNode(id));
  }

  /**
   * 清空 hover 态
   */;
  _proto.leave = function leave() {
    this[detectingSymbol].leave(this[documentSymbol]);
  };
  _proto.onDetectingChange = function onDetectingChange(fn) {
    var innerFn = function innerFn(innerNode) {
      var shellNode = ShellNode.create(innerNode);
      fn(shellNode);
    };
    return this[detectingSymbol].onDetectingChange(innerFn);
  };
  _createClass(Detecting, [{
    key: "enable",
    get: function get() {
      return this[detectingSymbol].enable;
    }

    /**
     * 当前 hover 的节点
     */
  }, {
    key: "current",
    get: function get() {
      return ShellNode.create(this[detectingSymbol].current);
    }
  }]);
  return Detecting;
}();