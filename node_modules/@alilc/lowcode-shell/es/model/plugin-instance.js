import _createClass from "@babel/runtime/helpers/createClass";
import { pluginInstanceSymbol } from '../symbols';
export var PluginInstance = /*#__PURE__*/function () {
  function PluginInstance(pluginInstance) {
    this[pluginInstanceSymbol] = void 0;
    this[pluginInstanceSymbol] = pluginInstance;
  }
  _createClass(PluginInstance, [{
    key: "pluginName",
    get: function get() {
      return this[pluginInstanceSymbol].name;
    }
  }, {
    key: "dep",
    get: function get() {
      return this[pluginInstanceSymbol].dep;
    }
  }, {
    key: "disabled",
    get: function get() {
      return this[pluginInstanceSymbol].disabled;
    },
    set: function set(disabled) {
      this[pluginInstanceSymbol].setDisabled(disabled);
    }
  }, {
    key: "meta",
    get: function get() {
      return this[pluginInstanceSymbol].meta;
    }
  }]);
  return PluginInstance;
}();