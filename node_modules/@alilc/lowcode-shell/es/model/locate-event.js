import _createClass from "@babel/runtime/helpers/createClass";
import { locateEventSymbol } from '../symbols';
import { DragObject } from './drag-object';
var LocateEvent = /*#__PURE__*/function () {
  function LocateEvent(locateEvent) {
    this[locateEventSymbol] = void 0;
    this[locateEventSymbol] = locateEvent;
  }
  LocateEvent.create = function create(locateEvent) {
    if (!locateEvent) {
      return null;
    }
    return new LocateEvent(locateEvent);
  };
  _createClass(LocateEvent, [{
    key: "type",
    get: function get() {
      return this[locateEventSymbol].type;
    }
  }, {
    key: "globalX",
    get: function get() {
      return this[locateEventSymbol].globalX;
    }
  }, {
    key: "globalY",
    get: function get() {
      return this[locateEventSymbol].globalY;
    }
  }, {
    key: "originalEvent",
    get: function get() {
      return this[locateEventSymbol].originalEvent;
    }
  }, {
    key: "target",
    get: function get() {
      return this[locateEventSymbol].target;
    }
  }, {
    key: "canvasX",
    get: function get() {
      return this[locateEventSymbol].canvasX;
    }
  }, {
    key: "canvasY",
    get: function get() {
      return this[locateEventSymbol].canvasY;
    }
  }, {
    key: "dragObject",
    get: function get() {
      return DragObject.create(this[locateEventSymbol].dragObject);
    }
  }]);
  return LocateEvent;
}();
export { LocateEvent as default };