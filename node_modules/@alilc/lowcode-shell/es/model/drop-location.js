import _createClass from "@babel/runtime/helpers/createClass";
import { dropLocationSymbol } from '../symbols';
import { Node as ShellNode } from './node';
export var DropLocation = /*#__PURE__*/function () {
  function DropLocation(dropLocation) {
    this[dropLocationSymbol] = void 0;
    this[dropLocationSymbol] = dropLocation;
  }
  DropLocation.create = function create(dropLocation) {
    if (!dropLocation) {
      return null;
    }
    return new DropLocation(dropLocation);
  };
  var _proto = DropLocation.prototype;
  _proto.clone = function clone(event) {
    return new DropLocation(this[dropLocationSymbol].clone(event));
  };
  _createClass(DropLocation, [{
    key: "target",
    get: function get() {
      return ShellNode.create(this[dropLocationSymbol].target);
    }
  }, {
    key: "detail",
    get: function get() {
      return this[dropLocationSymbol].detail;
    }
  }, {
    key: "event",
    get: function get() {
      return this[dropLocationSymbol].event;
    }
  }]);
  return DropLocation;
}();