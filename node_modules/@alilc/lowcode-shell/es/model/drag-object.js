import _createClass from "@babel/runtime/helpers/createClass";
import { dragObjectSymbol } from '../symbols';
import { Node } from './node';
export var DragObject = /*#__PURE__*/function () {
  function DragObject(dragObject) {
    this[dragObjectSymbol] = void 0;
    this[dragObjectSymbol] = dragObject;
  }
  DragObject.create = function create(dragObject) {
    if (!dragObject) {
      return null;
    }
    return new DragObject(dragObject);
  };
  _createClass(DragObject, [{
    key: "type",
    get: function get() {
      return this[dragObjectSymbol].type;
    }
  }, {
    key: "nodes",
    get: function get() {
      var nodes = this[dragObjectSymbol].nodes;
      if (!nodes) {
        return null;
      }
      return nodes.map(Node.create);
    }
  }, {
    key: "data",
    get: function get() {
      return this[dragObjectSymbol].data;
    }
  }]);
  return DragObject;
}();