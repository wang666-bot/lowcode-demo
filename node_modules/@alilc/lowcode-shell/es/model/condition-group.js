import _createClass from "@babel/runtime/helpers/createClass";
import { conditionGroupSymbol, nodeSymbol } from '../symbols';
import { Node } from './node';
export var ConditionGroup = /*#__PURE__*/function () {
  function ConditionGroup(conditionGroup) {
    this[conditionGroupSymbol] = void 0;
    this[conditionGroupSymbol] = conditionGroup;
  }
  var _proto = ConditionGroup.prototype;
  _proto.setVisible = function setVisible(node) {
    var _this$conditionGroupS;
    (_this$conditionGroupS = this[conditionGroupSymbol]) === null || _this$conditionGroupS === void 0 ? void 0 : _this$conditionGroupS.setVisible(node[nodeSymbol] ? node[nodeSymbol] : node);
  };
  ConditionGroup.create = function create(conditionGroup) {
    if (!conditionGroup) {
      return null;
    }
    // @ts-ignore
    if (conditionGroup[conditionGroupSymbol]) {
      return conditionGroup[conditionGroupSymbol];
    }
    var shellConditionGroup = new ConditionGroup(conditionGroup);
    // @ts-ignore
    shellConditionGroup[conditionGroupSymbol] = shellConditionGroup;
    return shellConditionGroup;
  };
  _createClass(ConditionGroup, [{
    key: "id",
    get: function get() {
      var _this$conditionGroupS2;
      return (_this$conditionGroupS2 = this[conditionGroupSymbol]) === null || _this$conditionGroupS2 === void 0 ? void 0 : _this$conditionGroupS2.id;
    }
  }, {
    key: "title",
    get: function get() {
      var _this$conditionGroupS3;
      return (_this$conditionGroupS3 = this[conditionGroupSymbol]) === null || _this$conditionGroupS3 === void 0 ? void 0 : _this$conditionGroupS3.title;
    }
  }, {
    key: "firstNode",
    get: function get() {
      var _this$conditionGroupS4;
      return Node.create((_this$conditionGroupS4 = this[conditionGroupSymbol]) === null || _this$conditionGroupS4 === void 0 ? void 0 : _this$conditionGroupS4.firstNode);
    }
  }]);
  return ConditionGroup;
}();