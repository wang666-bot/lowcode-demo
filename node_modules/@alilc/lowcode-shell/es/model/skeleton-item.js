import _createClass from "@babel/runtime/helpers/createClass";
import { skeletonItemSymbol } from '../symbols';
export var SkeletonItem = /*#__PURE__*/function () {
  function SkeletonItem(skeletonItem) {
    this[skeletonItemSymbol] = void 0;
    this[skeletonItemSymbol] = skeletonItem;
  }
  var _proto = SkeletonItem.prototype;
  _proto.disable = function disable() {
    var _this$skeletonItemSym, _this$skeletonItemSym2;
    (_this$skeletonItemSym = (_this$skeletonItemSym2 = this[skeletonItemSymbol]).disable) === null || _this$skeletonItemSym === void 0 ? void 0 : _this$skeletonItemSym.call(_this$skeletonItemSym2);
  };
  _proto.enable = function enable() {
    var _this$skeletonItemSym3, _this$skeletonItemSym4;
    (_this$skeletonItemSym3 = (_this$skeletonItemSym4 = this[skeletonItemSymbol]).enable) === null || _this$skeletonItemSym3 === void 0 ? void 0 : _this$skeletonItemSym3.call(_this$skeletonItemSym4);
  };
  _proto.hide = function hide() {
    this[skeletonItemSymbol].hide();
  };
  _proto.show = function show() {
    this[skeletonItemSymbol].show();
  };
  _proto.toggle = function toggle() {
    this[skeletonItemSymbol].toggle();
  };
  _createClass(SkeletonItem, [{
    key: "name",
    get: function get() {
      return this[skeletonItemSymbol].name;
    }
  }, {
    key: "visible",
    get: function get() {
      return this[skeletonItemSymbol].visible;
    }
  }]);
  return SkeletonItem;
}();