import { IPublicTypeCustomView, IPublicApiSetters, IPublicTypeRegisteredSetter } from '@alilc/lowcode-types';
import { ISetters } from '@alilc/lowcode-editor-core';
import { ReactNode } from 'react';
declare const innerSettersSymbol: unique symbol;
declare const settersSymbol: unique symbol;
export declare class Setters implements IPublicApiSetters {
    readonly workspaceMode: boolean;
    readonly [innerSettersSymbol]: ISetters;
    get [settersSymbol](): ISetters;
    constructor(innerSetters: ISetters, workspaceMode?: boolean);
    /**
     * 获取指定 setter
     * @param type
     * @returns
     */
    getSetter: (type: string) => IPublicTypeRegisteredSetter;
    /**
     * 获取已注册的所有 settersMap
     * @returns
     */
    getSettersMap: () => Map<string, IPublicTypeRegisteredSetter & {
        type: string;
    }>;
    /**
     * 注册一个 setter
     * @param typeOrMaps
     * @param setter
     * @returns
     */
    registerSetter: (typeOrMaps: string | {
        [key: string]: IPublicTypeRegisteredSetter | IPublicTypeCustomView;
    }, setter?: IPublicTypeCustomView | IPublicTypeRegisteredSetter | undefined) => void;
    /**
     * @deprecated
     */
    createSetterContent: (setter: any, props: Record<string, any>) => ReactNode;
}
export {};
