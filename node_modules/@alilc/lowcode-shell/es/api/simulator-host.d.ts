import { BuiltinSimulatorHost } from '@alilc/lowcode-designer';
import { simulatorHostSymbol } from '../symbols';
import { IPublicApiSimulatorHost, IPublicModelNode, IPublicModelSimulatorRender } from '@alilc/lowcode-types';
export declare class SimulatorHost implements IPublicApiSimulatorHost {
    private readonly [simulatorHostSymbol];
    constructor(simulator: BuiltinSimulatorHost);
    static create(host: BuiltinSimulatorHost): IPublicApiSimulatorHost | null;
    /**
     * 获取 contentWindow
     */
    get contentWindow(): Window | undefined;
    /**
     * 获取 contentDocument
     */
    get contentDocument(): Document | undefined;
    get renderer(): IPublicModelSimulatorRender | undefined;
    /**
     * 设置 host 配置值
     * @param key
     * @param value
     */
    set(key: string, value: any): void;
    /**
     * 获取 host 配置值
     * @param key
     * @returns
     */
    get(key: string): any;
    /**
     * scroll to specific node
     * @param node
     */
    scrollToNode(node: IPublicModelNode): void;
    /**
     * 触发组件构建，并刷新渲染画布
     */
    rerender(): void;
}
