"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = void 0;
var _numberPicker = _interopRequireDefault(require("@alifd/next/lib/number-picker"));
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var React = _interopRequireWildcard(require("react"));
require("./index.less");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var NumberSetter = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inheritsLoose2["default"])(NumberSetter, _React$PureComponent);
  function NumberSetter() {
    return _React$PureComponent.apply(this, arguments) || this;
  }
  var _proto = NumberSetter.prototype;
  _proto.render = function render() {
    var _this$props = this.props,
      _onChange = _this$props.onChange,
      _this$props$min = _this$props.min,
      min = _this$props$min === void 0 ? Number.MIN_SAFE_INTEGER : _this$props$min,
      _this$props$max = _this$props.max,
      max = _this$props$max === void 0 ? Number.MAX_SAFE_INTEGER : _this$props$max,
      _this$props$step = _this$props.step,
      step = _this$props$step === void 0 ? 1 : _this$props$step,
      _this$props$units = _this$props.units,
      units = _this$props$units === void 0 ? '' : _this$props$units,
      _this$props$precision = _this$props.precision,
      precision = _this$props$precision === void 0 ? 0 : _this$props$precision,
      value = _this$props.value;
    return /*#__PURE__*/React.createElement(_numberPicker["default"], {
      size: "small",
      style: {
        width: '100%'
      },
      className: "lowcode-setter-number",
      value: value,
      min: min,
      max: max,
      precision: precision,
      step: step,
      innerAfter: units,
      onChange: function onChange(val) {
        _onChange(val);
      }
    });
  };
  return NumberSetter;
}(React.PureComponent);
exports["default"] = NumberSetter;
NumberSetter.displayName = 'NumberSetter';