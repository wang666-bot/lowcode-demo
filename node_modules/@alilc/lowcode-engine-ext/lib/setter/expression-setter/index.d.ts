import React, { PureComponent } from 'react';
import './index.less';
export default class ExpressionView extends PureComponent {
    static displayName: string;
    static propTypes: {
        context: any;
        dataSource: any;
        locale: any;
        messages: any;
        onChange: any;
        placeholder: any;
        value: any;
    };
    static defaultProps: {
        context: {};
        dataSource: any[];
        locale: string;
        messages: {
            setting: string;
            edit: string;
            submitConfirm: string;
            close: string;
            fullScreen: string;
            cancelFullScreen: string;
            jsonIllegal: string;
            functionIllegal: string;
            objectIllegal: string;
            circularRef: string;
            formatError: string;
            saved: string;
            valueIllegal: string;
            jsExpression: string;
            input: string;
            textarea: string;
            expression: string;
            monacoEditor: string;
            numberPicker: string;
            bool: string;
            datePicker: string;
            select: string;
            radio: string;
            date: string;
            dateYear: string;
            dateMonth: string;
            dateRange: string;
            list: string;
            object: string;
            reactNode: string;
            typeError: string;
        };
        onChange: () => void;
        placeholder: string;
        value: string;
    };
    expression: React.RefObject<unknown>;
    i18n: any;
    t: any;
    $input: any;
    listenerFun: ((event: any) => void) | undefined;
    static getInitValue(val: {
        value: any;
        match: (arg0: RegExp) => any;
    }): any;
    constructor(props: any);
    onChange(value: string): void;
    /**
     * 获取AutoComplete数据源
     * @param  {String}
     * @return {Array}
     */
    getDataSource(): any[];
    /**
     * 获取光标前的对象字符串，语法解析获取对象字符串
     * @param  {String} str 模板字符串
     * @return {String}     光标前的对象字符串
     */
    getCurrentFiled(str: string | any[]): {
        str: string | any[];
        start: any;
        end: any;
    };
    /**
     * 获取输入的上下文信息
     * @param  {Array}
     * @return {Array}
     */
    getContextKeys(keys: []): any[];
    filterKey(obj: any, name: string): any[];
    /**
     * 根据输入项进行筛选
     * @param  {String}
     * @param  {String}
     * @return {Boolen}
     */
    filterOption(inputValue: string, item: {
        value: string | any[];
    }): boolean;
    render(): JSX.Element;
    componentDidMount(): void;
    componentWillUnmount(): void;
    /**
     * 获取Input输入框DOM节点
     */
    findInputElement(): any;
    /**
     * 获取光标位置
     *
     */
    getInputCursorPosition(): any;
    getObjectKeys(str: string): any[];
    setInputCursorPosition(idx: number): void;
}
