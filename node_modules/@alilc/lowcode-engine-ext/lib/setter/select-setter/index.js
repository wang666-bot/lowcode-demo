"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = void 0;
var _select = _interopRequireDefault(require("@alifd/next/lib/select"));
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var formateOptions = function formateOptions(options) {
  return options.map(function (item) {
    if (item.children) {
      var children = item.children.map(function (child) {
        return {
          label: child.title || child.label || '-',
          value: child.value,
          disabled: child.disabled || false
        };
      });
      return {
        label: item.title || item.label || '-',
        children: children
      };
    } else {
      return {
        label: item.title || item.label || '-',
        value: item.value,
        disabled: item.disabled || false
      };
    }
  });
};
var SelectSetter = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(SelectSetter, _PureComponent);
  function SelectSetter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      setterValue: null
    };
    return _this;
  }
  var _proto = SelectSetter.prototype;
  _proto.render = function render() {
    var _this$props = this.props,
      options = _this$props.options,
      _onChange = _this$props.onChange,
      mode = _this$props.mode,
      value = _this$props.value,
      showSearch = _this$props.showSearch;
    return /*#__PURE__*/_react["default"].createElement(_select["default"], {
      autoWidth: false,
      size: "small",
      value: value,
      dataSource: formateOptions(options),
      mode: mode,
      onChange: function onChange(val) {
        _onChange && _onChange(val);
      },
      style: {
        width: '100%'
      },
      showSearch: showSearch
    });
  };
  return SelectSetter;
}(_react.PureComponent);
exports["default"] = SelectSetter;
SelectSetter.defaultProps = {
  placeholder: '请选择',
  options: [{
    label: '-',
    value: ''
  }],
  defaultValue: null,
  onChange: function onChange() {
    return undefined;
  }
};
SelectSetter.displayName = 'SelectSetter';