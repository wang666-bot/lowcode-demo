import { Component } from 'react';
import './index.less';
export default class EventsSetter extends Component<{
    value: any[];
    onChange: (eventList: any[]) => void;
}> {
    state: {
        eventBtns: any[];
        eventList: any[];
        selectType: any;
        nativeEventList: any[];
        lifeCycleEventList: any[];
        isRoot: boolean;
        eventDataList: any;
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    initLifeCycleEventDataList: () => void;
    /**
     * 初始化事件按钮
     */
    initEventBtns(): void;
    initEventList(): void;
    checkEventListStatus: (eventList: any[], eventType: string) => void;
    /**
     * 渲染事件信息
     */
    renderEventInfoCell: (value: any, index: any, record: any) => import("react").JSX.Element;
    /**
     * 渲染事件操作项
     */
    renderEventOperateCell: (rowIndex: any, colIndex: any, record: any) => import("react").JSX.Element;
    updateEventListStatus: (eventName: string, unDisabled: boolean) => void;
    onRadioChange: (value: any) => void;
    onEventMenuClick: (eventName: string) => void;
    onRelatedEventNameClick: (eventName: string) => void;
    closeEventMenu: () => void;
    openDeleteEventDialog: (eventName: string) => void;
    deleteEvent: (eventName: string) => void;
    openDialog: (relatedEventName: string, eventName: String, isEdit: boolean) => void;
    bindEvent: (relatedEventName: string, paramStr: string, bindEventName: String) => void;
    render(): import("react").JSX.Element;
}
