"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = void 0;
var _dialog = _interopRequireDefault(require("@alifd/next/lib/dialog"));
var _tree = _interopRequireDefault(require("@alifd/next/lib/tree"));
var _input = _interopRequireDefault(require("@alifd/next/lib/input"));
var _icon = _interopRequireDefault(require("@alifd/next/lib/icon"));
var _button = _interopRequireDefault(require("@alifd/next/lib/button"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _react = _interopRequireWildcard(require("react"));
var _lowcodeEngine = require("@alilc/lowcode-engine");
var _lowcodePluginBaseMonacoEditor = _interopRequireDefault(require("@alilc/lowcode-plugin-base-monaco-editor"));
require("./index.less");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var HelpText = "\u4F60\u53EF\u4EE5\u901A\u8FC7\u70B9\u51FB\u5DE6\u4FA7\u533A\u57DF\u7ED1\u5B9A\u53D8\u91CF\u6216\u5904\u7406\u51FD\u6570\uFF0C\u5F53\u7136\u4F60\u4E5F\u53EF\u4EE5\u5728\u4E0A\u65B9\u8F93\u5165\u590D\u6742\u7684\u8868\u8FBE\u5F0F\u3002\n\u8F93\u5165\u6846\u5185\u9ED8\u8BA4\u652F\u6301\u53D8\u91CF\uFF0C\u5199\u6CD5\u548C JS \u5199\u6CD5\u5B8C\u5168\u4E00\u81F4\u3002<br>\nthis: '\u5BB9\u5668\u4E0A\u4E0B\u6587\u5BF9\u8C61'<br>\nstate: '\u5BB9\u5668\u7684state'<br>\nprops: '\u5BB9\u5668\u7684props'<br>\ncontext: '\u5BB9\u5668\u7684context'<br>\nschema: '\u9875\u9762\u4E0A\u4E0B\u6587\u5BF9\u8C61'<br>\ncomponent: '\u7EC4\u4EF6\u4E0A\u4E0B\u6587\u5BF9\u8C61'<br>\nconstants: '\u5E94\u7528\u5E38\u91CF\u5BF9\u8C61'<br>\nutils: '\u5E94\u7528\u5DE5\u5177\u5BF9\u8C61'<br>\ndataSourceMap: '\u5BB9\u5668\u6570\u636E\u6E90Map'<br>\nfield: '\u8868\u5355Field\u5BF9\u8C61'\n";
var defaultEditorProps = {
  width: '100%',
  height: '200px'
};
var defaultEditorOption = {
  readOnly: false,
  automaticLayout: true,
  folding: true,
  // 默认开启折叠代码功能
  lineNumbers: 'on',
  wordWrap: 'off',
  formatOnPaste: true,
  fontSize: 12,
  tabSize: 2,
  scrollBeyondLastLine: false,
  fixedOverflowWidgets: false,
  snippetSuggestions: 'top',
  minimap: {
    enabled: false
  },
  scrollbar: {
    vertical: 'auto',
    horizontal: 'auto'
  }
};
var VariableBindDialog = /*#__PURE__*/function (_Component) {
  (0, _inheritsLoose2["default"])(VariableBindDialog, _Component);
  function VariableBindDialog() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.state = {
      visiable: false,
      // stateVaroableList: [],
      helpText: HelpText,
      // contextKeys: [],
      jsCode: '',
      searchValue: '',
      variableListMap: {},
      // 变量列表
      selParentVariable: null,
      // 选中的父级变量
      childrenVariableList: [],
      // 子级变量列表
      field: {},
      // 编辑器全局变量
      treeList: [],
      minimize: false,
      // 是否最小化
      autoExpandParent: true,
      expandedKeys: []
    };
    _this.editorJsRef = /*#__PURE__*/_react["default"].createRef();
    _this.monocoEditor = void 0;
    _this.matchedKeys = void 0;
    _this.exportSchema = function () {
      var _this$props$config, _this$props$config$pr, _this$props$config$pr2;
      // 可以定制getSchema方法
      return ((_this$props$config = _this.props.config) === null || _this$props$config === void 0 ? void 0 : (_this$props$config$pr = _this$props$config.props) === null || _this$props$config$pr === void 0 ? void 0 : (_this$props$config$pr2 = _this$props$config$pr.getSchema) === null || _this$props$config$pr2 === void 0 ? void 0 : _this$props$config$pr2.call(_this$props$config$pr)) || _lowcodeEngine.project.exportSchema();
    };
    _this.initCode = function () {
      var field = _this.state.field;
      var fieldValue = field.getValue();
      var jsCode = fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.value;
      _this.setState({
        jsCode: jsCode,
        // fullScreenStatus: false,
        // stateVaroableList: [],
        searchValue: '',
        variableListMap: {},
        // 变量列表
        selParentVariable: null,
        // 选中的父级变量
        childrenVariableList: [],
        // 子级变量列表
        minimize: false // 是否最小化
      });
    };
    _this.openDialog = function () {
      _this.setState({
        visiable: true
      }, function () {
        var methods = _this.getMethods();
        var stateVaroableList = _this.getVarableList();
        var dataSource = _this.getDataSource();
        _this.setState({
          variableListMap: (0, _extends2["default"])({
            stateVaroableList: {
              name: 'State属性',
              childrens: stateVaroableList
            },
            methods: {
              name: '自定义处理函数',
              childrens: methods
            },
            dataSource: {
              name: '数据源',
              childrens: dataSource
            }
          }, _this.extraDataMap)
        });
      });
    };
    _this.closeDialog = function () {
      _this.setState({
        visiable: false,
        minimize: false
      });
    };
    _this.onSelectItem = function (value) {
      var _this$monocoEditor$ge = _this.monocoEditor.getPosition(),
        lineNumber = _this$monocoEditor$ge.lineNumber,
        column = _this$monocoEditor$ge.column;
      _this.monocoEditor.executeEdits('insert-code', [{
        range: {
          startLineNumber: lineNumber,
          startColumn: column,
          endLineNumber: lineNumber,
          endColumn: column
        },
        text: value
      }]);
    };
    _this.updateCode = function (newCode) {
      _this.setState({
        jsCode: newCode
      }, _this.autoSave);
    };
    _this.autoSave = function () {
      var autoSave = _this.props.autoSave;
      if (autoSave) {
        _this.onOk(true);
      }
    };
    _this.editorDidMount = function (editor) {
      _this.monocoEditor = editor;
      setTimeout(function () {
        _this.editorNode = _this.editorJsRef.current; // 记录当前dom节点；
      }, 0);
    };
    _this.onOk = function (autoSave) {
      var _this$state = _this.state,
        field = _this$state.field,
        jsCode = _this$state.jsCode;
      var fieldValue = field.getValue();
      field.setValue({
        type: 'JSExpression',
        value: jsCode,
        mock: Object.prototype.toString.call(fieldValue) === '[object Object]' ? fieldValue.mock : fieldValue
      });
      if (autoSave !== true) {
        _this.closeDialog();
      }
    };
    _this.removeTheBinding = function () {
      var field = _this.state.field;
      var fieldValue = field.getValue();
      var value = Object.prototype.toString.call(fieldValue) === '[object Object]' ? fieldValue.mock : fieldValue;
      field.setValue(value);
      _this.closeDialog();
    };
    _this.renderBottom = function () {
      var jsCode = _this.state.jsCode;
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "variable-bind-dialog-bottom"
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "bottom-left-container"
      }, jsCode && jsCode.length > 0 && /*#__PURE__*/_react["default"].createElement(_button["default"], {
        type: "normal",
        warning: true,
        onClick: _this.removeTheBinding
      }, "\u79FB\u9664\u7ED1\u5B9A")), /*#__PURE__*/_react["default"].createElement("div", {
        className: "bottom-right-container"
      }, /*#__PURE__*/_react["default"].createElement(_button["default"], {
        type: "primary",
        onClick: _this.onOk
      }, "\u786E\u5B9A"), "\xA0\xA0", /*#__PURE__*/_react["default"].createElement(_button["default"], {
        type: "normal",
        onClick: _this.closeDialog
      }, "\u53D6\u6D88")));
    };
    _this.handleExpand = function (keys) {
      _this.setState({
        expandedKeys: keys,
        autoExpandParent: false
      });
    };
    _this.onVariableSearchChange = function (value) {
      _this.setState({
        searchValue: value
      });
      var _this$state2 = _this.state,
        variableListMap = _this$state2.variableListMap,
        selParentVariable = _this$state2.selParentVariable;
      var selectedVariable = variableListMap[selParentVariable];
      if (!selectedVariable) {
        return;
      }
      value = value.trim();
      if (!value) {
        _this.matchedKeys = null;
        return;
      }
      var matchedKeys = [];
      var loop = function loop(data) {
        return data.forEach(function (item) {
          if (item.label.indexOf(value) > -1) {
            matchedKeys.push(item.key);
          }
          if (item.children && item.children.length) {
            loop(item.children);
          }
        });
      };
      loop(selectedVariable.childrens);
      _this.setState({
        expandedKeys: [].concat(matchedKeys),
        autoExpandParent: true
      });
      _this.matchedKeys = matchedKeys;
    };
    _this.onVariableItemClick = function (key) {
      var _this$extraDataMap, _this$extraDataMap$ke, _this$extraDataMap$ke2;
      var variableListMap = _this.state.variableListMap;
      var childrenVariableList;
      if ((_this$extraDataMap = _this.extraDataMap) !== null && _this$extraDataMap !== void 0 && _this$extraDataMap[key] && (_this$extraDataMap$ke = _this.extraDataMap[key]) !== null && _this$extraDataMap$ke !== void 0 && (_this$extraDataMap$ke2 = _this$extraDataMap$ke.getChildren) !== null && _this$extraDataMap$ke2 !== void 0 && _this$extraDataMap$ke2.call(_this$extraDataMap$ke)) {
        childrenVariableList = _this.extraDataMap[key].getChildren();
      } else {
        childrenVariableList = variableListMap[key].childrens;
      }

      // const matchedKeys = [];
      // const loop = data =>
      //   data.forEach(item => {
      //     if (item.label.indexOf(value) > -1) {
      //       matchedKeys.push(item.key);
      //     }
      //     if (item.children && item.children.length) {
      //       loop(item.children);
      //     }
      //   });
      // loop(childrenVariableList);

      _this.setState({
        selParentVariable: key,
        childrenVariableList: childrenVariableList
        // matchedKeys
      });
    };
    _this.minimizeClick = function (state) {
      _this.setState({
        minimize: state,
        visiable: !state
      });
    };
    _this.onSelectTreeNode = function (selectedKeys, extra) {
      var _extra$selectedNodes$, _extra$selectedNodes$2, _extra$selectedNodes$3;
      var _this$state3 = _this.state,
        selParentVariable = _this$state3.selParentVariable,
        childrenVariableList = _this$state3.childrenVariableList;
      var label = (_extra$selectedNodes$ = extra.selectedNodes[0]) === null || _extra$selectedNodes$ === void 0 ? void 0 : (_extra$selectedNodes$2 = _extra$selectedNodes$.props) === null || _extra$selectedNodes$2 === void 0 ? void 0 : _extra$selectedNodes$2.label;
      var key = (_extra$selectedNodes$3 = extra.selectedNodes[0]) === null || _extra$selectedNodes$3 === void 0 ? void 0 : _extra$selectedNodes$3.key;
      var selectLabel;
      if (selParentVariable == 'stateVaroableList') {
        var pathList = _this.treeFindPath(childrenVariableList, function (data) {
          return data.key == key;
        }, 'label');
        selectLabel = "this.state." + pathList.join('.');
      } else if (selParentVariable == 'methods') {
        selectLabel = label + "()";
      } else if (selParentVariable == 'dataSource') {
        selectLabel = "this.state." + label;
      } else {
        var fondKey = Object.keys(_this.extraDataMap || {}).find(function (k) {
          return k === selParentVariable;
        });
        if (fondKey) {
          var propKey = _this.extraDataMap[fondKey].key;
          var _pathList = _this.treeFindPath(childrenVariableList, function (data) {
            return data.key === key;
          }, 'label');
          selectLabel = "this." + propKey + "." + _pathList.join('.');
        }
      }
      _this.onSelectItem(selectLabel);
    };
    _this.renderTitle = function () {
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "variable-dialog-title"
      }, /*#__PURE__*/_react["default"].createElement("span", null, "\u53D8\u91CF\u7ED1\u5B9A"), /*#__PURE__*/_react["default"].createElement("img", {
        style: {
          width: '12px'
        },
        src: "https://img.alicdn.com/imgextra/i1/O1CN01NlC5mY1bTvrlW3blw_!!6000000003467-55-tps-200-200.svg",
        onClick: function onClick() {
          return _this.minimizeClick(true);
        }
      }));
    };
    return _this;
  }
  var _proto = VariableBindDialog.prototype;
  _proto.componentDidMount = function componentDidMount() {
    var _this2 = this;
    _lowcodeEngine.event.on('common:variableBindDialog.openDialog', function (_ref) {
      var field = _ref.field;
      _this2.setState({
        field: field
      }, function () {
        _this2.initCode();
        _this2.openDialog();
      });
    });
  };
  /**
   * 获取methods数据源
   * @param  {String}
   * @return {Array}
   */
  _proto.getMethods = function getMethods() {
    var _schema$componentsTre;
    var schema = this.exportSchema();
    var methodsMap = (_schema$componentsTre = schema.componentsTree[0]) === null || _schema$componentsTre === void 0 ? void 0 : _schema$componentsTre.methods;
    var methods = [];
    for (var key in methodsMap) {
      if (Object.prototype.hasOwnProperty.call(methodsMap, key) && key) {
        // methods.push(`${key}()`);
        methods.push({
          label: "" + key,
          key: key
        });
      }
    }
    return methods;
  }

  /**
   * 获取AutoComplete数据源
   * @param  {String}
   * @return {Array}
   */;
  _proto.getVarableList = function getVarableList() {
    var _schema$componentsTre2;
    var schema = this.exportSchema();
    var stateMap = (_schema$componentsTre2 = schema.componentsTree[0]) === null || _schema$componentsTre2 === void 0 ? void 0 : _schema$componentsTre2.state;
    var dataSourceMap = {};
    var dataSource = [];
    for (var key in stateMap) {
      if (Object.prototype.hasOwnProperty.call(stateMap, key) && key) {
        dataSource.push("this.state." + key);
        var valueString = stateMap[key].value;
        var value = void 0;
        try {
          value = eval("(" + valueString + ")");
        } catch (e) {}
        if (value) {
          dataSourceMap[key] = value;
        }
      }
    }
    var treeList = [];
    this.walkNode(dataSourceMap, -1, treeList);
    // this.setState({
    //   treeList
    // })
    return treeList;
  }

  /**
   * 通过子节点id查找节点path
   * @param tree
   * @param func
   * @param field
   * @param path
   * @returns
   */;
  _proto.treeFindPath = function treeFindPath(tree, func, field, path) {
    if (field === void 0) {
      field = "";
    }
    if (path === void 0) {
      path = [];
    }
    if (!tree) return [];
    for (var _iterator = _createForOfIteratorHelperLoose(tree), _step; !(_step = _iterator()).done;) {
      var data = _step.value;
      field === "" ? path.push(data) : path.push(data[field]);
      if (func(data)) return path;
      if (data.children) {
        var findChildren = this.treeFindPath(data.children, func, field, path);
        if (findChildren.length) return findChildren;
      }
      path.pop();
    }
    return [];
  }

  /**
   * 循环遍历节点
   * @param dataSourceMap
   * @param deepNum
   * @param treeList
   */;
  _proto.walkNode = function walkNode(dataSourceMap, deepNum, treeList) {
    deepNum++;
    var index = 0;
    for (var key in dataSourceMap) {
      var treeData = {};
      treeData.label = key;
      // treeData.key = deepNum+'_'+index;
      if (typeof dataSourceMap[key] === 'object' && !(dataSourceMap[key] instanceof Array)) {
        treeData.children = [];
        this.walkNode(dataSourceMap[key], deepNum, treeData.children);
      }
      index++;
      treeList.push(treeData);
    }
  }

  /**
   * 获取数据源面板中的数据
   * @param  {String}
   * @return {Array}
   */;
  _proto.getDataSource = function getDataSource() {
    var _schema$componentsTre3;
    var schema = this.exportSchema();
    var stateMap = (_schema$componentsTre3 = schema.componentsTree[0]) === null || _schema$componentsTre3 === void 0 ? void 0 : _schema$componentsTre3.dataSource;
    var list = (stateMap === null || stateMap === void 0 ? void 0 : stateMap.list) || [];
    var dataSource = [];
    for (var _iterator2 = _createForOfIteratorHelperLoose(list), _step2; !(_step2 = _iterator2()).done;) {
      var item = _step2.value;
      if (item && item.id) {
        // dataSource.push(`this.state.${item.id}`);
        dataSource.push({
          label: "" + item.id,
          key: item.id
        });
      }
    }
    return dataSource;
  }

  /**
   * 获取输入的上下文信息
   * @param  {Array}
   * @return {Array}
   */;
  _proto.getContextKeys = function getContextKeys(keys) {
    var editor = this.props.editor;
    var limitKeys = ['schema', 'utils', 'constants'];
    if (!keys || keys.length === 0) return limitKeys;
    if (!limitKeys.includes(keys[0])) return [];
    var result = [];
    var keyValue = editor;
    var assert = false;
    keys.forEach(function (item) {
      if (!keyValue[item] || typeof keyValue[item] !== 'object') {
        assert = true;
      }
      if (keyValue[item]) {
        keyValue = keyValue[item];
      }
    });
    if (assert) return [];
    result = Object.keys(keyValue);
    return result;
  };
  _proto.render = function render() {
    var _this3 = this;
    var _this$state4 = this.state,
      visiable = _this$state4.visiable,
      variableListMap = _this$state4.variableListMap,
      selParentVariable = _this$state4.selParentVariable,
      childrenVariableList = _this$state4.childrenVariableList,
      helpText = _this$state4.helpText,
      jsCode = _this$state4.jsCode,
      searchValue = _this$state4.searchValue,
      minimize = _this$state4.minimize,
      expandedKeys = _this$state4.expandedKeys,
      autoExpandParent = _this$state4.autoExpandParent;
    var filterTreeNode = function filterTreeNode(node) {
      return _this3.matchedKeys && _this3.matchedKeys.indexOf(node.props.eventKey) > -1;
    };
    return /*#__PURE__*/_react["default"].createElement("div", null, minimize ? /*#__PURE__*/_react["default"].createElement("div", {
      className: "vs-variable-minimize"
    }, /*#__PURE__*/_react["default"].createElement("img", {
      onClick: function onClick() {
        return _this3.minimizeClick(false);
      },
      src: "https://img.alicdn.com/imgextra/i2/O1CN01HzeCND1vl948xPEWm_!!6000000006212-55-tps-200-200.svg"
    }), /*#__PURE__*/_react["default"].createElement("span", {
      onClick: function onClick() {
        return _this3.minimizeClick(false);
      },
      className: "vs-variable-minimize-title"
    }, "\u53D8\u91CF\u7ED1\u5B9A"), /*#__PURE__*/_react["default"].createElement("img", {
      onClick: this.closeDialog,
      src: "https://img.alicdn.com/imgextra/i2/O1CN017cO64O1DzwlxwDSKW_!!6000000000288-55-tps-200-200.svg"
    })) : '', /*#__PURE__*/_react["default"].createElement(_dialog["default"], {
      visible: !minimize && visiable,
      title: this.renderTitle(),
      onClose: this.closeDialog,
      footer: this.renderBottom(),
      popupContainer: document.getElementById('engine-popup-container') ? 'engine-popup-container' : undefined
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "variable-dialog-body"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "dialog-left-container"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "dialog-small-title"
    }, "\u53D8\u91CF\u5217\u8868"), /*#__PURE__*/_react["default"].createElement("div", {
      className: "vs-variable-selector-inner"
    }, /*#__PURE__*/_react["default"].createElement("ul", {
      className: "vs-variable-selector-category vs-variable-selector-ul"
    }, Object.keys(variableListMap).map(function (key) {
      return /*#__PURE__*/_react["default"].createElement("li", {
        onClick: function onClick() {
          return _this3.onVariableItemClick(key);
        },
        className: selParentVariable === key && 'active',
        key: key
      }, variableListMap[key].name);
    })), /*#__PURE__*/_react["default"].createElement("div", {
      className: "vs-variable-selector-items-container"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "ve-search-control"
    }, /*#__PURE__*/_react["default"].createElement(_input["default"], {
      innerAfter: /*#__PURE__*/_react["default"].createElement(_icon["default"], {
        type: "search",
        size: "xs",
        style: {
          margin: 4
        }
      }),
      placeholder: "\u641C\u7D22",
      value: searchValue,
      "aria-label": "\u641C\u7D22",
      style: {
        width: '100%'
      },
      onChange: this.onVariableSearchChange
    })), /*#__PURE__*/_react["default"].createElement("ul", {
      className: "tree-container"
    }, /*#__PURE__*/_react["default"].createElement(_tree["default"], {
      dataSource: childrenVariableList,
      onSelect: this.onSelectTreeNode,
      defaultExpandAll: true,
      filterTreeNode: filterTreeNode,
      expandedKeys: expandedKeys,
      autoExpandParent: autoExpandParent,
      onExpand: this.handleExpand
    }))))), /*#__PURE__*/_react["default"].createElement("div", {
      className: "dialog-right-container"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "dialog-small-title"
    }, "\u7ED1\u5B9A"), /*#__PURE__*/_react["default"].createElement("div", {
      id: "jsEditorDom",
      className: "editor-context",
      ref: this.editorJsRef
    }, /*#__PURE__*/_react["default"].createElement(_lowcodePluginBaseMonacoEditor["default"], (0, _extends2["default"])({
      value: jsCode
    }, defaultEditorProps, defaultEditorOption, {
      language: 'javascript',
      onChange: function onChange(newCode) {
        return _this3.updateCode(newCode);
      },
      editorDidMount: function editorDidMount(useMonaco, editor) {
        _this3.editorDidMount.call(_this3, editor, useMonaco);
      }
    }))), /*#__PURE__*/_react["default"].createElement("div", {
      className: "dialog-help-tip-input"
    }, /*#__PURE__*/_react["default"].createElement("p", {
      className: "vs-variable-content-desc-title"
    }, "\u7528\u6CD5"), /*#__PURE__*/_react["default"].createElement("p", {
      dangerouslySetInnerHTML: {
        __html: helpText
      }
    }))))));
  };
  (0, _createClass2["default"])(VariableBindDialog, [{
    key: "extraDataMap",
    get: function get() {
      var _this$props$config$pr3;
      return (_this$props$config$pr3 = this.props.config.props) === null || _this$props$config$pr3 === void 0 ? void 0 : _this$props$config$pr3.extraDataMap;
    }
  }]);
  return VariableBindDialog;
}(_react.Component);
exports["default"] = VariableBindDialog;