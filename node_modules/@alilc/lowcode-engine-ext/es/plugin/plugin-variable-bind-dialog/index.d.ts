import { Component } from 'react';
import { PluginProps } from '@alilc/lowcode-types';
import './index.less';
export default class VariableBindDialog extends Component<PluginProps> {
    state: {
        visiable: boolean;
        helpText: string;
        jsCode: string;
        searchValue: string;
        variableListMap: {};
        selParentVariable: any;
        childrenVariableList: any[];
        field: {};
        treeList: any[];
        minimize: boolean;
        autoExpandParent: boolean;
        expandedKeys: any[];
    };
    private editorJsRef;
    private monocoEditor;
    private matchedKeys;
    get extraDataMap(): any;
    componentDidMount(): void;
    exportSchema: () => any;
    initCode: () => void;
    /**
     * 获取methods数据源
     * @param  {String}
     * @return {Array}
     */
    getMethods(): any[];
    /**
     * 获取AutoComplete数据源
     * @param  {String}
     * @return {Array}
     */
    getVarableList(): any[];
    /**
     * 通过子节点id查找节点path
     * @param tree
     * @param func
     * @param field
     * @param path
     * @returns
     */
    treeFindPath(tree: any, func: any, field?: string, path?: any[]): any;
    /**
     * 循环遍历节点
     * @param dataSourceMap
     * @param deepNum
     * @param treeList
     */
    walkNode(dataSourceMap: any, deepNum: any, treeList: any): void;
    /**
     * 获取数据源面板中的数据
     * @param  {String}
     * @return {Array}
     */
    getDataSource(): any[];
    /**
     * 获取输入的上下文信息
     * @param  {Array}
     * @return {Array}
     */
    getContextKeys(keys?: []): any[];
    openDialog: () => void;
    closeDialog: () => void;
    onSelectItem: (value: string) => void;
    updateCode: (newCode: any) => void;
    autoSave: () => void;
    editorDidMount: (editor: any) => void;
    onOk: (autoSave: any) => void;
    removeTheBinding: () => void;
    renderBottom: () => JSX.Element;
    handleExpand: (keys: any) => void;
    onVariableSearchChange: (value: any) => void;
    onVariableItemClick: (key: string) => void;
    minimizeClick: (state: any) => void;
    onSelectTreeNode: (selectedKeys: any, extra: any) => void;
    renderTitle: () => JSX.Element;
    render(): JSX.Element;
}
