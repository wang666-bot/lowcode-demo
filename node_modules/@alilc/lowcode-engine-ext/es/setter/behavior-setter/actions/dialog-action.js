import _Select from "@alifd/next/es/select";
import _Box from "@alifd/next/es/box";
import * as React from 'react';
import { useEffect, useState } from 'react';
var getDialogList = function getDialogList(field) {
  var _nodeDocument$modalNo, _nodeDocument$modalNo2;
  var node = field.getNode();
  var nodeDocument = node.document || node.page;
  var nodeList = nodeDocument === null || nodeDocument === void 0 ? void 0 : (_nodeDocument$modalNo = nodeDocument.modalNodesManager) === null || _nodeDocument$modalNo === void 0 ? void 0 : (_nodeDocument$modalNo2 = _nodeDocument$modalNo.getModalNodes) === null || _nodeDocument$modalNo2 === void 0 ? void 0 : _nodeDocument$modalNo2.call(_nodeDocument$modalNo);
  if (!nodeList || !nodeList.length) {
    var _nodeDocument$modalNo3, _nodeDocument$modalNo4, _nodeDocument$modalNo5, _nodeDocument$modalNo6;
    nodeDocument === null || nodeDocument === void 0 ? void 0 : (_nodeDocument$modalNo3 = nodeDocument.modalNodesManager) === null || _nodeDocument$modalNo3 === void 0 ? void 0 : (_nodeDocument$modalNo4 = _nodeDocument$modalNo3.setNodes) === null || _nodeDocument$modalNo4 === void 0 ? void 0 : _nodeDocument$modalNo4.call(_nodeDocument$modalNo3);
    nodeList = nodeDocument === null || nodeDocument === void 0 ? void 0 : (_nodeDocument$modalNo5 = nodeDocument.modalNodesManager) === null || _nodeDocument$modalNo5 === void 0 ? void 0 : (_nodeDocument$modalNo6 = _nodeDocument$modalNo5.getModalNodes) === null || _nodeDocument$modalNo6 === void 0 ? void 0 : _nodeDocument$modalNo6.call(_nodeDocument$modalNo5);
  }
  return (nodeList || []).filter(function (x) {
    return x && x.propsData;
  }).map(function (x) {
    return {
      label: x.propsData && x.propsData.title ? x.propsData.title + "(" + x.id + ")" : x.id + "(" + x.componentName + ")",
      value: x.propsData.ref
    };
  });
};
var DialogContent = function DialogContent(_ref) {
  var _ref$value = _ref.value,
    value = _ref$value === void 0 ? {} : _ref$value,
    _onChange = _ref.onChange,
    field = _ref.field;
  var _useState = useState([]),
    dialogList = _useState[0],
    setDialogList = _useState[1];
  useEffect(function () {
    setDialogList(getDialogList(field));
  }, [field]);
  return /*#__PURE__*/React.createElement(_Box, {
    direction: "row",
    align: "center",
    className: "behavior-item"
  }, /*#__PURE__*/React.createElement(_Box, {
    style: {
      width: 70
    }
  }, "\u7ED1\u5B9A\u5F39\u7A97"), /*#__PURE__*/React.createElement(_Box, {
    className: "behavior-radio"
  }, /*#__PURE__*/React.createElement(_Select, {
    size: "small",
    hasClear: true,
    value: value.id,
    onChange: function onChange(val) {
      return _onChange({
        id: val
      });
    },
    dataSource: dialogList,
    style: {
      width: '100%',
      marginRight: 8
    }
  })));
};
export var dialogBehaviorAction = {
  name: 'dialog',
  title: '弹窗',
  render: function render(props) {
    return /*#__PURE__*/React.createElement(DialogContent, props);
  },
  toActionValue: function toActionValue(value) {
    return value.id ? {
      type: 'JSExpression',
      value: "function() {\n      const dialog = this.$('" + value.id + "');\n      dialog.show();\n    }"
    } : null;
  }
};