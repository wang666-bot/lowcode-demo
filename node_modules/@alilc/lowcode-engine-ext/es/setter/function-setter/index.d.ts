import { PureComponent } from 'react';
import './index.less';
interface FunctionSetterProps {
    value: string;
    type: string;
    defaultValue: string;
    placeholder: string;
    hasClear: boolean;
    onChange: (icon: string) => undefined;
    icons: string[];
}
export default class FunctionSetter extends PureComponent<FunctionSetterProps> {
    static defaultProps: {
        value: any;
        type: string;
        defaultValue: string;
        hasClear: boolean;
        placeholder: string;
        onChange: () => any;
    };
    private emitEventName;
    state: {
        isShowDialog: boolean;
    };
    componentDidMount(): void;
    bindEvent: (eventName: any, paramStr: any) => void;
    componentWillUnmount(): void;
    bindFunction: (isEdit: any) => void;
    openDialog: () => void;
    closeDialog: () => void;
    removeFunctionBind: () => void;
    parseFunctionName: (functionString: string) => string;
    parseFunctionParam: (functionString: string) => string;
    /**
     * 渲染按钮(初始状态)
     */
    renderButton: () => JSX.Element;
    updateCode: (newCode: any) => void;
    onDialogOk: () => void;
    focusFunctionName: (functionName: any) => void;
    /**
     * 渲染绑定函数
     */
    renderBindFunction: () => JSX.Element;
    /**
     * 渲染编辑函数按钮(可直接编辑函数内容)
     */
    renderEditFunctionButton: () => JSX.Element;
    bindEventCallback: (eventName: string, paramStr: string) => void;
    render(): JSX.Element;
}
export {};
