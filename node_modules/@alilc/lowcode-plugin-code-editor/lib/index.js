"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports["default"] = void 0;
var _pane = require("./pane");
var _lowcodeEngine = require("@alilc/lowcode-engine");
var _icon = _interopRequireDefault(require("./icon"));
var plugin = function plugin(ctx) {
  return {
    name: 'codeEditor',
    width: 600,
    // 依赖的插件（插件名数组）
    dep: [],
    // 插件对外暴露的数据和方法
    exports: function exports() {
      return {};
    },
    // 插件的初始化函数，在引擎初始化之后会立刻调用
    init: function init() {
      var codeEditorDock = ctx.skeleton.add({
        area: 'leftArea',
        name: 'codeEditor',
        type: 'PanelDock',
        props: {
          icon: _icon["default"],
          description: '源码面板'
        },
        panelProps: {
          width: '600px',
          title: '源码面板'
        },
        content: /*#__PURE__*/React.createElement(_pane.CodeEditorPane, {
          event: ctx.event,
          skeleton: ctx.skeleton,
          project: ctx.project
        })
      });
      codeEditorDock && codeEditorDock.disable();
      _lowcodeEngine.project.onSimulatorRendererReady(function () {
        codeEditorDock.enable();
      });
    }
  };
};
plugin.pluginName = 'codeEditor';
var _default = exports["default"] = plugin;