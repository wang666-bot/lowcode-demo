import { DATA_TYPE } from './types';
export function getDataWithType(data, type) {
  if (type === DATA_TYPE.json) {
    try {
      return JSON.parse(data);
    } catch (e) {}
  }

  if (type === DATA_TYPE.text) {
    try {
      return JSON.stringify(data);
    } catch (e) {}
  }

  return data;
}
export function stringifyQS(qs) {
  if (!qs) {
    return '';
  }

  var str = [];

  for (var key in qs) {
    if (qs[key] !== undefined && qs[key] !== null) {
      str.push(key + "=" + encodeURIComponent(String(qs[key])));
    }
  }

  return str.join('&');
}
export function applyParamToURL(param, url) {
  if (!param) {
    return url;
  }

  return "" + url + (url.indexOf('?') === -1 ? '?' : '&') + stringifyQS(param);
}
export function object2json(obj) {
  try {
    return JSON.stringify(obj);
  } catch (e) {
    return obj || '';
  }
}
export function isObject(obj) {
  return typeof obj === 'object' && obj !== null;
}
export function normalizeHeaders(obj) {
  if (!isObject(obj)) {
    return obj;
  }

  ['Accept', 'Content-Type'].forEach(function (key) {
    Object.keys(obj).some(function (headerKey) {
      if (headerKey.toUpperCase() === key.toUpperCase() && headerKey !== key) {
        obj[key] = obj[headerKey];
        delete obj[headerKey];
        return true;
      }

      return false;
    });
  });
  return obj;
}
export function checkIsApplyDataToURL(headers) {
  if (!headers || !headers['Content-Type']) {
    return false;
  }

  return String(headers['Content-Type']).toLowerCase().indexOf('application/x-www-form-urlencoded') > -1;
}
var EMPTY_OBJECT = {};
export function isPlainObject(obj) {
  return EMPTY_OBJECT.toString.call(obj) === '[object Object]';
}