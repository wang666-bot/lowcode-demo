import { isWeex, isMiniApp, isWeChatMiniProgram, isWeb, isByteDanceMicroApp } from 'universal-env';
import { DEFAULT_REQUEST_OPTIONS } from './types';
import { normalizeHeaders } from './utils';
import webModule from './web/index';
import weexModule from './weex/index';
import miniAppModule from './miniapp/index';
import weChatModule from './wechat-miniprogram/index';
import bytedanceModule from './miniapp-bytedance/index';

function dutyChain() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  for (var i = 0; i < fns.length; i++) {
    var result = fns[i]();

    if (result) {
      return result;
    }
  }
}

function handleWeb(afterOptions) {
  if (isWeb) {
    return webModule(afterOptions);
  }

  return null;
}

function handleMiniApp(afterOptions) {
  if (isMiniApp) {
    return miniAppModule(afterOptions);
  }

  return null;
}

function handleWeex(afterOptions) {
  if (isWeex) {
    return weexModule(afterOptions);
  }

  return null;
}

function handleWeChatMiniprogram(afterOptions) {
  if (isWeChatMiniProgram) {
    return weChatModule(afterOptions);
  }

  return null;
}

function handleBytedanceMiniprogram(afterOptions) {
  if (isByteDanceMicroApp) {
    return bytedanceModule(afterOptions);
  }
}

export default function (options) {
  var afterOptions = Object.assign({}, DEFAULT_REQUEST_OPTIONS, options, {
    method: (options.method || 'GET').toUpperCase()
  });
  options.headers = normalizeHeaders(options.headers || {});
  return dutyChain(handleWeex.bind(null, afterOptions), handleWeb.bind(null, afterOptions), handleMiniApp.bind(null, afterOptions), handleBytedanceMiniprogram.bind(null, afterOptions), handleWeChatMiniprogram.bind(null, afterOptions));
}