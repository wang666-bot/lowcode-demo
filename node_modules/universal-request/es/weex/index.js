import { DATA_TYPE, ERROR_REQUEST_ABORT } from '../types';
import { applyParamToURL, object2json, checkIsApplyDataToURL } from '../utils';
export default function weexRequest(options) {
  var Stream = __weex_require__('@weex-module/stream');

  return new Promise(function (resolve, reject) {
    var requestOptions = Object.assign({}, options);
    var url = requestOptions.url,
        method = requestOptions.method,
        data = requestOptions.data,
        dataType = requestOptions.dataType,
        headers = requestOptions.headers;

    if (method === 'GET' && data || checkIsApplyDataToURL(headers)) {
      requestOptions.url = applyParamToURL(data, url);
    } else if (data) {
      requestOptions.body = object2json(data);
    }

    if (requestOptions.isJSONP) {
      requestOptions.type = 'jsonp';
      delete requestOptions.isJSONP;
    } else if (dataType === DATA_TYPE.json) {
      requestOptions.type = 'json';
    } else {
      requestOptions.type = 'text';
    }

    Stream.fetch(requestOptions, function (response) {
      try {
        if (typeof response === 'string') {
          // parse the response（it is string in weex-android & obj in ios）
          response = JSON.parse(response);

          if (response.data && typeof response.data === 'string' && response.ok) {
            try {
              response.data = JSON.parse(response.data);
            } catch (e) {
              throw new Error('the response.data in not valid json');
            }
          }
        }

        if (response.ok !== true) {
          throw response;
        }

        resolve({
          headers: response.headers,
          status: response.status,
          data: response.data
        });
      } catch (error) {
        reject({
          code: ERROR_REQUEST_ABORT.code,
          message: object2json(error)
        });
      }
    }, function (progress) {
      if (progress.status === 'FAILED') reject({
        code: ERROR_REQUEST_ABORT.code,
        message: object2json(progress)
      });
    });
  });
}