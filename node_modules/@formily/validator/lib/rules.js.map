{"version":3,"file":"rules.js","sourceRoot":"","sources":["../src/rules.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  isEmpty,\n  isValid,\n  stringLength,\n  isStr,\n  isArr,\n  isFn,\n  toArr,\n  isBool,\n  isNum,\n  isEqual,\n  each,\n} from '@formily/shared'\nimport { getValidateFormats } from './registry'\nimport { IRegistryRules } from './types'\n\nconst isValidateEmpty = (value: any) => {\n  if (isArr(value)) {\n    for (let i = 0; i < value.length; i++) {\n      if (isValid(value[i])) return false\n    }\n    return true\n  } else {\n    //compat to draft-js\n    if (value?.getCurrentContent) {\n      /* istanbul ignore next */\n      return !value.getCurrentContent()?.hasText()\n    }\n    return isEmpty(value)\n  }\n}\n\nconst getLength = (value: any) =>\n  isStr(value) ? stringLength(value) : value ? value.length : 0\n\nconst extendSameRules = (\n  rules: IRegistryRules,\n  names: Record<string, string>\n) => {\n  each(names, (realName, name) => {\n    rules[name] = (value, rule, ...args) =>\n      rules[realName](value, { ...rule, [realName]: rule[name] }, ...args)\n  })\n}\n\nconst RULES: IRegistryRules = {\n  format(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    if (rule.format) {\n      const format = getValidateFormats(rule.format)\n      if (format) {\n        return !new RegExp(format).test(value) ? rule.message : ''\n      }\n    }\n    return ''\n  },\n  required(value, rule) {\n    if (rule.required === false) return ''\n    return isValidateEmpty(value) ? rule.message : ''\n  },\n  max(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    const length = isNum(value) ? value : getLength(value)\n    const max = Number(rule.max)\n    return length > max ? rule.message : ''\n  },\n  min(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    const length = isNum(value) ? value : getLength(value)\n    const min = Number(rule.min)\n    return length < min ? rule.message : ''\n  },\n  exclusiveMaximum(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    const length = isNum(value) ? value : getLength(value)\n    const max = Number(rule.exclusiveMaximum)\n    return length >= max ? rule.message : ''\n  },\n  exclusiveMinimum(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    const length = isNum(value) ? value : getLength(value)\n    const min = Number(rule.exclusiveMinimum)\n    return length <= min ? rule.message : ''\n  },\n  len(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    const length = getLength(value)\n    const len = Number(rule.len)\n    return length !== len ? rule.message : ''\n  },\n\n  pattern(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    return !new RegExp(rule.pattern).test(value) ? rule.message : ''\n  },\n  async validator(value, rule, context, format) {\n    if (isFn(rule.validator)) {\n      const response = await Promise.resolve(\n        rule.validator(value, rule, context, format)\n      )\n      if (isBool(response)) {\n        return !response ? rule.message : ''\n      } else {\n        return response\n      }\n    }\n    /* istanbul ignore next */\n    throw new Error(\"The rule's validator property must be a function.\")\n  },\n  whitespace(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    if (rule.whitespace) {\n      return /^\\s+$/.test(value) ? rule.message : ''\n    }\n  },\n  enum(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    const enums = toArr(rule.enum)\n    return enums.indexOf(value) === -1 ? rule.message : ''\n  },\n  const(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    return rule.const !== value ? rule.message : ''\n  },\n  multipleOf(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    return Number(value) % Number(rule.multipleOf) !== 0 ? rule.message : ''\n  },\n  uniqueItems(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    value = toArr(value)\n    return value.some((item: any, index: number) => {\n      for (let i = 0; i < value.length; i++) {\n        if (i !== index && !isEqual(value[i], item)) {\n          return false\n        }\n      }\n      return true\n    })\n      ? ''\n      : rule.message\n  },\n  maxProperties(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    return Object.keys(value || {}).length <= Number(rule.maxProperties)\n      ? ''\n      : rule.message\n  },\n  minProperties(value, rule) {\n    if (isValidateEmpty(value)) return ''\n    return Object.keys(value || {}).length >= Number(rule.minProperties)\n      ? ''\n      : rule.message\n  },\n}\n\nextendSameRules(RULES, {\n  maximum: 'max',\n  minimum: 'min',\n  maxItems: 'max',\n  minItems: 'min',\n  maxLength: 'max',\n  minLength: 'min',\n})\n\nexport default RULES\n"]}