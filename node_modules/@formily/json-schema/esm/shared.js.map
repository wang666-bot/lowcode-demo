{"version":3,"file":"shared.js","sourceRoot":"","sources":["../src/shared.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFn, each, isPlainObj, isArr, toArr, FormPath } from '@formily/shared'\nimport { isObservable, untracked } from '@formily/reactive'\nimport { Schema } from './schema'\nimport { ISchema } from './types'\n\nconst REVA_ACTIONS_KEY = Symbol.for('__REVA_ACTIONS')\n\nexport const SchemaNestedMap = {\n  parent: true,\n  root: true,\n  properties: true,\n  patternProperties: true,\n  additionalProperties: true,\n  items: true,\n  additionalItems: true,\n  'x-linkages': true,\n  'x-reactions': true,\n}\n\nexport const SchemaStateMap = {\n  title: 'title',\n  description: 'description',\n  default: 'initialValue',\n  enum: 'dataSource',\n  readOnly: 'readOnly',\n  writeOnly: 'editable',\n  'x-content': 'content',\n  'x-data': 'data',\n  'x-value': 'value',\n  'x-editable': 'editable',\n  'x-disabled': 'disabled',\n  'x-read-pretty': 'readPretty',\n  'x-read-only': 'readOnly',\n  'x-visible': 'visible',\n  'x-hidden': 'hidden',\n  'x-display': 'display',\n  'x-pattern': 'pattern',\n  'x-validator': 'validator',\n  'x-decorator': 'decoratorType',\n  'x-component': 'componentType',\n  'x-decorator-props': 'decoratorProps',\n  'x-component-props': 'componentProps',\n}\n\nexport const SchemaValidatorMap = {\n  required: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  maxLength: true,\n  minLength: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  pattern: true,\n  const: true,\n  multipleOf: true,\n  maxProperties: true,\n  minProperties: true,\n  uniqueItems: true,\n}\n\nexport const SchemaNormalKeys = Object.keys(SchemaStateMap)\n\nexport const SchemaValidatorKeys = Object.keys(SchemaValidatorMap)\n\nexport const hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport const traverse = (\n  target: any,\n  visitor: (value: any, path: Array<string | number>) => void\n) => {\n  const seenObjects = []\n  const root = target\n  const traverse = (target: any, path = []) => {\n    if (isPlainObj(target)) {\n      const seenIndex = seenObjects.indexOf(target)\n      if (seenIndex > -1) {\n        return\n      }\n      const addIndex = seenObjects.length\n      seenObjects.push(target)\n      if (isNoNeedCompileObject(target) && root !== target) {\n        visitor(target, path)\n        return\n      }\n      each(target, (value, key) => {\n        traverse(value, path.concat(key))\n      })\n      seenObjects.splice(addIndex, 1)\n    } else {\n      visitor(target, path)\n    }\n  }\n  traverse(target)\n}\n\nexport const traverseSchema = (\n  schema: ISchema,\n  visitor: (value: any, path: any[], omitCompile?: boolean) => void\n) => {\n  if (schema['x-validator'] !== undefined) {\n    visitor(\n      schema['x-validator'],\n      ['x-validator'],\n      schema['x-compile-omitted']?.includes('x-validator')\n    )\n  }\n  const seenObjects = []\n  const root = schema\n  const traverse = (target: any, path = []) => {\n    if (\n      path[0] === 'x-compile-omitted' ||\n      path[0] === 'x-validator' ||\n      path[0] === 'version' ||\n      path[0] === '_isJSONSchemaObject'\n    )\n      return\n    if (String(path[0]).indexOf('x-') == -1 && isFn(target)) return\n    if (SchemaNestedMap[path[0]]) return\n    if (schema['x-compile-omitted']?.indexOf(path[0]) > -1) {\n      visitor(target, path, true)\n      return\n    }\n    if (isPlainObj(target)) {\n      if (path[0] === 'default' || path[0] === 'x-value') {\n        visitor(target, path)\n        return\n      }\n      const seenIndex = seenObjects.indexOf(target)\n      if (seenIndex > -1) {\n        return\n      }\n      const addIndex = seenObjects.length\n      seenObjects.push(target)\n      if (isNoNeedCompileObject(target) && root !== target) {\n        visitor(target, path)\n        return\n      }\n      each(target, (value, key) => {\n        traverse(value, path.concat(key))\n      })\n      seenObjects.splice(addIndex, 1)\n    } else {\n      visitor(target, path)\n    }\n  }\n  traverse(schema)\n}\n\nexport const isNoNeedCompileObject = (source: any) => {\n  if ('$$typeof' in source && '_owner' in source) {\n    return true\n  }\n  if (source['_isAMomentObject']) {\n    return true\n  }\n  if (Schema.isSchemaInstance(source)) {\n    return true\n  }\n  if (source[REVA_ACTIONS_KEY]) {\n    return true\n  }\n  if (isFn(source['toJS'])) {\n    return true\n  }\n  if (isFn(source['toJSON'])) {\n    return true\n  }\n  if (isObservable(source)) {\n    return true\n  }\n  return false\n}\n\nexport const createDataSource = (source: any[]) => {\n  return toArr(source).map((item) => {\n    if (typeof item === 'object') {\n      return item\n    } else {\n      return {\n        label: item,\n        value: item,\n      }\n    }\n  })\n}\n\nexport const patchStateFormSchema = (\n  targetState: any,\n  pattern: any[],\n  compiled: any\n) => {\n  untracked(() => {\n    const path = FormPath.parse(pattern)\n    const segments = path.segments\n    const key = segments[0]\n    const isEnum = key === 'enum' && isArr(compiled)\n    const schemaMapKey = SchemaStateMap[key]\n    if (schemaMapKey) {\n      FormPath.setIn(\n        targetState,\n        [schemaMapKey].concat(segments.slice(1)),\n        isEnum ? createDataSource(compiled) : compiled\n      )\n    } else {\n      const isValidatorKey = SchemaValidatorMap[key]\n      if (isValidatorKey) {\n        targetState['setValidatorRule']?.(key, compiled)\n      }\n    }\n  })\n}\n"]}