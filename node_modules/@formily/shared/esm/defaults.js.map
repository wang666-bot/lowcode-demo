{"version":3,"file":"defaults.js","sourceRoot":"","sources":["../src/defaults.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAA;AAC9B,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AAC5C,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;AAEvD,IAAM,gBAAgB,GAAG,UAAC,KAAU;IAClC,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,MAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAA,EAAE;QACpC,OAAO,IAAI,CAAA;KACZ;IACD,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,gBAAgB,MAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,mBAAmB,CAAA,EAAE;QACzD,OAAO,IAAI,CAAA;KACZ;IACD,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAA,EAAE;QAChC,OAAO,IAAI,CAAA;KACZ;AACH,CAAC,CAAA;AAED,IAAM,kBAAkB,GAAG,UAAC,GAAQ;IAClC,IAAI,gBAAgB,CAAC,GAAG,CAAC,EAAE;QACzB,OAAO,KAAK,CAAA;KACb;IACD,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAA;AAChC,CAAC,CAAA;AAED;;;;GAIG;AACH,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,SAAc,EAAE,OAAY;IACnD,IACE,OAAO,CAAC,SAAS,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC;QACvC,CAAC,kBAAkB,CAAC,SAAS,CAAC;QAC9B,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAC5B;QACA,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAA;KAC/C;SAAM;QACL,IAAM,SAAO,GAAG,KAAK,CAAC,SAAS,CAAC;YAC9B,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;gBACvB,CAAC,CAAC,EAAE;gBACJ,CAAC,CAAC,SAAS,CAAA;QACb,IAAI,CAAC,OAAO,EAAE,UAAC,KAAK,EAAE,GAAG;YACvB,SAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;QAChD,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,EAAE,UAAC,KAAK,EAAE,GAAG;YACzB,IAAI,CAAC,OAAO,CAAC,SAAO,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC1B,SAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;aACrB;QACH,CAAC,CAAC,CAAA;QACF,OAAO,SAAO,CAAA;KACf;AACH,CAAC,CAAA","sourcesContent":["import { each } from './array'\nimport { isEmpty, isValid } from './isEmpty'\nimport { getType, isArr, isPlainObj } from './checkers'\n\nconst isUnNormalObject = (value: any) => {\n  if (value?._owner && value?.$$typeof) {\n    return true\n  }\n  if (value?._isAMomentObject || value?._isJSONSchemaObject) {\n    return true\n  }\n  if (value?.toJS || value?.toJSON) {\n    return true\n  }\n}\n\nconst isEnumerableObject = (val: any) => {\n  if (isUnNormalObject(val)) {\n    return false\n  }\n  return typeof val === 'object'\n}\n\n/**\n *\n * @param defaults\n * @param targets\n */\nexport const defaults = (defaults_: any, targets: any) => {\n  if (\n    getType(defaults_) !== getType(targets) ||\n    !isEnumerableObject(defaults_) ||\n    !isEnumerableObject(targets)\n  ) {\n    return !isEmpty(targets) ? targets : defaults_\n  } else {\n    const results = isArr(defaults_)\n      ? []\n      : isPlainObj(defaults_)\n      ? {}\n      : defaults_\n    each(targets, (value, key) => {\n      results[key] = defaults(defaults_[key], value)\n    })\n    each(defaults_, (value, key) => {\n      if (!isValid(results[key])) {\n        results[key] = value\n      }\n    })\n    return results\n  }\n}\n"]}