{"version":3,"file":"deprecate.js","sourceRoot":"","sources":["../src/deprecate.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,YAAY,CAAA;AAExC,IAAM,MAAM,GAAG,EAAE,CAAA;AAEjB,MAAM,UAAU,SAAS,CACvB,MAAW,EACX,OAAgB,EAChB,IAAa;IAEb,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;QAChB,6DAA6D;QAC7D,OAAO,UAAU,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO;YAC1D,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;YACxB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;QACtC,CAAC,CAAA;KACF;IACD,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACpC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA;QACrB,OAAO,CAAC,IAAI,CACV,IAAI,KAAK,CACP,UAAG,MAAM,mEACP,OAAO,IAAI,EAAE,CACb,CACH,CACF,CAAA;KACF;AACH,CAAC","sourcesContent":["import { isFn, isStr } from './checkers'\n\nconst caches = {}\n\nexport function deprecate<P1 = any, P2 = any, P3 = any, P4 = any, P5 = any>(\n  method: any,\n  message?: string,\n  help?: string\n) {\n  if (isFn(method)) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return function (p1?: P1, p2?: P2, p3?: P3, p4?: P4, p5?: P5) {\n      deprecate(message, help)\n      return method.apply(this, arguments)\n    }\n  }\n  if (isStr(method) && !caches[method]) {\n    caches[method] = true\n    console.warn(\n      new Error(\n        `${method} has been deprecated. Do not continue to use this api.${\n          message || ''\n        }`\n      )\n    )\n  }\n}\n"]}