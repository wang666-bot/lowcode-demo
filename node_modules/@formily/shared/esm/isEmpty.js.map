{"version":3,"file":"isEmpty.js","sourceRoot":"","sources":["../src/isEmpty.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AACrC,IAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAA;AAE3C,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAA;AAE1C,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,GAAQ,IAAK,OAAA,GAAG,KAAK,SAAS,EAAjB,CAAiB,CAAA;AAEtD,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,GAAQ,IAAK,OAAA,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,EAAjC,CAAiC,CAAA;AAEtE,MAAM,UAAU,OAAO,CAAC,GAAQ,EAAE,MAAc;IAAd,uBAAA,EAAA,cAAc;IAC9C,wBAAwB;IACxB,IAAI,GAAG,IAAI,IAAI,EAAE;QACf,OAAO,IAAI,CAAA;KACZ;IAED,cAAc;IACd,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;QAC5B,OAAO,KAAK,CAAA;KACb;IAED,aAAa;IACb,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAO,KAAK,CAAA;KACb;IAED,aAAa;IACb,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,CAAA;KACxB;IAED,eAAe;IACf,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;QAC7B,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,CAAA;KACxB;IAED,YAAY;IACZ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACtB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,OAAO,IAAI,CAAA;SACZ;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,MAAM,EAAE;gBACV,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;oBAC3C,OAAO,KAAK,CAAA;iBACb;aACF;iBAAM;gBACL,IACE,GAAG,CAAC,CAAC,CAAC,KAAK,SAAS;oBACpB,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI;oBACf,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE;oBACb,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EACZ;oBACA,OAAO,KAAK,CAAA;iBACb;aACF;SACF;QACD,OAAO,IAAI,CAAA;KACZ;IAED,YAAY;IACZ,IAAI,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE;QACxB,OAAO,GAAG,CAAC,OAAO,KAAK,EAAE,CAAA;KAC1B;IAED,aAAa;IACb,IAAI,GAAG,CAAC,QAAQ,KAAK,QAAQ,EAAE;QAC7B,QAAQ,GAAG,CAAC,QAAQ,EAAE,EAAE;YACtB,kCAAkC;YAClC,KAAK,eAAe,CAAC;YACrB,KAAK,cAAc,CAAC;YACpB,KAAK,cAAc,CAAC,CAAC;gBACnB,OAAO,GAAG,CAAC,IAAI,KAAK,CAAC,CAAA;aACtB;YAED,mBAAmB;YACnB,KAAK,iBAAiB,CAAC,CAAC;gBACtB,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;oBACrB,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;wBACtB,OAAO,KAAK,CAAA;qBACb;iBACF;gBAED,OAAO,IAAI,CAAA;aACZ;SACF;KACF;IAED,mBAAmB;IACnB,OAAO,KAAK,CAAA;AACd,CAAC","sourcesContent":["import { instOf } from './instanceof'\nconst has = Object.prototype.hasOwnProperty\n\nconst toString = Object.prototype.toString\n\nexport const isUndef = (val: any) => val === undefined\n\nexport const isValid = (val: any) => val !== undefined && val !== null\n\nexport function isEmpty(val: any, strict = false): boolean {\n  // Null and Undefined...\n  if (val == null) {\n    return true\n  }\n\n  // Booleans...\n  if (typeof val === 'boolean') {\n    return false\n  }\n\n  // Numbers...\n  if (typeof val === 'number') {\n    return false\n  }\n\n  // Strings...\n  if (typeof val === 'string') {\n    return val.length === 0\n  }\n\n  // Functions...\n  if (typeof val === 'function') {\n    return val.length === 0\n  }\n\n  // Arrays...\n  if (Array.isArray(val)) {\n    if (val.length === 0) {\n      return true\n    }\n    for (let i = 0; i < val.length; i++) {\n      if (strict) {\n        if (val[i] !== undefined && val[i] !== null) {\n          return false\n        }\n      } else {\n        if (\n          val[i] !== undefined &&\n          val[i] !== null &&\n          val[i] !== '' &&\n          val[i] !== 0\n        ) {\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  // Errors...\n  if (instOf(val, 'Error')) {\n    return val.message === ''\n  }\n\n  // Objects...\n  if (val.toString === toString) {\n    switch (val.toString()) {\n      // Maps, Sets, Files and Errors...\n      case '[object File]':\n      case '[object Map]':\n      case '[object Set]': {\n        return val.size === 0\n      }\n\n      // Plain objects...\n      case '[object Object]': {\n        for (const key in val) {\n          if (has.call(val, key)) {\n            return false\n          }\n        }\n\n        return true\n      }\n    }\n  }\n\n  // Anything else...\n  return false\n}\n"]}