{"version":3,"file":"merge.js","sourceRoot":"","sources":["../src/merge.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFn, isPlainObj } from './checkers'\nimport { isEmpty, isValid } from './isEmpty'\n\nfunction defaultIsMergeableObject(value: any) {\n  return isNonNullObject(value) && !isSpecial(value)\n}\n\nfunction isNonNullObject(value: any) {\n  // TODO: value !== null && typeof value === 'object'\n  return Boolean(value) && typeof value === 'object'\n}\n\nfunction isSpecial(value: any) {\n  // TODO: use isComplexObject()\n  if ('$$typeof' in value && '_owner' in value) {\n    return true\n  }\n  if (value._isAMomentObject) {\n    return true\n  }\n  if (value._isJSONSchemaObject) {\n    return true\n  }\n  if (isFn(value.toJS)) {\n    return true\n  }\n  if (isFn(value.toJSON)) {\n    return true\n  }\n  return !isPlainObj(value)\n}\n\nfunction emptyTarget(val: any) {\n  return Array.isArray(val) ? [] : {}\n}\n// @ts-ignore\nfunction cloneUnlessOtherwiseSpecified(value: any, options: Options) {\n  if (options.clone !== false && options.isMergeableObject?.(value)) {\n    return deepmerge(emptyTarget(value), value, options)\n  }\n  return value\n}\n\nfunction defaultArrayMerge(target: any, source: any, options: Options) {\n  return target.concat(source).map(function (element: any) {\n    return cloneUnlessOtherwiseSpecified(element, options)\n  })\n}\n\nfunction getMergeFunction(key: string, options: Options) {\n  if (!options.customMerge) {\n    return deepmerge\n  }\n  const customMerge = options.customMerge(key)\n  return typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target: any): any {\n  return Object.getOwnPropertySymbols\n    ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n        return target.propertyIsEnumerable(symbol)\n      })\n    : []\n}\n\nfunction getKeys(target: any) {\n  if (!isValid(target)) return []\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object: any, property: any) {\n  /* istanbul ignore next */\n  try {\n    return property in object\n  } catch (_) {\n    return false\n  }\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target: any, key: PropertyKey) {\n  return (\n    propertyIsOnObject(target, key) && // Properties are safe to merge if they don't exist in the target yet,\n    !(\n      Object.hasOwnProperty.call(target, key) && // unsafe if they exist up the prototype chain,\n      Object.propertyIsEnumerable.call(target, key)\n    )\n  ) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target: any, source: any, options: Options) {\n  const destination = options.assign ? target || {} : {}\n  if (!options.isMergeableObject(target)) return target\n  if (!options.assign) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options)\n    })\n  }\n  getKeys(source).forEach(function (key) {\n    /* istanbul ignore next */\n    if (propertyIsUnsafe(target, key)) {\n      return\n    }\n    if (isEmpty(target[key])) {\n      destination[key] = source[key]\n    } else if (\n      propertyIsOnObject(target, key) &&\n      // @ts-ignore\n      options.isMergeableObject(source[key])\n    ) {\n      destination[key] = getMergeFunction(key, options)(\n        target[key],\n        source[key],\n        options\n      )\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options)\n    }\n  })\n  return destination\n}\n\ninterface Options {\n  arrayMerge?(target: any[], source: any[], options?: Options): any[]\n  clone?: boolean\n  assign?: boolean\n  customMerge?: (\n    key: string,\n    options?: Options\n  ) => ((x: any, y: any) => any) | undefined\n  isMergeableObject?(value: object): boolean\n  cloneUnlessOtherwiseSpecified?: (value: any, options: Options) => any\n}\n\n// @ts-ignore\nfunction deepmerge(target: any, source: any, options?: Options) {\n  options = options || {}\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge\n  options.isMergeableObject =\n    options.isMergeableObject || defaultIsMergeableObject\n  // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified\n\n  const sourceIsArray = Array.isArray(source)\n  const targetIsArray = Array.isArray(target)\n  const sourceAndTargetTypesMatch = sourceIsArray === targetIsArray\n\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options)\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options)\n  } else {\n    return mergeObject(target, source, options)\n  }\n}\n\nexport const lazyMerge = <T extends object | Function>(\n  target: T,\n  ...args: T[]\n): any => {\n  const _lazyMerge = <T extends object | Function>(\n    target: T,\n    source: T\n  ): {} => {\n    if (!isValid(source)) return target\n    if (!isValid(target)) return source\n    const isTargetObject = typeof target === 'object'\n    const isSourceObject = typeof source === 'object'\n    const isTargetFn = typeof target === 'function'\n    const isSourceFn = typeof source === 'function'\n    if (!isTargetObject && !isTargetFn) return source\n    if (!isSourceObject && !isSourceFn) return target\n    const getTarget = () => (isTargetFn ? target() : target)\n    const getSource = () => (isSourceFn ? source() : source)\n    const set = (_: object, key: PropertyKey, value: any) => {\n      const source = getSource()\n      const target = getTarget()\n      if (key in source) {\n        // @ts-ignore\n        source[key] = value\n      } else if (key in target) {\n        // @ts-ignore\n        target[key] = value\n      } else {\n        source[key] = value\n      }\n      return true\n    }\n    const get = (_: object, key: PropertyKey) => {\n      const source = getSource()\n      // @ts-ignore\n      if (key in source) {\n        return source[key]\n      }\n      // @ts-ignore\n      return getTarget()[key]\n    }\n    const ownKeys = () => {\n      const source = getSource()\n      const target = getTarget()\n      const keys = Object.keys(target)\n      for (const key in source) {\n        if (!(key in target)) {\n          keys.push(key)\n        }\n      }\n      return keys\n    }\n    const getOwnPropertyDescriptor = (_: object, key: PropertyKey) => ({\n      value: get(_, key),\n      enumerable: true,\n      configurable: true,\n    })\n    const has = (_: object, key: PropertyKey) => {\n      if (key in getSource() || key in getTarget()) return true\n      return false\n    }\n    const getPrototypeOf = () => Object.getPrototypeOf({})\n    return new Proxy(Object.create(null), {\n      set,\n      get,\n      ownKeys,\n      getPrototypeOf,\n      getOwnPropertyDescriptor,\n      has,\n    }) as any\n  }\n  return args.reduce<{}>((buf, arg) => _lazyMerge(buf, arg), target)\n}\n\nexport const merge = deepmerge\n"]}