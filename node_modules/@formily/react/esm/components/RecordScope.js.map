{"version":3,"file":"RecordScope.js","sourceRoot":"","sources":["../../src/components/RecordScope.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AAEnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAA;AAE7C,MAAM,CAAC,IAAM,WAAW,GAA+B,UAAC,KAAK;IAC3D,IAAM,KAAK,GAAG,kBAAkB,EAAE,CAAA;IAClC,OAAO,CACL,oBAAC,eAAe,IACd,KAAK,EAAE;YACL,IAAI,OAAO;gBACT,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAA;YACvB,CAAC;YACD,IAAI,OAAO;;gBACT,IAAM,MAAM,GAAG,MAAA,KAAK,CAAC,SAAS,qDAAI,CAAA;gBAClC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;oBAC9B,OAAO,SAAS,CAAC,MAAM,EAAE;wBACvB,IAAI,OAAO;4BACT,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAA;wBACvB,CAAC;wBACD,IAAI,MAAM;;4BACR,OAAO,MAAA,KAAK,CAAC,QAAQ,qDAAI,CAAA;wBAC3B,CAAC;qBACF,CAAC,CAAA;iBACH;gBACD,OAAO,MAAM,CAAA;YACf,CAAC;YACD,IAAI,MAAM;;gBACR,OAAO,MAAA,KAAK,CAAC,QAAQ,qDAAI,CAAA;YAC3B,CAAC;SACF,IAEA,KAAK,CAAC,QAAQ,CACC,CACnB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import React from 'react'\nimport { lazyMerge } from '@formily/shared'\nimport { ExpressionScope } from './ExpressionScope'\nimport { ReactFC, IRecordScopeProps } from '../types'\nimport { useExpressionScope } from '../hooks'\n\nexport const RecordScope: ReactFC<IRecordScopeProps> = (props) => {\n  const scope = useExpressionScope()\n  return (\n    <ExpressionScope\n      value={{\n        get $lookup() {\n          return scope?.$record\n        },\n        get $record() {\n          const record = props.getRecord?.()\n          if (typeof record === 'object') {\n            return lazyMerge(record, {\n              get $lookup() {\n                return scope?.$record\n              },\n              get $index() {\n                return props.getIndex?.()\n              },\n            })\n          }\n          return record\n        },\n        get $index() {\n          return props.getIndex?.()\n        },\n      }}\n    >\n      {props.children}\n    </ExpressionScope>\n  )\n}\n"]}