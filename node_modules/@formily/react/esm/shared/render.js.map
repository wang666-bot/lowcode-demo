{"version":3,"file":"render.js","sourceRoot":"","sources":["../../src/shared/render.ts"],"names":[],"mappings":";AAAA,OAAO,KAAiC,MAAM,OAAO,CAAA;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAA;AAOpD,IAAM,GAAG,GAAQ;IACf,SAAS,EAAE,MAAA,MAAA,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,QAAQ,0CAAE,aAAa,mDAAG,KAAK,CAAC;IAC/D,YAAY,EAAE,MAAA,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAG,UAAU,CAAC,0CAAE,YAAY;CAC7D,CAAA;AAED,0BAA0B;AAC1B,IAAM,gBAAgB,GAAG;;IACvB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;QACrB,IAAI;YACF,8DAA8D;YAC9D,MAAA,GAAG,CAAC,YAAY,oCAAhB,GAAG,CAAC,YAAY,GAAK,MAAA,OAAO,CAAC,WAAW,CAAC,0CAAE,YAAY,EAAA;SACxD;QAAC,WAAM,GAAE;KACX;IACD,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;QACrB,IAAI;YACF,aAAa;YACb,MAAM,CAAC,WAAW,CAAC;iBAChB,IAAI,CAAC,UAAC,MAAM,YAAK,OAAA,OAAC,GAAG,CAAC,YAAY,oCAAhB,GAAG,CAAC,YAAY,GAAK,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,EAAC,CAAA,EAAA,CAAC;iBAC7D,KAAK,EAAE,CAAA;SACX;QAAC,WAAM,GAAE;KACX;AACH,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,OAA2B;;IAChD,IAAI,CAAA,MAAA,kBAAkB,CAAC,SAAS,0CAAE,OAAO,MAAK,aAAa;QAAE,OAAO,IAAI,CAAA;IACxE,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,YAAY,EAAE;QACrC,OAAO,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,CAAA;KAChD;SAAM;QACL,OAAO,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;KACpD;AACH,CAAC,CAAA;AAED,gBAAgB,EAAE,CAAA","sourcesContent":["import React, { ReactNode, ReactPortal } from 'react'\nimport { globalThisPolyfill } from '@formily/shared'\n\ninterface Env {\n  portalDOM?: HTMLDivElement\n  createPortal?: (children: ReactNode, container: Element) => ReactPortal\n}\n\nconst env: Env = {\n  portalDOM: globalThisPolyfill?.document?.createElement?.('div'),\n  createPortal: globalThisPolyfill?.['ReactDOM']?.createPortal,\n}\n\n/* istanbul ignore next */\nconst loadCreatePortal = () => {\n  if (!env.createPortal) {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      env.createPortal ??= require('react-dom')?.createPortal\n    } catch {}\n  }\n  if (!env.createPortal) {\n    try {\n      // @ts-ignore\n      import('react-dom')\n        .then((module) => (env.createPortal ??= module?.createPortal))\n        .catch()\n    } catch {}\n  }\n}\n\nexport const render = (element: React.ReactElement) => {\n  if (globalThisPolyfill.navigator?.product === 'ReactNative') return null\n  if (env.portalDOM && env.createPortal) {\n    return env.createPortal(element, env.portalDOM)\n  } else {\n    return React.createElement('template', {}, element)\n  }\n}\n\nloadCreatePortal()\n"]}