{"version":3,"file":"connect.js","sourceRoot":"","sources":["../../src/shared/connect.ts"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport { isFn, isStr, FormPath, each, isValid } from '@formily/shared'\nimport { isVoidField } from '@formily/core'\nimport { observer, Observer } from '@formily/reactive-react'\nimport { JSXComponent, IComponentMapper, IStateMapper } from '../types'\nimport { useField } from '../hooks'\nimport hoistNonReactStatics from 'hoist-non-react-statics'\n\nexport function mapProps<T extends JSXComponent>(\n  ...args: IStateMapper<React.ComponentProps<T>>[]\n) {\n  return (target: T) => {\n    return observer(\n      (props: any) => {\n        const field = useField()\n        const results = args.reduce(\n          (props, mapper) => {\n            if (isFn(mapper)) {\n              props = Object.assign(props, mapper(props, field))\n            } else {\n              each(mapper, (to, extract) => {\n                const extractValue = FormPath.getIn(field, extract)\n                const targetValue = isStr(to) ? to : (extract as any)\n                const originalValue = FormPath.getIn(props, targetValue)\n                if (extract === 'value') {\n                  if (to !== extract) {\n                    delete props.value\n                  }\n                }\n                if (isValid(originalValue) && !isValid(extractValue)) return\n                FormPath.setIn(props, targetValue, extractValue)\n              })\n            }\n            return props\n          },\n          { ...props }\n        )\n        return React.createElement(target, results)\n      },\n      {\n        forwardRef: true,\n      }\n    )\n  }\n}\n\nexport function mapReadPretty<T extends JSXComponent, C extends JSXComponent>(\n  component: C,\n  readPrettyProps?: React.ComponentProps<C>\n) {\n  return (target: T) => {\n    return observer(\n      (props) => {\n        const field = useField()\n        if (!isVoidField(field) && field?.pattern === 'readPretty') {\n          return React.createElement(component, {\n            ...readPrettyProps,\n            ...props,\n          })\n        }\n        return React.createElement(target, props)\n      },\n      {\n        forwardRef: true,\n      }\n    )\n  }\n}\n\nexport function connect<T extends JSXComponent>(\n  target: T,\n  ...args: IComponentMapper<T>[]\n) {\n  const Target = args.reduce((target, mapper) => {\n    return mapper(target)\n  }, target)\n\n  const Destination = React.forwardRef(\n    (props: Partial<React.ComponentProps<T>>, ref) => {\n      return React.createElement(Target, { ...props, ref })\n    }\n  )\n\n  if (target) hoistNonReactStatics(Destination, target as any)\n\n  return Destination\n}\n\nexport { observer, Observer }\n"]}