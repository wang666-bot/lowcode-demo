{"version":3,"file":"autorun.js","sourceRoot":"","sources":["../src/autorun.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  batchEnd,\n  batchStart,\n  disposeBindingReactions,\n  releaseBindingReactions,\n  disposeEffects,\n  hasDepsChange,\n} from './reaction'\nimport { isFn } from './checkers'\nimport { ReactionStack } from './environment'\nimport { Reaction, IReactionOptions, Dispose } from './types'\nimport { toArray } from './array'\n\ninterface IValue {\n  currentValue?: any\n  oldValue?: any\n}\n\nexport const autorun = (tracker: Reaction, name = 'AutoRun') => {\n  const reaction: Reaction = () => {\n    if (!isFn(tracker)) return\n    if (reaction._boundary > 0) return\n    if (ReactionStack.indexOf(reaction) === -1) {\n      releaseBindingReactions(reaction)\n      try {\n        batchStart()\n        ReactionStack.push(reaction)\n        tracker()\n      } finally {\n        ReactionStack.pop()\n        reaction._boundary++\n        batchEnd()\n        reaction._boundary = 0\n        reaction._memos.cursor = 0\n        reaction._effects.cursor = 0\n      }\n    }\n  }\n  const cleanRefs = () => {\n    reaction._memos = {\n      queue: [],\n      cursor: 0,\n    }\n    reaction._effects = {\n      queue: [],\n      cursor: 0,\n    }\n  }\n  reaction._boundary = 0\n  reaction._name = name\n  cleanRefs()\n  reaction()\n  return () => {\n    disposeBindingReactions(reaction)\n    disposeEffects(reaction)\n    cleanRefs()\n  }\n}\n\nautorun.memo = <T>(callback: () => T, dependencies?: any[]): T => {\n  if (!isFn(callback)) return\n  const current = ReactionStack[ReactionStack.length - 1]\n  if (!current || !current._memos)\n    throw new Error('autorun.memo must used in autorun function body.')\n  const deps = toArray(dependencies || [])\n  const id = current._memos.cursor++\n  const old = current._memos.queue[id]\n  if (!old || hasDepsChange(deps, old.deps)) {\n    const value = callback()\n    current._memos.queue[id] = {\n      value,\n      deps,\n    }\n    return value\n  }\n  return old.value\n}\n\nautorun.effect = (callback: () => void | Dispose, dependencies?: any[]) => {\n  if (!isFn(callback)) return\n  const current = ReactionStack[ReactionStack.length - 1]\n  if (!current || !current._effects)\n    throw new Error('autorun.effect must used in autorun function body.')\n  const effects = current._effects\n  const deps = toArray(dependencies || [{}])\n  const id = effects.cursor++\n  const old = effects.queue[id]\n  if (!old || hasDepsChange(deps, old.deps)) {\n    Promise.resolve(0).then(() => {\n      if (current._disposed) return\n      const dispose = callback()\n      if (isFn(dispose)) {\n        effects.queue[id].dispose = dispose\n      }\n    })\n    effects.queue[id] = {\n      deps,\n    }\n  }\n}\n\nexport const reaction = <T>(\n  tracker: () => T,\n  subscriber?: (value: T, oldValue: T) => void,\n  options?: IReactionOptions<T>\n) => {\n  const realOptions = {\n    name: 'Reaction',\n    ...options,\n  }\n  const value: IValue = {}\n  const dirtyCheck = () => {\n    if (isFn(realOptions.equals))\n      return !realOptions.equals(value.oldValue, value.currentValue)\n    return value.oldValue !== value.currentValue\n  }\n\n  const fireAction = () => {\n    try {\n      //如果untrack的话，会导致用户如果在scheduler里同步调用setState影响下次React渲染的依赖收集\n      batchStart()\n      if (isFn(subscriber)) subscriber(value.currentValue, value.oldValue)\n    } finally {\n      batchEnd()\n    }\n  }\n\n  const reaction: Reaction = () => {\n    if (ReactionStack.indexOf(reaction) === -1) {\n      releaseBindingReactions(reaction)\n      try {\n        ReactionStack.push(reaction)\n        value.currentValue = tracker()\n      } finally {\n        ReactionStack.pop()\n      }\n    }\n  }\n  reaction._scheduler = (looping) => {\n    looping()\n    if (dirtyCheck()) fireAction()\n    value.oldValue = value.currentValue\n  }\n  reaction._name = realOptions.name\n  reaction()\n  value.oldValue = value.currentValue\n  if (realOptions.fireImmediately) {\n    fireAction()\n  }\n  return () => {\n    disposeBindingReactions(reaction)\n  }\n}\n"]}