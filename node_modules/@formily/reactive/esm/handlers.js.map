{"version":3,"file":"handlers.js","sourceRoot":"","sources":["../src/handlers.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from './reaction'\nimport { ProxyRaw, RawProxy } from './environment'\nimport { isObservable, isSupportObservable } from './externals'\nimport { createObservable } from './internals'\n\nconst wellKnownSymbols = new Set(\n  Object.getOwnPropertyNames(Symbol).reduce((buf: Symbol[], key) => {\n    if (key === 'arguments' || key === 'caller') return buf\n    const value = Symbol[key]\n    if (typeof value === 'symbol') return buf.concat(value)\n    return buf\n  }, [])\n)\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction findObservable(target: any, key: PropertyKey, value: any) {\n  const observableObj = RawProxy.get(value)\n  if (observableObj) {\n    return observableObj\n  }\n  if (!isObservable(value) && isSupportObservable(value)) {\n    return createObservable(target, key, value)\n  }\n  return value\n}\n\nfunction patchIterator(\n  target: any,\n  key: PropertyKey,\n  iterator: IterableIterator<any>,\n  isEntries: boolean\n) {\n  const originalNext = iterator.next\n  iterator.next = () => {\n    let { done, value } = originalNext.call(iterator)\n    if (!done) {\n      if (isEntries) {\n        value[1] = findObservable(target, key, value[1])\n      } else {\n        value = findObservable(target, key, value)\n      }\n    }\n    return { done, value }\n  }\n  return iterator\n}\n\nconst instrumentations = {\n  has(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'has' })\n    return proto.has.apply(target, arguments)\n  },\n  get(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'get' })\n    return findObservable(target, key, proto.get.apply(target, arguments))\n  },\n  add(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    // forward the operation before queueing reactions\n    const result = proto.add.apply(target, arguments)\n    if (!hadKey) {\n      runReactionsFromTargetKey({ target, key, value: key, type: 'add' })\n    }\n    return result\n  },\n  set(key: PropertyKey, value: any) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    const oldValue = proto.get.call(target, key)\n    // forward the operation before queueing reactions\n    const result = proto.set.apply(target, arguments)\n    if (!hadKey) {\n      runReactionsFromTargetKey({ target, key, value, type: 'add' })\n    } else if (value !== oldValue) {\n      runReactionsFromTargetKey({ target, key, value, oldValue, type: 'set' })\n    }\n    return result\n  },\n  delete(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    const oldValue = proto.get ? proto.get.call(target, key) : undefined\n    // forward the operation before queueing reactions\n    const result = proto.delete.apply(target, arguments)\n    if (hadKey) {\n      runReactionsFromTargetKey({ target, key, oldValue, type: 'delete' })\n    }\n    return result\n  },\n  clear() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadItems = target.size !== 0\n    const oldTarget = target instanceof Map ? new Map(target) : new Set(target)\n    // forward the operation before queueing reactions\n    const result = proto.clear.apply(target, arguments)\n    if (hadItems) {\n      runReactionsFromTargetKey({ target, oldTarget, type: 'clear' })\n    }\n    return result\n  },\n  forEach(cb: any, ...args: any[]) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    // swap out the raw values with their observable pairs\n    // before passing them to the callback\n    const wrappedCb = (value: any, key: PropertyKey, ...args: any) =>\n      cb(findObservable(target, key, value), key, ...args)\n    return proto.forEach.call(target, wrappedCb, ...args)\n  },\n  keys() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return proto.keys.apply(target, arguments)\n  },\n  values() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto.values.apply(target, arguments)\n    return patchIterator(target, '', iterator, false)\n  },\n  entries() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto.entries.apply(target, arguments)\n    return patchIterator(target, '', iterator, true)\n  },\n  [Symbol.iterator]() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto[Symbol.iterator].apply(target, arguments)\n    return patchIterator(target, '', iterator, target instanceof Map)\n  },\n  get size() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return Reflect.get(proto, 'size', target)\n  },\n}\n\nexport const collectionHandlers = {\n  get(target: any, key: PropertyKey, receiver: any) {\n    // instrument methods and property accessors to be reactive\n    target = hasOwnProperty.call(instrumentations, key)\n      ? instrumentations\n      : target\n    return Reflect.get(target, key, receiver)\n  },\n}\n\nexport const baseHandlers: ProxyHandler<any> = {\n  get(target, key, receiver) {\n    if (!key) return\n    const result = target[key] // use Reflect.get is too slow\n    if (typeof key === 'symbol' && wellKnownSymbols.has(key)) {\n      return result\n    }\n    bindTargetKeyWithCurrentReaction({ target, key, receiver, type: 'get' })\n    const observableResult = RawProxy.get(result)\n    if (observableResult) {\n      return observableResult\n    }\n    if (!isObservable(result) && isSupportObservable(result)) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (\n        !descriptor ||\n        !(descriptor.writable === false && descriptor.configurable === false)\n      ) {\n        return createObservable(target, key, result)\n      }\n    }\n    return result\n  },\n  has(target, key) {\n    const result = Reflect.has(target, key)\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'has' })\n    return result\n  },\n  ownKeys(target) {\n    const keys = Reflect.ownKeys(target)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return keys\n  },\n  set(target, key, value, receiver) {\n    // vue2中有对数组原型重写，因此需去除此处proxy\n    if (key === '__proto__') {\n      target[key] = value\n      return true\n    }\n    const hadKey = hasOwnProperty.call(target, key)\n    const newValue = createObservable(target, key, value)\n    const oldValue = target[key]\n    target[key] = newValue // use Reflect.set is too slow\n    if (!hadKey) {\n      runReactionsFromTargetKey({\n        target,\n        key,\n        value: newValue,\n        oldValue,\n        receiver,\n        type: 'add',\n      })\n    } else if (value !== oldValue) {\n      runReactionsFromTargetKey({\n        target,\n        key,\n        value: newValue,\n        oldValue,\n        receiver,\n        type: 'set',\n      })\n    }\n    return true\n  },\n  deleteProperty(target, key) {\n    const oldValue = target[key]\n    delete target[key]\n    runReactionsFromTargetKey({\n      target,\n      key,\n      oldValue,\n      type: 'delete',\n    })\n    return true\n  },\n}\n"]}