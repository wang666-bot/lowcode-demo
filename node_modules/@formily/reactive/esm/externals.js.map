{"version":3,"file":"externals.js","sourceRoot":"","sources":["../src/externals.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  isValid,\n  isFn,\n  isMap,\n  isWeakMap,\n  isSet,\n  isWeakSet,\n  isPlainObj,\n  isArr,\n} from './checkers'\nimport {\n  ProxyRaw,\n  MakeObModelSymbol,\n  DependencyCollected,\n  ObModelSymbol,\n} from './environment'\nimport { getDataNode } from './tree'\nimport { Annotation } from './types'\n\nconst RAW_TYPE = Symbol('RAW_TYPE')\nconst OBSERVABLE_TYPE = Symbol('OBSERVABLE_TYPE')\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport const isObservable = (target: any) => {\n  return ProxyRaw.has(target) || !!target?.[ObModelSymbol]\n}\n\nexport const isAnnotation = (target: any): target is Annotation => {\n  return target && !!target[MakeObModelSymbol]\n}\n\nexport const isSupportObservable = (target: any) => {\n  if (!isValid(target)) return false\n  if (isArr(target)) return true\n  if (isPlainObj(target)) {\n    if (target[RAW_TYPE]) {\n      return false\n    }\n    if (target[OBSERVABLE_TYPE]) {\n      return true\n    }\n    if ('$$typeof' in target && '_owner' in target) {\n      return false\n    }\n    if (target['_isAMomentObject']) {\n      return false\n    }\n    if (target['_isJSONSchemaObject']) {\n      return false\n    }\n    if (isFn(target['toJS'])) {\n      return false\n    }\n    if (isFn(target['toJSON'])) {\n      return false\n    }\n    return true\n  }\n  if (isMap(target) || isWeakMap(target) || isSet(target) || isWeakSet(target))\n    return true\n  return false\n}\n\nexport const markRaw = <T>(target: T): T => {\n  if (!target) return\n  if (isFn(target)) {\n    target.prototype[RAW_TYPE] = true\n  } else {\n    target[RAW_TYPE] = true\n  }\n  return target\n}\n\nexport const markObservable = <T>(target: T): T => {\n  if (!target) return\n  if (isFn(target)) {\n    target.prototype[OBSERVABLE_TYPE] = true\n  } else {\n    target[OBSERVABLE_TYPE] = true\n  }\n  return target\n}\n\nexport const raw = <T>(target: T): T => {\n  if (target?.[ObModelSymbol]) return target[ObModelSymbol]\n  return ProxyRaw.get(target as any) || target\n}\n\nexport const toJS = <T>(values: T): T => {\n  const visited = new WeakSet<any>()\n  const _toJS: typeof toJS = (values: any) => {\n    if (visited.has(values)) {\n      return values\n    }\n    if (values && values[RAW_TYPE]) return values\n    if (isArr(values)) {\n      if (isObservable(values)) {\n        visited.add(values)\n        const res: any = []\n        values.forEach((item: any) => {\n          res.push(_toJS(item))\n        })\n        visited.delete(values)\n        return res\n      }\n    } else if (isPlainObj(values)) {\n      if (isObservable(values)) {\n        visited.add(values)\n        const res: any = {}\n        for (const key in values) {\n          if (hasOwnProperty.call(values, key)) {\n            res[key] = _toJS(values[key])\n          }\n        }\n        visited.delete(values)\n        return res\n      }\n    }\n    return values\n  }\n\n  return _toJS(values)\n}\n\nexport const contains = (target: any, property: any) => {\n  const targetRaw = raw(target)\n  const propertyRaw = raw(property)\n  if (targetRaw === propertyRaw) return true\n  const targetNode = getDataNode(targetRaw)\n  const propertyNode = getDataNode(propertyRaw)\n  if (!targetNode) return false\n  if (!propertyNode) return false\n  return targetNode.contains(propertyNode)\n}\n\nexport const hasCollected = (callback?: () => void) => {\n  DependencyCollected.value = false\n  callback?.()\n  return DependencyCollected.value\n}\n"]}