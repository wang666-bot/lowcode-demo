{"version":3,"file":"checkers.js","sourceRoot":"","sources":["../src/checkers.ts"],"names":[],"mappings":"AAAA,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAA;AAC1C,MAAM,CAAC,IAAM,KAAK,GAAG,UAAC,GAAQ;IAC5B,OAAA,GAAG,IAAI,GAAG,YAAY,GAAG;AAAzB,CAAyB,CAAA;AAC3B,MAAM,CAAC,IAAM,KAAK,GAAG,UAAC,GAAQ,IAAsB,OAAA,GAAG,IAAI,GAAG,YAAY,GAAG,EAAzB,CAAyB,CAAA;AAC7E,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,GAAQ;IAChC,OAAA,GAAG,IAAI,GAAG,YAAY,OAAO;AAA7B,CAA6B,CAAA;AAC/B,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,GAAQ;IAChC,OAAA,GAAG,IAAI,GAAG,YAAY,OAAO;AAA7B,CAA6B,CAAA;AAC/B,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,GAAQ,IAAsB,OAAA,OAAO,GAAG,KAAK,UAAU,EAAzB,CAAyB,CAAA;AAC5E,MAAM,CAAC,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAA;AAClC,MAAM,CAAC,IAAM,UAAU,GAAG,UAAC,GAAQ;IACjC,OAAA,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,iBAAiB;AAAxC,CAAwC,CAAA;AAC1C,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,GAAQ,IAAK,OAAA,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAjC,CAAiC,CAAA;AACtE,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,MAAW;IAC1C,OAAO,CACL,KAAK,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CACzE,CAAA;AACH,CAAC,CAAA;AACD,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,MAAW;IACtC,OAAO,UAAU,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAA;AAC5C,CAAC,CAAA","sourcesContent":["const toString = Object.prototype.toString\nexport const isMap = (val: any): val is Map<any, any> =>\n  val && val instanceof Map\nexport const isSet = (val: any): val is Set<any> => val && val instanceof Set\nexport const isWeakMap = (val: any): val is WeakMap<any, any> =>\n  val && val instanceof WeakMap\nexport const isWeakSet = (val: any): val is WeakSet<any> =>\n  val && val instanceof WeakSet\nexport const isFn = (val: any): val is Function => typeof val === 'function'\nexport const isArr = Array.isArray\nexport const isPlainObj = (val: any): val is object =>\n  toString.call(val) === '[object Object]'\nexport const isValid = (val: any) => val !== null && val !== undefined\nexport const isCollectionType = (target: any) => {\n  return (\n    isMap(target) || isWeakMap(target) || isSet(target) || isWeakSet(target)\n  )\n}\nexport const isNormalType = (target: any) => {\n  return isPlainObj(target) || isArr(target)\n}\n"]}