{"version":3,"file":"batch.js","sourceRoot":"","sources":["../src/batch.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACV,QAAQ,EACR,eAAe,EACf,aAAa,GACd,MAAM,YAAY,CAAA;AACnB,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AAC1D,OAAO,EAAE,wBAAwB,EAAE,MAAM,aAAa,CAAA;AAEtD,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAA;AAEjC,MAAM,CAAC,IAAM,KAAK,GAAW,wBAAwB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;AAC3E,KAAK,CAAC,KAAK,GAAG,wBAAwB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAA;AACtE,KAAK,CAAC,QAAQ,GAAG,UAAC,QAAqB;IACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAAE,OAAM;IAC3B,IAAI,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;QAC1B,QAAQ,EAAE,CAAA;KACX;SAAM;QACL,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;KAC7B;AACH,CAAC,CAAA","sourcesContent":["import {\n  batchStart,\n  batchEnd,\n  batchScopeStart,\n  batchScopeEnd,\n} from './reaction'\nimport { BatchEndpoints, BatchCount } from './environment'\nimport { createBoundaryAnnotation } from './internals'\nimport { IBatch } from './types'\nimport { isFn } from './checkers'\n\nexport const batch: IBatch = createBoundaryAnnotation(batchStart, batchEnd)\nbatch.scope = createBoundaryAnnotation(batchScopeStart, batchScopeEnd)\nbatch.endpoint = (callback?: () => void) => {\n  if (!isFn(callback)) return\n  if (BatchCount.value === 0) {\n    callback()\n  } else {\n    BatchEndpoints.add(callback)\n  }\n}\n"]}