{"version":3,"file":"internals.js","sourceRoot":"","sources":["../src/internals.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,MAAM,YAAY,CAAA;AACjE,OAAO,EACL,QAAQ,EACR,QAAQ,EACR,iBAAiB,EACjB,eAAe,GAChB,MAAM,eAAe,CAAA;AACtB,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAA;AAC7D,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAA;AACnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAA;AAGjD,IAAM,iBAAiB,GAAG,UAAC,MAAW,EAAE,OAAiB;IACvD,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,CAAA;IAC7C,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;IAC3B,IAAI,OAAO,EAAE;QACX,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;KACnC;SAAM;QACL,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;KAC5B;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAED,IAAM,qBAAqB,GAAG,UAAC,MAAW,EAAE,OAAiB;IAC3D,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAA;IACnD,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;IAC3B,IAAI,OAAO,EAAE;QACX,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;KACnC;SAAM;QACL,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;KAC5B;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAED,IAAM,kBAAkB,GAAG,UAAC,MAAW;IACrC,IAAI,YAAY,CAAC,MAAM,CAAC;QAAE,OAAO,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAChE,IAAI,gBAAgB,CAAC,MAAM,CAAC;QAAE,OAAO,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IACxE,cAAc;IACd,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAC9B,MAAW,EACX,GAAiB,EACjB,KAAW,EACX,OAAiB;IAEjB,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAA;IAC3C,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IAC/B,IAAI,CAAC,CAAC,GAAG,EAAE;QACT,IAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAA;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACtC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,OAAO,KAAK,CAAA;KACb;IAED,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAAE,OAAO,KAAK,CAAA;IAE7C,IAAI,MAAM,EAAE;QACV,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,MAAM,CAAA;QAChD,IAAM,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACtD,IAAI,eAAe;YAAE,OAAO,KAAK,CAAA;KAClC;IAED,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;IACjC,IAAI,OAAO;QAAE,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAA;IAC7C,IAAI,YAAY,CAAC,KAAK,CAAC;QAAE,OAAO,iBAAiB,CAAC,KAAK,CAAC,CAAA;IACxD,IAAI,gBAAgB,CAAC,KAAK,CAAC;QAAE,OAAO,qBAAqB,CAAC,KAAK,CAAC,CAAA;IAChE,cAAc;IACd,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAC9B,KAAQ;IAER,IAAM,UAAU,GAAG,UAAC,MAAW;QAC7B,OAAO,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;IACjC,CAAC,CAAA;IACD,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;QACf,UAAU,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAA;KACtC;IACD,OAAO,UAAU,CAAA;AACnB,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,kBAAkB,GAAG,UAAC,MAAW;IAC5C,IAAI,MAAM,CAAC,iBAAiB,CAAC,EAAE;QAC7B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,iBAAiB,CAAC,EAAE;YACjD,OAAO,MAAM,CAAC,iBAAiB,CAAC,CAAA;SACjC;QACD,OAAO,kBAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAA;KACrD;AACH,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,sBAAsB,GAAG,UACpC,KAA6B,EAC7B,GAA2B;IAE3B,SAAS,QAAQ,CAAkC,EAAM;QACvD,IAAI,OAAsB,CAAA;QAC1B,IAAI;YACF,KAAK,EAAE,CAAA;YACP,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE;gBACZ,OAAO,GAAG,EAAE,EAAE,CAAA;aACf;SACF;gBAAS;YACR,GAAG,EAAE,CAAA;SACN;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAED,QAAQ,CAAC,KAAK,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAA;IAC7C,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,kBAAkB,GAAG,UAChC,QAAkB;IAElB,SAAS,IAAI,CACX,QAAY,EACZ,OAAa;QAEb,OAAO,CAAC;YAAC,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YACrB,OAAA,QAAQ,CAAC,cAAM,OAAA,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,EAA7B,CAA6B,CAAC;QAA7C,CAA6C,CAAQ,CAAA;IACzD,CAAC;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,wBAAwB,GAAG,UACtC,KAA6B,EAC7B,GAA2B;IAE3B,IAAM,QAAQ,GAAG,sBAAsB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;IACnD,IAAM,UAAU,GAAG,gBAAgB,CAAC,UAAC,EAAe;YAAb,MAAM,YAAA,EAAE,GAAG,SAAA;QAChD,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAA;QACjD,OAAO,MAAM,CAAA;IACf,CAAC,CAAC,CAAA;IACF,QAAQ,CAAC,iBAAiB,CAAC,GAAG,UAAU,CAAA;IACxC,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,UAAU,CAAA;IAC9C,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA","sourcesContent":["import { isFn, isCollectionType, isNormalType } from './checkers'\nimport {\n  RawProxy,\n  ProxyRaw,\n  MakeObModelSymbol,\n  RawShallowProxy,\n} from './environment'\nimport { baseHandlers, collectionHandlers } from './handlers'\nimport { buildDataTree, getDataNode } from './tree'\nimport { isSupportObservable } from './externals'\nimport { PropertyKey, IVisitor, BoundaryFunction } from './types'\n\nconst createNormalProxy = (target: any, shallow?: boolean) => {\n  const proxy = new Proxy(target, baseHandlers)\n  ProxyRaw.set(proxy, target)\n  if (shallow) {\n    RawShallowProxy.set(target, proxy)\n  } else {\n    RawProxy.set(target, proxy)\n  }\n  return proxy\n}\n\nconst createCollectionProxy = (target: any, shallow?: boolean) => {\n  const proxy = new Proxy(target, collectionHandlers)\n  ProxyRaw.set(proxy, target)\n  if (shallow) {\n    RawShallowProxy.set(target, proxy)\n  } else {\n    RawProxy.set(target, proxy)\n  }\n  return proxy\n}\n\nconst createShallowProxy = (target: any) => {\n  if (isNormalType(target)) return createNormalProxy(target, true)\n  if (isCollectionType(target)) return createCollectionProxy(target, true)\n  // never reach\n  return target\n}\n\nexport const createObservable = (\n  target: any,\n  key?: PropertyKey,\n  value?: any,\n  shallow?: boolean\n) => {\n  if (typeof value !== 'object') return value\n  const raw = ProxyRaw.get(value)\n  if (!!raw) {\n    const node = getDataNode(raw)\n    if (!node.target) node.target = target\n    node.key = key\n    return value\n  }\n\n  if (!isSupportObservable(value)) return value\n\n  if (target) {\n    const parentRaw = ProxyRaw.get(target) || target\n    const isShallowParent = RawShallowProxy.get(parentRaw)\n    if (isShallowParent) return value\n  }\n\n  buildDataTree(target, key, value)\n  if (shallow) return createShallowProxy(value)\n  if (isNormalType(value)) return createNormalProxy(value)\n  if (isCollectionType(value)) return createCollectionProxy(value)\n  // never reach\n  return value\n}\n\nexport const createAnnotation = <T extends (visitor: IVisitor) => any>(\n  maker: T\n) => {\n  const annotation = (target: any): ReturnType<T> => {\n    return maker({ value: target })\n  }\n  if (isFn(maker)) {\n    annotation[MakeObModelSymbol] = maker\n  }\n  return annotation\n}\n\nexport const getObservableMaker = (target: any) => {\n  if (target[MakeObModelSymbol]) {\n    if (!target[MakeObModelSymbol][MakeObModelSymbol]) {\n      return target[MakeObModelSymbol]\n    }\n    return getObservableMaker(target[MakeObModelSymbol])\n  }\n}\n\nexport const createBoundaryFunction = (\n  start: (...args: any) => void,\n  end: (...args: any) => void\n) => {\n  function boundary<F extends (...args: any) => any>(fn?: F): ReturnType<F> {\n    let results: ReturnType<F>\n    try {\n      start()\n      if (isFn(fn)) {\n        results = fn()\n      }\n    } finally {\n      end()\n    }\n    return results\n  }\n\n  boundary.bound = createBindFunction(boundary)\n  return boundary\n}\n\nexport const createBindFunction = <Boundary extends BoundaryFunction>(\n  boundary: Boundary\n) => {\n  function bind<F extends (...args: any[]) => any>(\n    callback?: F,\n    context?: any\n  ): F {\n    return ((...args: any[]) =>\n      boundary(() => callback.apply(context, args))) as any\n  }\n  return bind\n}\n\nexport const createBoundaryAnnotation = (\n  start: (...args: any) => void,\n  end: (...args: any) => void\n) => {\n  const boundary = createBoundaryFunction(start, end)\n  const annotation = createAnnotation(({ target, key }) => {\n    target[key] = boundary.bound(target[key], target)\n    return target\n  })\n  boundary[MakeObModelSymbol] = annotation\n  boundary.bound[MakeObModelSymbol] = annotation\n  return boundary\n}\n"]}