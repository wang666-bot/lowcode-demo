{"version":3,"file":"shallow.js","sourceRoot":"","sources":["../../src/annotations/shallow.ts"],"names":[],"mappings":";;;AAAA,0CAAiE;AACjE,wCAGoB;AAGP,QAAA,OAAO,GAAgB,IAAA,4BAAgB,EAClD,UAAC,EAAsB;QAApB,MAAM,YAAA,EAAE,GAAG,SAAA,EAAE,KAAK,WAAA;IACnB,IAAM,KAAK,GAAG;QACZ,KAAK,EAAE,IAAA,4BAAgB,EAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC;KACzE,CAAA;IAED,SAAS,GAAG;QACV,IAAA,2CAAgC,EAAC;YAC/B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,KAAK;SACZ,CAAC,CAAA;QACF,OAAO,KAAK,CAAC,KAAK,CAAA;IACpB,CAAC;IAED,SAAS,GAAG,CAAC,KAAU;QACrB,IAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAA;QAC5B,KAAK,GAAG,IAAA,4BAAgB,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QAClD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAA;QACnB,IAAI,QAAQ,KAAK,KAAK;YAAE,OAAM;QAC9B,IAAA,oCAAyB,EAAC;YACxB,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,KAAK;YACX,QAAQ,UAAA;YACR,KAAK,OAAA;SACN,CAAC,CAAA;IACJ,CAAC;IACD,IAAI,MAAM,EAAE;QACV,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE;YACjC,GAAG,KAAA;YACH,GAAG,KAAA;YACH,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,KAAK;SACpB,CAAC,CAAA;QACF,OAAO,MAAM,CAAA;KACd;IACD,OAAO,KAAK,CAAC,KAAK,CAAA;AACpB,CAAC,CACF,CAAA","sourcesContent":["import { createAnnotation, createObservable } from '../internals'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\nimport { IObservable } from './observable'\n\nexport const shallow: IObservable = createAnnotation(\n  ({ target, key, value }) => {\n    const store = {\n      value: createObservable(target, key, target ? target[key] : value, true),\n    }\n\n    function get() {\n      bindTargetKeyWithCurrentReaction({\n        target: target,\n        key: key,\n        type: 'get',\n      })\n      return store.value\n    }\n\n    function set(value: any) {\n      const oldValue = store.value\n      value = createObservable(target, key, value, true)\n      store.value = value\n      if (oldValue === value) return\n      runReactionsFromTargetKey({\n        target: target,\n        key: key,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n    if (target) {\n      Object.defineProperty(target, key, {\n        set,\n        get,\n        enumerable: true,\n        configurable: false,\n      })\n      return target\n    }\n    return store.value\n  }\n)\n"]}