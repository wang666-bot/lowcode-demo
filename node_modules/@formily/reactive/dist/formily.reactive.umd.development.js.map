{"version":3,"file":"formily.reactive.umd.development.js","sources":["../src/checkers.ts","../src/array.ts","../src/environment.ts","../src/reaction.ts","../src/tree.ts","../src/externals.ts","../src/handlers.ts","../src/internals.ts","../src/batch.ts","../src/action.ts","../src/untracked.ts","../src/annotations/observable.ts","../src/annotations/box.ts","../src/annotations/ref.ts","../src/annotations/shallow.ts","../src/annotations/computed.ts","../src/observable.ts","../src/model.ts","../src/autorun.ts","../src/tracker.ts","../src/observe.ts"],"sourcesContent":["const toString = Object.prototype.toString\nexport const isMap = (val: any): val is Map<any, any> =>\n  val && val instanceof Map\nexport const isSet = (val: any): val is Set<any> => val && val instanceof Set\nexport const isWeakMap = (val: any): val is WeakMap<any, any> =>\n  val && val instanceof WeakMap\nexport const isWeakSet = (val: any): val is WeakSet<any> =>\n  val && val instanceof WeakSet\nexport const isFn = (val: any): val is Function => typeof val === 'function'\nexport const isArr = Array.isArray\nexport const isPlainObj = (val: any): val is object =>\n  toString.call(val) === '[object Object]'\nexport const isValid = (val: any) => val !== null && val !== undefined\nexport const isCollectionType = (target: any) => {\n  return (\n    isMap(target) || isWeakMap(target) || isSet(target) || isWeakSet(target)\n  )\n}\nexport const isNormalType = (target: any) => {\n  return isPlainObj(target) || isArr(target)\n}\n","export const toArray = (value: any) => {\n  return Array.isArray(value)\n    ? value\n    : value !== undefined && value !== null\n    ? [value]\n    : []\n}\n\nexport class ArraySet<T> {\n  value: T[]\n  forEachIndex = 0\n  constructor(value: T[] = []) {\n    this.value = value\n  }\n\n  add(item: T) {\n    if (!this.has(item)) {\n      this.value.push(item)\n    }\n  }\n\n  has(item: T) {\n    return this.value.indexOf(item) > -1\n  }\n\n  delete(item: T) {\n    const len = this.value.length\n    if (len === 0) return\n    if (len === 1 && this.value[0] === item) {\n      this.value = []\n      return\n    }\n    const findIndex = this.value.indexOf(item)\n    if (findIndex > -1) {\n      this.value.splice(findIndex, 1)\n      if (findIndex <= this.forEachIndex) {\n        this.forEachIndex -= 1\n      }\n    }\n  }\n\n  forEach(callback: (value: T) => void) {\n    if (this.value.length === 0) return\n    this.forEachIndex = 0\n    for (; this.forEachIndex < this.value.length; this.forEachIndex++) {\n      callback(this.value[this.forEachIndex])\n    }\n  }\n\n  batchDelete(callback: (value: T) => void) {\n    if (this.value.length === 0) return\n    this.forEachIndex = 0\n    for (; this.forEachIndex < this.value.length; this.forEachIndex++) {\n      const value = this.value[this.forEachIndex]\n      this.value.splice(this.forEachIndex, 1)\n      this.forEachIndex--\n      callback(value)\n    }\n  }\n\n  clear() {\n    this.value.length = 0\n  }\n}\n","import { ObservableListener, Reaction, ReactionsMap } from './types'\nimport { ArraySet } from './array'\nimport { DataNode } from './tree'\n\nexport const ProxyRaw = new WeakMap()\nexport const RawProxy = new WeakMap()\nexport const RawShallowProxy = new WeakMap()\nexport const RawNode = new WeakMap<object, DataNode>()\nexport const RawReactionsMap = new WeakMap<object, ReactionsMap>()\n\nexport const ReactionStack: Reaction[] = []\nexport const BatchCount = { value: 0 }\nexport const UntrackCount = { value: 0 }\nexport const BatchScope = { value: false }\nexport const DependencyCollected = { value: false }\nexport const PendingReactions = new ArraySet<Reaction>()\nexport const PendingScopeReactions = new ArraySet<Reaction>()\nexport const BatchEndpoints = new ArraySet<() => void>()\nexport const ObserverListeners = new ArraySet<ObservableListener>()\nexport const MakeObModelSymbol = Symbol('MakeObModelSymbol')\nexport const ObModelSymbol = Symbol('ObModelSymbol')\nexport const ObModelNodeSymbol = Symbol('ObModelNodeSymbol')\n","import { isFn } from './checkers'\nimport { ArraySet } from './array'\nimport { IOperation, ReactionsMap, Reaction, PropertyKey } from './types'\nimport {\n  ReactionStack,\n  PendingScopeReactions,\n  BatchEndpoints,\n  DependencyCollected,\n  RawReactionsMap,\n  PendingReactions,\n  BatchCount,\n  UntrackCount,\n  BatchScope,\n  ObserverListeners,\n} from './environment'\n\nconst ITERATION_KEY = Symbol('iteration key')\n\nconst addRawReactionsMap = (\n  target: any,\n  key: PropertyKey,\n  reaction: Reaction\n) => {\n  const reactionsMap = RawReactionsMap.get(target)\n  if (reactionsMap) {\n    const reactions = reactionsMap.get(key)\n    if (reactions) {\n      reactions.add(reaction)\n    } else {\n      reactionsMap.set(key, new ArraySet([reaction]))\n    }\n    return reactionsMap\n  } else {\n    const reactionsMap: ReactionsMap = new Map([\n      [key, new ArraySet([reaction])],\n    ])\n    RawReactionsMap.set(target, reactionsMap)\n    return reactionsMap\n  }\n}\n\nconst addReactionsMapToReaction = (\n  reaction: Reaction,\n  reactionsMap: ReactionsMap\n) => {\n  const bindSet = reaction._reactionsSet\n  if (bindSet) {\n    bindSet.add(reactionsMap)\n  } else {\n    reaction._reactionsSet = new ArraySet([reactionsMap])\n  }\n  return bindSet\n}\n\nconst getReactionsFromTargetKey = (target: any, key: PropertyKey) => {\n  const reactionsMap = RawReactionsMap.get(target)\n  const reactions = []\n  if (reactionsMap) {\n    const map = reactionsMap.get(key)\n    if (map) {\n      map.forEach((reaction) => {\n        if (reactions.indexOf(reaction) === -1) {\n          reactions.push(reaction)\n        }\n      })\n    }\n  }\n  return reactions\n}\n\nconst runReactions = (target: any, key: PropertyKey) => {\n  const reactions = getReactionsFromTargetKey(target, key)\n  const prevUntrackCount = UntrackCount.value\n  UntrackCount.value = 0\n  for (let i = 0, len = reactions.length; i < len; i++) {\n    const reaction = reactions[i]\n    if (reaction._isComputed) {\n      reaction._scheduler(reaction)\n    } else if (isScopeBatching()) {\n      PendingScopeReactions.add(reaction)\n    } else if (isBatching()) {\n      PendingReactions.add(reaction)\n    } else {\n      // never reach\n      if (isFn(reaction._scheduler)) {\n        reaction._scheduler(reaction)\n      } else {\n        reaction()\n      }\n    }\n  }\n  UntrackCount.value = prevUntrackCount\n}\n\nconst notifyObservers = (operation: IOperation) => {\n  ObserverListeners.forEach((fn) => fn(operation))\n}\n\nexport const bindTargetKeyWithCurrentReaction = (operation: IOperation) => {\n  let { key, type, target } = operation\n  if (type === 'iterate') {\n    key = ITERATION_KEY\n  }\n  const reactionLen = ReactionStack.length\n  if (reactionLen === 0) return\n  const current = ReactionStack[reactionLen - 1]\n  if (isUntracking()) return\n  if (current) {\n    DependencyCollected.value = true\n    addReactionsMapToReaction(current, addRawReactionsMap(target, key, current))\n  }\n}\n\nexport const bindComputedReactions = (reaction: Reaction) => {\n  if (isFn(reaction)) {\n    const current = ReactionStack[ReactionStack.length - 1]\n    if (current) {\n      const computes = current._computesSet\n      if (computes) {\n        computes.add(reaction)\n      } else {\n        current._computesSet = new ArraySet([reaction])\n      }\n    }\n  }\n}\n\nexport const runReactionsFromTargetKey = (operation: IOperation) => {\n  let { key, type, target, oldTarget } = operation\n  batchStart()\n  notifyObservers(operation)\n  if (type === 'clear') {\n    oldTarget.forEach((_: any, key: PropertyKey) => {\n      runReactions(target, key)\n    })\n  } else {\n    runReactions(target, key)\n  }\n  if (type === 'add' || type === 'delete' || type === 'clear') {\n    const newKey = Array.isArray(target) ? 'length' : ITERATION_KEY\n    runReactions(target, newKey)\n  }\n  batchEnd()\n}\n\nexport const hasRunningReaction = () => {\n  return ReactionStack.length > 0\n}\n\nexport const releaseBindingReactions = (reaction: Reaction) => {\n  reaction._reactionsSet?.forEach((reactionsMap) => {\n    reactionsMap.forEach((reactions) => {\n      reactions.delete(reaction)\n    })\n  })\n  PendingReactions.delete(reaction)\n  PendingScopeReactions.delete(reaction)\n  delete reaction._reactionsSet\n}\n\nexport const suspendComputedReactions = (current: Reaction) => {\n  current._computesSet?.forEach((reaction) => {\n    const reactions = getReactionsFromTargetKey(\n      reaction._context,\n      reaction._property\n    )\n    if (reactions.length === 0) {\n      disposeBindingReactions(reaction)\n      reaction._dirty = true\n    }\n  })\n}\n\nexport const disposeBindingReactions = (reaction: Reaction) => {\n  reaction._disposed = true\n  releaseBindingReactions(reaction)\n  suspendComputedReactions(reaction)\n}\n\nexport const batchStart = () => {\n  BatchCount.value++\n}\n\nexport const batchEnd = () => {\n  BatchCount.value--\n  if (BatchCount.value === 0) {\n    const prevUntrackCount = UntrackCount.value\n    UntrackCount.value = 0\n    executePendingReactions()\n    executeBatchEndpoints()\n    UntrackCount.value = prevUntrackCount\n  }\n}\n\nexport const batchScopeStart = () => {\n  BatchScope.value = true\n}\n\nexport const batchScopeEnd = () => {\n  const prevUntrackCount = UntrackCount.value\n  BatchScope.value = false\n  UntrackCount.value = 0\n  PendingScopeReactions.batchDelete((reaction) => {\n    if (isFn(reaction._scheduler)) {\n      reaction._scheduler(reaction)\n    } else {\n      reaction()\n    }\n  })\n  UntrackCount.value = prevUntrackCount\n}\n\nexport const untrackStart = () => {\n  UntrackCount.value++\n}\n\nexport const untrackEnd = () => {\n  UntrackCount.value--\n}\n\nexport const isBatching = () => BatchCount.value > 0\n\nexport const isScopeBatching = () => BatchScope.value\n\nexport const isUntracking = () => UntrackCount.value > 0\n\nexport const executePendingReactions = () => {\n  PendingReactions.batchDelete((reaction) => {\n    if (isFn(reaction._scheduler)) {\n      reaction._scheduler(reaction)\n    } else {\n      reaction()\n    }\n  })\n}\n\nexport const executeBatchEndpoints = () => {\n  BatchEndpoints.batchDelete((callback) => {\n    callback()\n  })\n}\n\nexport const hasDepsChange = (newDeps: any[], oldDeps: any[]) => {\n  if (newDeps === oldDeps) return false\n  if (newDeps.length !== oldDeps.length) return true\n  if (newDeps.some((value, index) => value !== oldDeps[index])) return true\n  return false\n}\n\nexport const disposeEffects = (reaction: Reaction) => {\n  if (reaction._effects) {\n    try {\n      batchStart()\n      reaction._effects.queue.forEach((item) => {\n        if (!item || !item.dispose) return\n        item.dispose()\n      })\n    } finally {\n      batchEnd()\n    }\n  }\n}\n","import { ObModelSymbol, ObModelNodeSymbol, RawNode } from './environment'\nimport { raw as getRaw } from './externals'\nimport { PropertyKey, IOperation } from './types'\nexport class DataChange {\n  node: DataNode\n  key: PropertyKey\n  object: object\n  type: string\n  value: any\n  oldValue: any\n  constructor(operation: IOperation, node: DataNode) {\n    this.node = node\n    this.key = operation.key\n    this.type = operation.type\n    this.object = operation.target\n    this.value = operation.value\n    this.oldValue = operation.oldValue\n  }\n\n  get path() {\n    return this.node.path.concat(this.key)\n  }\n}\nexport class DataNode {\n  target: any\n\n  key: PropertyKey\n\n  value: any\n\n  constructor(target: any, key: PropertyKey, value: any) {\n    this.target = target\n    this.key = key\n    this.value = value\n  }\n\n  get path() {\n    if (!this.parent) return this.key ? [this.key] : []\n    return this.parent.path.concat(this.key)\n  }\n\n  get targetRaw() {\n    return getRaw(this.target)\n  }\n\n  get parent() {\n    if (!this.target) return\n    return getDataNode(this.targetRaw)\n  }\n\n  isEqual(node: DataNode) {\n    if (this.key) {\n      return node.targetRaw === this.targetRaw && node.key === this.key\n    }\n    return node.value === this.value\n  }\n\n  contains(node: DataNode) {\n    if (node === this) return true\n    let parent = node.parent\n    while (!!parent) {\n      if (this.isEqual(parent)) return true\n      parent = parent.parent\n    }\n    return false\n  }\n}\n\nexport const getDataNode = (raw: any) => {\n  if (raw?.[ObModelNodeSymbol]) {\n    return raw[ObModelNodeSymbol]\n  }\n  return RawNode.get(raw)\n}\n\nexport const setDataNode = (raw: any, node: DataNode) => {\n  if (raw?.[ObModelSymbol]) {\n    raw[ObModelNodeSymbol] = node\n    return\n  }\n  RawNode.set(raw, node)\n}\n\nexport const buildDataTree = (target: any, key: PropertyKey, value: any) => {\n  const raw = getRaw(value)\n  const currentNode = getDataNode(raw)\n  if (currentNode) return currentNode\n  setDataNode(raw, new DataNode(target, key, value))\n}\n","import {\n  isValid,\n  isFn,\n  isMap,\n  isWeakMap,\n  isSet,\n  isWeakSet,\n  isPlainObj,\n  isArr,\n} from './checkers'\nimport {\n  ProxyRaw,\n  MakeObModelSymbol,\n  DependencyCollected,\n  ObModelSymbol,\n} from './environment'\nimport { getDataNode } from './tree'\nimport { Annotation } from './types'\n\nconst RAW_TYPE = Symbol('RAW_TYPE')\nconst OBSERVABLE_TYPE = Symbol('OBSERVABLE_TYPE')\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport const isObservable = (target: any) => {\n  return ProxyRaw.has(target) || !!target?.[ObModelSymbol]\n}\n\nexport const isAnnotation = (target: any): target is Annotation => {\n  return target && !!target[MakeObModelSymbol]\n}\n\nexport const isSupportObservable = (target: any) => {\n  if (!isValid(target)) return false\n  if (isArr(target)) return true\n  if (isPlainObj(target)) {\n    if (target[RAW_TYPE]) {\n      return false\n    }\n    if (target[OBSERVABLE_TYPE]) {\n      return true\n    }\n    if ('$$typeof' in target && '_owner' in target) {\n      return false\n    }\n    if (target['_isAMomentObject']) {\n      return false\n    }\n    if (target['_isJSONSchemaObject']) {\n      return false\n    }\n    if (isFn(target['toJS'])) {\n      return false\n    }\n    if (isFn(target['toJSON'])) {\n      return false\n    }\n    return true\n  }\n  if (isMap(target) || isWeakMap(target) || isSet(target) || isWeakSet(target))\n    return true\n  return false\n}\n\nexport const markRaw = <T>(target: T): T => {\n  if (!target) return\n  if (isFn(target)) {\n    target.prototype[RAW_TYPE] = true\n  } else {\n    target[RAW_TYPE] = true\n  }\n  return target\n}\n\nexport const markObservable = <T>(target: T): T => {\n  if (!target) return\n  if (isFn(target)) {\n    target.prototype[OBSERVABLE_TYPE] = true\n  } else {\n    target[OBSERVABLE_TYPE] = true\n  }\n  return target\n}\n\nexport const raw = <T>(target: T): T => {\n  if (target?.[ObModelSymbol]) return target[ObModelSymbol]\n  return ProxyRaw.get(target as any) || target\n}\n\nexport const toJS = <T>(values: T): T => {\n  const visited = new WeakSet<any>()\n  const _toJS: typeof toJS = (values: any) => {\n    if (visited.has(values)) {\n      return values\n    }\n    if (values && values[RAW_TYPE]) return values\n    if (isArr(values)) {\n      if (isObservable(values)) {\n        visited.add(values)\n        const res: any = []\n        values.forEach((item: any) => {\n          res.push(_toJS(item))\n        })\n        visited.delete(values)\n        return res\n      }\n    } else if (isPlainObj(values)) {\n      if (isObservable(values)) {\n        visited.add(values)\n        const res: any = {}\n        for (const key in values) {\n          if (hasOwnProperty.call(values, key)) {\n            res[key] = _toJS(values[key])\n          }\n        }\n        visited.delete(values)\n        return res\n      }\n    }\n    return values\n  }\n\n  return _toJS(values)\n}\n\nexport const contains = (target: any, property: any) => {\n  const targetRaw = raw(target)\n  const propertyRaw = raw(property)\n  if (targetRaw === propertyRaw) return true\n  const targetNode = getDataNode(targetRaw)\n  const propertyNode = getDataNode(propertyRaw)\n  if (!targetNode) return false\n  if (!propertyNode) return false\n  return targetNode.contains(propertyNode)\n}\n\nexport const hasCollected = (callback?: () => void) => {\n  DependencyCollected.value = false\n  callback?.()\n  return DependencyCollected.value\n}\n","import {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from './reaction'\nimport { ProxyRaw, RawProxy } from './environment'\nimport { isObservable, isSupportObservable } from './externals'\nimport { createObservable } from './internals'\n\nconst wellKnownSymbols = new Set(\n  Object.getOwnPropertyNames(Symbol).reduce((buf: Symbol[], key) => {\n    if (key === 'arguments' || key === 'caller') return buf\n    const value = Symbol[key]\n    if (typeof value === 'symbol') return buf.concat(value)\n    return buf\n  }, [])\n)\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction findObservable(target: any, key: PropertyKey, value: any) {\n  const observableObj = RawProxy.get(value)\n  if (observableObj) {\n    return observableObj\n  }\n  if (!isObservable(value) && isSupportObservable(value)) {\n    return createObservable(target, key, value)\n  }\n  return value\n}\n\nfunction patchIterator(\n  target: any,\n  key: PropertyKey,\n  iterator: IterableIterator<any>,\n  isEntries: boolean\n) {\n  const originalNext = iterator.next\n  iterator.next = () => {\n    let { done, value } = originalNext.call(iterator)\n    if (!done) {\n      if (isEntries) {\n        value[1] = findObservable(target, key, value[1])\n      } else {\n        value = findObservable(target, key, value)\n      }\n    }\n    return { done, value }\n  }\n  return iterator\n}\n\nconst instrumentations = {\n  has(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'has' })\n    return proto.has.apply(target, arguments)\n  },\n  get(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'get' })\n    return findObservable(target, key, proto.get.apply(target, arguments))\n  },\n  add(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    // forward the operation before queueing reactions\n    const result = proto.add.apply(target, arguments)\n    if (!hadKey) {\n      runReactionsFromTargetKey({ target, key, value: key, type: 'add' })\n    }\n    return result\n  },\n  set(key: PropertyKey, value: any) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    const oldValue = proto.get.call(target, key)\n    // forward the operation before queueing reactions\n    const result = proto.set.apply(target, arguments)\n    if (!hadKey) {\n      runReactionsFromTargetKey({ target, key, value, type: 'add' })\n    } else if (value !== oldValue) {\n      runReactionsFromTargetKey({ target, key, value, oldValue, type: 'set' })\n    }\n    return result\n  },\n  delete(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    const oldValue = proto.get ? proto.get.call(target, key) : undefined\n    // forward the operation before queueing reactions\n    const result = proto.delete.apply(target, arguments)\n    if (hadKey) {\n      runReactionsFromTargetKey({ target, key, oldValue, type: 'delete' })\n    }\n    return result\n  },\n  clear() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadItems = target.size !== 0\n    const oldTarget = target instanceof Map ? new Map(target) : new Set(target)\n    // forward the operation before queueing reactions\n    const result = proto.clear.apply(target, arguments)\n    if (hadItems) {\n      runReactionsFromTargetKey({ target, oldTarget, type: 'clear' })\n    }\n    return result\n  },\n  forEach(cb: any, ...args: any[]) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    // swap out the raw values with their observable pairs\n    // before passing them to the callback\n    const wrappedCb = (value: any, key: PropertyKey, ...args: any) =>\n      cb(findObservable(target, key, value), key, ...args)\n    return proto.forEach.call(target, wrappedCb, ...args)\n  },\n  keys() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return proto.keys.apply(target, arguments)\n  },\n  values() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto.values.apply(target, arguments)\n    return patchIterator(target, '', iterator, false)\n  },\n  entries() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto.entries.apply(target, arguments)\n    return patchIterator(target, '', iterator, true)\n  },\n  [Symbol.iterator]() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto[Symbol.iterator].apply(target, arguments)\n    return patchIterator(target, '', iterator, target instanceof Map)\n  },\n  get size() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return Reflect.get(proto, 'size', target)\n  },\n}\n\nexport const collectionHandlers = {\n  get(target: any, key: PropertyKey, receiver: any) {\n    // instrument methods and property accessors to be reactive\n    target = hasOwnProperty.call(instrumentations, key)\n      ? instrumentations\n      : target\n    return Reflect.get(target, key, receiver)\n  },\n}\n\nexport const baseHandlers: ProxyHandler<any> = {\n  get(target, key, receiver) {\n    if (!key) return\n    const result = target[key] // use Reflect.get is too slow\n    if (typeof key === 'symbol' && wellKnownSymbols.has(key)) {\n      return result\n    }\n    bindTargetKeyWithCurrentReaction({ target, key, receiver, type: 'get' })\n    const observableResult = RawProxy.get(result)\n    if (observableResult) {\n      return observableResult\n    }\n    if (!isObservable(result) && isSupportObservable(result)) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (\n        !descriptor ||\n        !(descriptor.writable === false && descriptor.configurable === false)\n      ) {\n        return createObservable(target, key, result)\n      }\n    }\n    return result\n  },\n  has(target, key) {\n    const result = Reflect.has(target, key)\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'has' })\n    return result\n  },\n  ownKeys(target) {\n    const keys = Reflect.ownKeys(target)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return keys\n  },\n  set(target, key, value, receiver) {\n    // vue2中有对数组原型重写，因此需去除此处proxy\n    if (key === '__proto__') {\n      target[key] = value\n      return true\n    }\n    const hadKey = hasOwnProperty.call(target, key)\n    const newValue = createObservable(target, key, value)\n    const oldValue = target[key]\n    target[key] = newValue // use Reflect.set is too slow\n    if (!hadKey) {\n      runReactionsFromTargetKey({\n        target,\n        key,\n        value: newValue,\n        oldValue,\n        receiver,\n        type: 'add',\n      })\n    } else if (value !== oldValue) {\n      runReactionsFromTargetKey({\n        target,\n        key,\n        value: newValue,\n        oldValue,\n        receiver,\n        type: 'set',\n      })\n    }\n    return true\n  },\n  deleteProperty(target, key) {\n    const oldValue = target[key]\n    delete target[key]\n    runReactionsFromTargetKey({\n      target,\n      key,\n      oldValue,\n      type: 'delete',\n    })\n    return true\n  },\n}\n","import { isFn, isCollectionType, isNormalType } from './checkers'\nimport {\n  RawProxy,\n  ProxyRaw,\n  MakeObModelSymbol,\n  RawShallowProxy,\n} from './environment'\nimport { baseHandlers, collectionHandlers } from './handlers'\nimport { buildDataTree, getDataNode } from './tree'\nimport { isSupportObservable } from './externals'\nimport { PropertyKey, IVisitor, BoundaryFunction } from './types'\n\nconst createNormalProxy = (target: any, shallow?: boolean) => {\n  const proxy = new Proxy(target, baseHandlers)\n  ProxyRaw.set(proxy, target)\n  if (shallow) {\n    RawShallowProxy.set(target, proxy)\n  } else {\n    RawProxy.set(target, proxy)\n  }\n  return proxy\n}\n\nconst createCollectionProxy = (target: any, shallow?: boolean) => {\n  const proxy = new Proxy(target, collectionHandlers)\n  ProxyRaw.set(proxy, target)\n  if (shallow) {\n    RawShallowProxy.set(target, proxy)\n  } else {\n    RawProxy.set(target, proxy)\n  }\n  return proxy\n}\n\nconst createShallowProxy = (target: any) => {\n  if (isNormalType(target)) return createNormalProxy(target, true)\n  if (isCollectionType(target)) return createCollectionProxy(target, true)\n  // never reach\n  return target\n}\n\nexport const createObservable = (\n  target: any,\n  key?: PropertyKey,\n  value?: any,\n  shallow?: boolean\n) => {\n  if (typeof value !== 'object') return value\n  const raw = ProxyRaw.get(value)\n  if (!!raw) {\n    const node = getDataNode(raw)\n    if (!node.target) node.target = target\n    node.key = key\n    return value\n  }\n\n  if (!isSupportObservable(value)) return value\n\n  if (target) {\n    const parentRaw = ProxyRaw.get(target) || target\n    const isShallowParent = RawShallowProxy.get(parentRaw)\n    if (isShallowParent) return value\n  }\n\n  buildDataTree(target, key, value)\n  if (shallow) return createShallowProxy(value)\n  if (isNormalType(value)) return createNormalProxy(value)\n  if (isCollectionType(value)) return createCollectionProxy(value)\n  // never reach\n  return value\n}\n\nexport const createAnnotation = <T extends (visitor: IVisitor) => any>(\n  maker: T\n) => {\n  const annotation = (target: any): ReturnType<T> => {\n    return maker({ value: target })\n  }\n  if (isFn(maker)) {\n    annotation[MakeObModelSymbol] = maker\n  }\n  return annotation\n}\n\nexport const getObservableMaker = (target: any) => {\n  if (target[MakeObModelSymbol]) {\n    if (!target[MakeObModelSymbol][MakeObModelSymbol]) {\n      return target[MakeObModelSymbol]\n    }\n    return getObservableMaker(target[MakeObModelSymbol])\n  }\n}\n\nexport const createBoundaryFunction = (\n  start: (...args: any) => void,\n  end: (...args: any) => void\n) => {\n  function boundary<F extends (...args: any) => any>(fn?: F): ReturnType<F> {\n    let results: ReturnType<F>\n    try {\n      start()\n      if (isFn(fn)) {\n        results = fn()\n      }\n    } finally {\n      end()\n    }\n    return results\n  }\n\n  boundary.bound = createBindFunction(boundary)\n  return boundary\n}\n\nexport const createBindFunction = <Boundary extends BoundaryFunction>(\n  boundary: Boundary\n) => {\n  function bind<F extends (...args: any[]) => any>(\n    callback?: F,\n    context?: any\n  ): F {\n    return ((...args: any[]) =>\n      boundary(() => callback.apply(context, args))) as any\n  }\n  return bind\n}\n\nexport const createBoundaryAnnotation = (\n  start: (...args: any) => void,\n  end: (...args: any) => void\n) => {\n  const boundary = createBoundaryFunction(start, end)\n  const annotation = createAnnotation(({ target, key }) => {\n    target[key] = boundary.bound(target[key], target)\n    return target\n  })\n  boundary[MakeObModelSymbol] = annotation\n  boundary.bound[MakeObModelSymbol] = annotation\n  return boundary\n}\n","import {\n  batchStart,\n  batchEnd,\n  batchScopeStart,\n  batchScopeEnd,\n} from './reaction'\nimport { BatchEndpoints, BatchCount } from './environment'\nimport { createBoundaryAnnotation } from './internals'\nimport { IBatch } from './types'\nimport { isFn } from './checkers'\n\nexport const batch: IBatch = createBoundaryAnnotation(batchStart, batchEnd)\nbatch.scope = createBoundaryAnnotation(batchScopeStart, batchScopeEnd)\nbatch.endpoint = (callback?: () => void) => {\n  if (!isFn(callback)) return\n  if (BatchCount.value === 0) {\n    callback()\n  } else {\n    BatchEndpoints.add(callback)\n  }\n}\n","import {\n  batchStart,\n  batchEnd,\n  batchScopeStart,\n  batchScopeEnd,\n  untrackStart,\n  untrackEnd,\n} from './reaction'\nimport { createBoundaryAnnotation } from './internals'\nimport { IAction } from './types'\n\nexport const action: IAction = createBoundaryAnnotation(\n  () => {\n    batchStart()\n    untrackStart()\n  },\n  () => {\n    untrackEnd()\n    batchEnd()\n  }\n)\n\naction.scope = createBoundaryAnnotation(\n  () => {\n    batchScopeStart()\n    untrackStart()\n  },\n  () => {\n    untrackEnd()\n    batchScopeEnd()\n  }\n)\n","import { createBoundaryFunction } from './internals'\nimport { untrackStart, untrackEnd } from './reaction'\n\nexport const untracked = createBoundaryFunction(untrackStart, untrackEnd)\n","import { createAnnotation, createObservable } from '../internals'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\n\nexport interface IObservable {\n  <T>(target: T): T\n}\n\nexport const observable: IObservable = createAnnotation(\n  ({ target, key, value }) => {\n    const store = {\n      value: createObservable(target, key, target ? target[key] : value),\n    }\n\n    function get() {\n      bindTargetKeyWithCurrentReaction({\n        target: target,\n        key: key,\n        type: 'get',\n      })\n      return store.value\n    }\n\n    function set(value: any) {\n      const oldValue = store.value\n      value = createObservable(target, key, value)\n      store.value = value\n      if (oldValue === value) return\n      runReactionsFromTargetKey({\n        target: target,\n        key: key,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n    if (target) {\n      Object.defineProperty(target, key, {\n        set,\n        get,\n        enumerable: true,\n        configurable: false,\n      })\n      return target\n    }\n    return store.value\n  }\n)\n","import { ProxyRaw, RawProxy } from '../environment'\nimport { createAnnotation } from '../internals'\nimport { buildDataTree } from '../tree'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\n\nexport interface IBox {\n  <T>(target: T): { get(): T; set(value: T): void }\n}\n\nexport const box: IBox = createAnnotation(({ target, key, value }) => {\n  const store = {\n    value: target ? target[key] : value,\n  }\n\n  const proxy = {\n    set,\n    get,\n  }\n\n  ProxyRaw.set(proxy, store)\n  RawProxy.set(store, proxy)\n\n  buildDataTree(target, key, store)\n\n  function get() {\n    bindTargetKeyWithCurrentReaction({\n      target: store,\n      key,\n      type: 'get',\n    })\n    return store.value\n  }\n\n  function set(value: any) {\n    const oldValue = store.value\n    store.value = value\n    if (oldValue !== value) {\n      runReactionsFromTargetKey({\n        target: store,\n        key,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n  }\n\n  if (target) {\n    Object.defineProperty(target, key, {\n      value: proxy,\n      enumerable: true,\n      configurable: false,\n      writable: false,\n    })\n    return target\n  }\n  return proxy\n})\n","import { ObModelSymbol } from '../environment'\nimport { createAnnotation } from '../internals'\nimport { buildDataTree } from '../tree'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\n\nexport interface IRef {\n  <T>(target: T): { value: T }\n}\n\nexport const ref: IRef = createAnnotation(({ target, key, value }) => {\n  const store = {\n    value: target ? target[key] : value,\n  }\n\n  const proxy = {}\n\n  const context = target ? target : store\n  const property = target ? key : 'value'\n\n  function get() {\n    bindTargetKeyWithCurrentReaction({\n      target: context,\n      key: property,\n      type: 'get',\n    })\n    return store.value\n  }\n\n  function set(value: any) {\n    const oldValue = store.value\n    store.value = value\n    if (oldValue !== value) {\n      runReactionsFromTargetKey({\n        target: context,\n        key: property,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n  }\n  if (target) {\n    Object.defineProperty(target, key, {\n      get,\n      set,\n      enumerable: true,\n    })\n    return target\n  } else {\n    Object.defineProperty(proxy, 'value', {\n      set,\n      get,\n    })\n    buildDataTree(target, key, store)\n    proxy[ObModelSymbol] = store\n  }\n  return proxy\n})\n","import { createAnnotation, createObservable } from '../internals'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\nimport { IObservable } from './observable'\n\nexport const shallow: IObservable = createAnnotation(\n  ({ target, key, value }) => {\n    const store = {\n      value: createObservable(target, key, target ? target[key] : value, true),\n    }\n\n    function get() {\n      bindTargetKeyWithCurrentReaction({\n        target: target,\n        key: key,\n        type: 'get',\n      })\n      return store.value\n    }\n\n    function set(value: any) {\n      const oldValue = store.value\n      value = createObservable(target, key, value, true)\n      store.value = value\n      if (oldValue === value) return\n      runReactionsFromTargetKey({\n        target: target,\n        key: key,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n    if (target) {\n      Object.defineProperty(target, key, {\n        set,\n        get,\n        enumerable: true,\n        configurable: false,\n      })\n      return target\n    }\n    return store.value\n  }\n)\n","import { ObModelSymbol, ReactionStack } from '../environment'\nimport { createAnnotation } from '../internals'\nimport { buildDataTree } from '../tree'\nimport { isFn } from '../checkers'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n  bindComputedReactions,\n  hasRunningReaction,\n  isUntracking,\n  batchStart,\n  batchEnd,\n  releaseBindingReactions,\n} from '../reaction'\n\ninterface IValue<T = any> {\n  value?: T\n}\nexport interface IComputed {\n  <T>(compute: () => T): IValue<T>\n  <T>(compute: { get?: () => T; set?: (value: T) => void }): IValue<T>\n}\n\nconst getDescriptor = Object.getOwnPropertyDescriptor\n\nconst getProto = Object.getPrototypeOf\n\nconst ClassDescriptorSymbol = Symbol('ClassDescriptorSymbol')\n\nfunction getPropertyDescriptor(obj: any, key: PropertyKey) {\n  if (!obj) return\n  return getDescriptor(obj, key) || getPropertyDescriptor(getProto(obj), key)\n}\n\nfunction getPropertyDescriptorCache(obj: any, key: PropertyKey) {\n  const constructor = obj.constructor\n  if (constructor === Object || constructor === Array)\n    return getPropertyDescriptor(obj, key)\n  const cache = constructor[ClassDescriptorSymbol] || {}\n  const descriptor = cache[key]\n  if (descriptor) return descriptor\n  const newDesc = getPropertyDescriptor(obj, key)\n  constructor[ClassDescriptorSymbol] = cache\n  cache[key] = newDesc\n  return newDesc\n}\n\nfunction getPrototypeDescriptor(\n  target: any,\n  key: PropertyKey,\n  value: any\n): PropertyDescriptor {\n  if (!target) {\n    if (value) {\n      if (isFn(value)) {\n        return { get: value }\n      } else {\n        return value\n      }\n    }\n    return {}\n  }\n  const descriptor = getPropertyDescriptorCache(target, key)\n  if (descriptor) {\n    return descriptor\n  }\n  return {}\n}\n\nexport const computed: IComputed = createAnnotation(\n  ({ target, key, value }) => {\n    const store: IValue = {}\n\n    const proxy = {}\n\n    const context = target ? target : store\n    const property = target ? key : 'value'\n    const descriptor = getPrototypeDescriptor(target, property, value)\n\n    function compute() {\n      store.value = descriptor.get?.call(context)\n    }\n    function reaction() {\n      if (ReactionStack.indexOf(reaction) === -1) {\n        releaseBindingReactions(reaction)\n        try {\n          ReactionStack.push(reaction)\n          compute()\n        } finally {\n          ReactionStack.pop()\n        }\n      }\n    }\n    reaction._name = 'ComputedReaction'\n    reaction._scheduler = () => {\n      reaction._dirty = true\n      runReactionsFromTargetKey({\n        target: context,\n        key: property,\n        value: store.value,\n        type: 'set',\n      })\n    }\n    reaction._isComputed = true\n    reaction._dirty = true\n    reaction._context = context\n    reaction._property = property\n\n    function get() {\n      if (hasRunningReaction()) {\n        bindComputedReactions(reaction)\n      }\n      if (!isUntracking()) {\n        //如果允许untracked过程中收集依赖，那么永远不会存在绑定，因为_dirty已经设置为false\n        if (reaction._dirty) {\n          reaction()\n          reaction._dirty = false\n        }\n      } else {\n        compute()\n      }\n      bindTargetKeyWithCurrentReaction({\n        target: context,\n        key: property,\n        type: 'get',\n      })\n      return store.value\n    }\n\n    function set(value: any) {\n      try {\n        batchStart()\n        descriptor.set?.call(context, value)\n      } finally {\n        batchEnd()\n      }\n    }\n    if (target) {\n      Object.defineProperty(target, key, {\n        get,\n        set,\n        enumerable: true,\n      })\n      return target\n    } else {\n      Object.defineProperty(proxy, 'value', {\n        set,\n        get,\n      })\n      buildDataTree(target, key, store)\n      proxy[ObModelSymbol] = store\n    }\n    return proxy\n  }\n)\n","import * as annotations from './annotations'\nimport { MakeObModelSymbol } from './environment'\nimport { createObservable } from './internals'\n\nexport function observable<T extends object>(target: T): T {\n  return createObservable(null, null, target)\n}\n\nobservable.box = annotations.box\nobservable.ref = annotations.ref\nobservable.deep = annotations.observable\nobservable.shallow = annotations.shallow\nobservable.computed = annotations.computed\nobservable[MakeObModelSymbol] = annotations.observable\n","import { isFn } from './checkers'\nimport { buildDataTree } from './tree'\nimport { observable } from './observable'\nimport { getObservableMaker } from './internals'\nimport { isObservable, isAnnotation, isSupportObservable } from './externals'\nimport { Annotations } from './types'\nimport { action } from './action'\nimport { ObModelSymbol } from './environment'\n\nexport function define<Target extends object = any>(\n  target: Target,\n  annotations?: Annotations<Target>\n): Target {\n  if (isObservable(target)) return target\n  if (!isSupportObservable(target)) return target\n  target[ObModelSymbol] = target\n  buildDataTree(undefined, undefined, target)\n  for (const key in annotations) {\n    const annotation = annotations[key]\n    if (isAnnotation(annotation)) {\n      getObservableMaker(annotation)({\n        target,\n        key,\n      })\n    }\n  }\n  return target\n}\n\nexport function model<Target extends object = any>(target: Target): Target {\n  const annotations = Object.keys(target || {}).reduce((buf, key) => {\n    const descriptor = Object.getOwnPropertyDescriptor(target, key)\n    if (descriptor && descriptor.get) {\n      buf[key] = observable.computed\n    } else if (isFn(target[key])) {\n      buf[key] = action\n    } else {\n      buf[key] = observable\n    }\n    return buf\n  }, {})\n  return define(target, annotations)\n}\n","import {\n  batchEnd,\n  batchStart,\n  disposeBindingReactions,\n  releaseBindingReactions,\n  disposeEffects,\n  hasDepsChange,\n} from './reaction'\nimport { isFn } from './checkers'\nimport { ReactionStack } from './environment'\nimport { Reaction, IReactionOptions, Dispose } from './types'\nimport { toArray } from './array'\n\ninterface IValue {\n  currentValue?: any\n  oldValue?: any\n}\n\nexport const autorun = (tracker: Reaction, name = 'AutoRun') => {\n  const reaction: Reaction = () => {\n    if (!isFn(tracker)) return\n    if (reaction._boundary > 0) return\n    if (ReactionStack.indexOf(reaction) === -1) {\n      releaseBindingReactions(reaction)\n      try {\n        batchStart()\n        ReactionStack.push(reaction)\n        tracker()\n      } finally {\n        ReactionStack.pop()\n        reaction._boundary++\n        batchEnd()\n        reaction._boundary = 0\n        reaction._memos.cursor = 0\n        reaction._effects.cursor = 0\n      }\n    }\n  }\n  const cleanRefs = () => {\n    reaction._memos = {\n      queue: [],\n      cursor: 0,\n    }\n    reaction._effects = {\n      queue: [],\n      cursor: 0,\n    }\n  }\n  reaction._boundary = 0\n  reaction._name = name\n  cleanRefs()\n  reaction()\n  return () => {\n    disposeBindingReactions(reaction)\n    disposeEffects(reaction)\n    cleanRefs()\n  }\n}\n\nautorun.memo = <T>(callback: () => T, dependencies?: any[]): T => {\n  if (!isFn(callback)) return\n  const current = ReactionStack[ReactionStack.length - 1]\n  if (!current || !current._memos)\n    throw new Error('autorun.memo must used in autorun function body.')\n  const deps = toArray(dependencies || [])\n  const id = current._memos.cursor++\n  const old = current._memos.queue[id]\n  if (!old || hasDepsChange(deps, old.deps)) {\n    const value = callback()\n    current._memos.queue[id] = {\n      value,\n      deps,\n    }\n    return value\n  }\n  return old.value\n}\n\nautorun.effect = (callback: () => void | Dispose, dependencies?: any[]) => {\n  if (!isFn(callback)) return\n  const current = ReactionStack[ReactionStack.length - 1]\n  if (!current || !current._effects)\n    throw new Error('autorun.effect must used in autorun function body.')\n  const effects = current._effects\n  const deps = toArray(dependencies || [{}])\n  const id = effects.cursor++\n  const old = effects.queue[id]\n  if (!old || hasDepsChange(deps, old.deps)) {\n    Promise.resolve(0).then(() => {\n      if (current._disposed) return\n      const dispose = callback()\n      if (isFn(dispose)) {\n        effects.queue[id].dispose = dispose\n      }\n    })\n    effects.queue[id] = {\n      deps,\n    }\n  }\n}\n\nexport const reaction = <T>(\n  tracker: () => T,\n  subscriber?: (value: T, oldValue: T) => void,\n  options?: IReactionOptions<T>\n) => {\n  const realOptions = {\n    name: 'Reaction',\n    ...options,\n  }\n  const value: IValue = {}\n  const dirtyCheck = () => {\n    if (isFn(realOptions.equals))\n      return !realOptions.equals(value.oldValue, value.currentValue)\n    return value.oldValue !== value.currentValue\n  }\n\n  const fireAction = () => {\n    try {\n      //如果untrack的话，会导致用户如果在scheduler里同步调用setState影响下次React渲染的依赖收集\n      batchStart()\n      if (isFn(subscriber)) subscriber(value.currentValue, value.oldValue)\n    } finally {\n      batchEnd()\n    }\n  }\n\n  const reaction: Reaction = () => {\n    if (ReactionStack.indexOf(reaction) === -1) {\n      releaseBindingReactions(reaction)\n      try {\n        ReactionStack.push(reaction)\n        value.currentValue = tracker()\n      } finally {\n        ReactionStack.pop()\n      }\n    }\n  }\n  reaction._scheduler = (looping) => {\n    looping()\n    if (dirtyCheck()) fireAction()\n    value.oldValue = value.currentValue\n  }\n  reaction._name = realOptions.name\n  reaction()\n  value.oldValue = value.currentValue\n  if (realOptions.fireImmediately) {\n    fireAction()\n  }\n  return () => {\n    disposeBindingReactions(reaction)\n  }\n}\n","import { ReactionStack } from './environment'\nimport { isFn } from './checkers'\nimport { Reaction } from './types'\nimport {\n  batchEnd,\n  batchStart,\n  disposeBindingReactions,\n  releaseBindingReactions,\n} from './reaction'\n\nexport class Tracker {\n  private results: any\n  constructor(\n    scheduler?: (reaction: Reaction) => void,\n    name = 'TrackerReaction'\n  ) {\n    this.track._scheduler = (callback) => {\n      if (this.track._boundary === 0) this.dispose()\n      if (isFn(callback)) scheduler(callback)\n    }\n    this.track._name = name\n    this.track._boundary = 0\n  }\n\n  track: Reaction = (tracker: Reaction) => {\n    if (!isFn(tracker)) return this.results\n    if (this.track._boundary > 0) return\n    if (ReactionStack.indexOf(this.track) === -1) {\n      releaseBindingReactions(this.track)\n      try {\n        batchStart()\n        ReactionStack.push(this.track)\n        this.results = tracker()\n      } finally {\n        ReactionStack.pop()\n        this.track._boundary++\n        batchEnd()\n        this.track._boundary = 0\n      }\n    }\n    return this.results\n  }\n\n  dispose = () => {\n    disposeBindingReactions(this.track)\n  }\n}\n","import { IOperation } from './types'\nimport { ObserverListeners } from './environment'\nimport { raw as getRaw } from './externals'\nimport { isFn } from './checkers'\nimport { DataChange, getDataNode } from './tree'\n\nexport const observe = (\n  target: object,\n  observer?: (change: DataChange) => void,\n  deep = true\n) => {\n  const addListener = (target: any) => {\n    const raw = getRaw(target)\n    const node = getDataNode(raw)\n\n    const listener = (operation: IOperation) => {\n      const targetRaw = getRaw(operation.target)\n      const targetNode = getDataNode(targetRaw)\n      if (deep) {\n        if (node.contains(targetNode)) {\n          observer(new DataChange(operation, targetNode))\n          return\n        }\n      }\n      if (\n        node === targetNode ||\n        (node.targetRaw === targetRaw && node.key === operation.key)\n      ) {\n        observer(new DataChange(operation, targetNode))\n      }\n    }\n\n    if (node && isFn(observer)) {\n      ObserverListeners.add(listener)\n    }\n    return () => {\n      ObserverListeners.delete(listener)\n    }\n  }\n  if (target && typeof target !== 'object')\n    throw Error(`Can not observe ${typeof target} type.`)\n  return addListener(target)\n}\n"],"names":["getRaw","raw","hasOwnProperty","observable","annotations.box","annotations.ref","annotations.observable","annotations.shallow","annotations.computed"],"mappings":"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"}