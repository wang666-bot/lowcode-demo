import { useEffect, useRef } from 'react';
import { immediate } from '../shared';
var isArr = Array.isArray;
var isEqualDeps = function (target, source) {
    var arrA = isArr(target);
    var arrB = isArr(source);
    if (arrA !== arrB)
        return false;
    if (arrA) {
        if (target.length !== source.length)
            return false;
        return target.every(function (val, index) { return val === source[index]; });
    }
    return target === source;
};
export var useCompatEffect = function (effect, deps) {
    var depsRef = useRef(null);
    var mountedRef = useRef(false);
    useEffect(function () {
        mountedRef.current = true;
        var dispose = effect();
        return function () {
            mountedRef.current = false;
            if (!isEqualDeps(depsRef.current, deps)) {
                if (dispose)
                    dispose();
                return;
            }
            immediate(function () {
                if (mountedRef.current)
                    return;
                if (dispose)
                    dispose();
            });
        };
    }, deps);
    depsRef.current = deps;
};
//# sourceMappingURL=useCompatEffect.js.map