{"version":3,"file":"useCompatFactory.js","sourceRoot":"","sources":["../../src/hooks/useCompatFactory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAyB;AACzB,oCAA4C;AAC5C,qDAAmD;AAEnD;IAAA;IAAiC,CAAC;IAAD,gCAAC;AAAD,CAAC,AAAlC,IAAkC;AAElC,SAAS,gCAAgC;IACvC,OAAO,IAAI,yBAAyB,EAAE,CAAA;AACxC,CAAC;AAEM,IAAM,gBAAgB,GAAG,UAC9B,OAAgB;IAEhB,IAAM,OAAO,GAAG,eAAK,CAAC,MAAM,CAAI,IAAI,CAAC,CAAA;IACrC,IAAM,KAAK,GAAG,eAAK,CAAC,MAAM,EAAoB,CAAA;IACxC,IAAA,KAAA,OAA0B,eAAK,CAAC,QAAQ,CAC5C,gCAAgC,CACjC,IAAA,EAFM,qBAAqB,QAE3B,CAAA;IACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QACpB,OAAO,CAAC,OAAO,GAAG,OAAO,EAAE,CAAA;KAC5B;IACD,yDAAyD;IACzD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;QAClB,KAAK,CAAC,OAAO,GAAG,IAAI,yBAAgB,CAAC;YACnC,IAAI,OAAO,CAAC,OAAO,EAAE;gBACnB,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;aAC1B;QACH,CAAC,CAAC,CAAA;QACF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;KAC1C;IAED,IAAA,iCAAe,EAAC;QACd,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;QACrB,OAAO;YACL,IAAI,OAAO,CAAC,OAAO,EAAE;gBACnB,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;gBACzB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAA;aACvB;QACH,CAAC,CAAA;IACH,CAAC,EAAE,EAAE,CAAC,CAAA;IACN,OAAO,OAAO,CAAC,OAAO,CAAA;AACxB,CAAC,CAAA;AA/BY,QAAA,gBAAgB,oBA+B5B","sourcesContent":["import React from 'react'\nimport { GarbageCollector } from '../shared'\nimport { useCompatEffect } from './useCompatEffect'\n\nclass ObjectToBeRetainedByReact {}\n\nfunction objectToBeRetainedByReactFactory() {\n  return new ObjectToBeRetainedByReact()\n}\n\nexport const useCompatFactory = <T extends { dispose: () => void }>(\n  factory: () => T\n): T => {\n  const instRef = React.useRef<T>(null)\n  const gcRef = React.useRef<GarbageCollector>()\n  const [objectRetainedByReact] = React.useState(\n    objectToBeRetainedByReactFactory\n  )\n  if (!instRef.current) {\n    instRef.current = factory()\n  }\n  //StrictMode/ConcurrentMode会导致组件无法正确触发UnMount，所以只能自己做垃圾回收\n  if (!gcRef.current) {\n    gcRef.current = new GarbageCollector(() => {\n      if (instRef.current) {\n        instRef.current.dispose()\n      }\n    })\n    gcRef.current.open(objectRetainedByReact)\n  }\n\n  useCompatEffect(() => {\n    gcRef.current.close()\n    return () => {\n      if (instRef.current) {\n        instRef.current.dispose()\n        instRef.current = null\n      }\n    }\n  }, [])\n  return instRef.current\n}\n"]}