{"version":3,"file":"shared.js","sourceRoot":"","sources":["../src/shared.ts"],"names":[],"mappings":"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","sourcesContent":["const toString = Object.prototype.toString\nconst isType =\n  <T>(type: string) =>\n  (obj: unknown): obj is T =>\n    toString.call(obj) === `[object ${type}]`\nexport const isFn = isType<(...args: any[]) => any>('Function')\nexport const isArr = Array.isArray || isType<unknown[]>('Array')\nexport const isPlainObj = isType<object>('Object')\nexport const isStr = isType<string>('String')\nexport const isBool = isType<boolean>('Boolean')\nexport const isNum = isType<number>('Number')\nexport const isObj = (val: unknown): val is object => typeof val === 'object'\nexport const isRegExp = isType<RegExp>('RegExp')\nexport const isNumberLike = (t: any) => {\n  return isNum(t) || /^(\\d+)(\\.\\d+)?$/.test(t)\n}\nconst isArray = isArr\nconst keyList = Object.keys\nconst hasProp = Object.prototype.hasOwnProperty\n\nexport const toArr = <T>(val: T | T[]): T[] =>\n  Array.isArray(val) ? val : val !== undefined ? [val] : []\nexport const isAssignable = (val: any) => {\n  return typeof val === 'object' || typeof val === 'function'\n}\nexport const isEqual = (a: any, b: any) => {\n  if (a === b) {\n    return true\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const arrA = isArray(a)\n    const arrB = isArray(b)\n    let i\n    let length\n    let key\n\n    if (arrA && arrB) {\n      length = a.length\n      if (length !== b.length) {\n        return false\n      }\n      for (i = length; i-- !== 0; ) {\n        if (!isEqual(a[i], b[i])) {\n          return false\n        }\n      }\n      return true\n    }\n\n    if (arrA !== arrB) {\n      return false\n    }\n\n    const keys = keyList(a)\n    length = keys.length\n\n    if (length !== keyList(b).length) {\n      return false\n    }\n\n    for (i = length; i-- !== 0; ) {\n      if (!hasProp.call(b, keys[i])) {\n        return false\n      }\n    }\n    for (i = length; i-- !== 0; ) {\n      key = keys[i]\n      if (!isEqual(a[key], b[key])) {\n        return false\n      }\n    }\n\n    return true\n  }\n  return a !== a && b !== b\n}\nexport const isSegmentEqual = (a: any, b: any) => {\n  a = typeof a === 'symbol' ? a : `${a}`\n  b = typeof b === 'symbol' ? b : `${b}`\n  return a === b\n}\n"]}