{"version":3,"file":"tokenizer.js","sourceRoot":"","sources":["../src/tokenizer.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Token,\n  nameTok,\n  colonTok,\n  dotTok,\n  starTok,\n  dbStarTok,\n  bangTok,\n  bracketLTok,\n  bracketRTok,\n  bracketDRTok,\n  expandTok,\n  parenLTok,\n  parenRTok,\n  commaTok,\n  eofTok,\n  ignoreTok,\n  braceLTok,\n  braceRTok,\n  bracketDLTok,\n} from './tokens'\nimport { bracketDContext, Context } from './contexts'\n\nconst nonASCIIWhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/\n\nconst fullCharCodeAtPos = (input: string, pos: number) => {\n  if (String.fromCharCode) return input.codePointAt(pos)\n  const code = input.charCodeAt(pos)\n  if (code <= 0xd7ff || code >= 0xe000) return code\n\n  const next = input.charCodeAt(pos + 1)\n  return (code << 10) + next - 0x35fdc00\n}\n\nconst isRewordCode = (code: number) =>\n  code === 42 ||\n  code === 46 ||\n  code === 33 ||\n  code === 91 ||\n  code === 93 ||\n  code === 40 ||\n  code === 41 ||\n  code === 44 ||\n  code === 58 ||\n  code === 126 ||\n  code === 123 ||\n  code === 125\n\nconst getError = (message?: string, props?: any) => {\n  const err = new Error(message)\n  Object.assign(err, props)\n  return err\n}\n\nconst slice = (string: string, start: number, end: number) => {\n  let str = ''\n  for (let i = start; i < end; i++) {\n    const ch = string.charAt(i)\n    if (ch !== '\\\\') {\n      str += ch\n    }\n  }\n  return str\n}\n\nexport class Tokenizer {\n  public input: string\n  public state: {\n    context: Context[]\n    type: Token\n    pos: number\n    value?: any\n  }\n  public type_: Token\n  constructor(input: string) {\n    this.input = input\n    this.state = {\n      context: [],\n      type: null,\n      pos: 0,\n    }\n    this.type_ = null\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1]\n  }\n\n  includesContext(context: Context) {\n    for (let len = this.state.context.length - 1; len >= 0; len--) {\n      if (this.state.context[len] === context) {\n        return true\n      }\n    }\n    return false\n  }\n\n  unexpect(type?: Token) {\n    type = type || this.state.type\n    return getError(\n      `Unexpect token \"${type.flag}\" in ${this.state.pos} char.`,\n      {\n        pos: this.state.pos,\n      }\n    )\n  }\n\n  expectNext(type?: Token, next?: Token) {\n    if (type && type.expectNext) {\n      if (next && !type.expectNext.call(this, next)) {\n        throw getError(\n          `Unexpect token \"${next.flag}\" token should not be behind \"${type.flag}\" token.(${this.state.pos}th char)`,\n          {\n            pos: this.state.pos,\n          }\n        )\n      }\n    }\n  }\n\n  expectPrev(type?: Token, prev?: Token) {\n    if (type && type.expectPrev) {\n      if (prev && !type.expectPrev.call(this, prev)) {\n        throw getError(\n          `Unexpect token \"${type.flag}\" should not be behind \"${prev.flag}\"(${this.state.pos}th char).`,\n          {\n            pos: this.state.pos,\n          }\n        )\n      }\n    }\n  }\n\n  match(type?: Token) {\n    return this.state.type === type\n  }\n\n  skipSpace() {\n    if (this.curContext() === bracketDContext) return\n    loop: while (this.state.pos < this.input.length) {\n      const ch = this.input.charCodeAt(this.state.pos)\n      switch (ch) {\n        case 32:\n        case 160:\n          ++this.state.pos\n          break\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos\n          break\n        default:\n          if (\n            (ch > 8 && ch < 14) ||\n            (ch >= 5760 && nonASCIIWhitespace.test(String.fromCharCode(ch)))\n          ) {\n            ++this.state.pos\n          } else {\n            break loop\n          }\n      }\n    }\n  }\n\n  next() {\n    this.type_ = this.state.type\n    if (this.input.length <= this.state.pos) {\n      return this.finishToken(eofTok)\n    }\n    this.skipSpace()\n    this.readToken(\n      this.getCode(),\n      this.state.pos > 0 ? this.getCode(this.state.pos - 1) : -Infinity\n    )\n  }\n\n  getCode(pos = this.state.pos) {\n    return fullCharCodeAtPos(this.input, pos)\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  readKeyWord() {\n    let startPos = this.state.pos,\n      string = ''\n    while (true) {\n      const code = this.getCode()\n      const prevCode = this.getCode(this.state.pos - 1)\n      if (this.input.length === this.state.pos) {\n        string = slice(this.input, startPos, this.state.pos + 1)\n        break\n      }\n      if (!isRewordCode(code) || prevCode === 92) {\n        if (\n          code === 32 ||\n          code === 160 ||\n          code === 10 ||\n          code === 8232 ||\n          code === 8233\n        ) {\n          string = slice(this.input, startPos, this.state.pos)\n          break\n        }\n        if (code === 13 && this.input.charCodeAt(this.state.pos + 1) === 10) {\n          string = slice(this.input, startPos, this.state.pos)\n          break\n        }\n        if (\n          (code > 8 && code < 14) ||\n          (code >= 5760 && nonASCIIWhitespace.test(String.fromCharCode(code)))\n        ) {\n          string = slice(this.input, startPos, this.state.pos)\n          break\n        }\n        this.state.pos++\n      } else {\n        string = slice(this.input, startPos, this.state.pos)\n        break\n      }\n    }\n\n    this.finishToken(nameTok, string)\n  }\n\n  readIgnoreString() {\n    let startPos = this.state.pos,\n      prevCode,\n      string = ''\n    while (true) {\n      const code = this.getCode()\n      if (this.state.pos >= this.input.length) break\n      if ((code === 91 || code === 93) && prevCode === 92) {\n        this.state.pos++\n        prevCode = ''\n      } else if (code == 93 && prevCode === 93) {\n        string = this.input\n          .slice(startPos, this.state.pos - 1)\n          .replace(/\\\\([\\[\\]])/g, '$1')\n        this.state.pos++\n        break\n      } else {\n        this.state.pos++\n        prevCode = code\n      }\n    }\n\n    this.finishToken(ignoreTok, string)\n    this.finishToken(bracketDRTok)\n  }\n\n  finishToken(type: Token, value?: any) {\n    const preType = this.state.type\n    this.state.type = type\n    if (value !== undefined) this.state.value = value\n    this.expectNext(preType, type)\n    this.expectPrev(type, preType)\n    if (type.updateContext) {\n      type.updateContext.call(this, preType)\n    }\n  }\n\n  readToken(code: number, prevCode: number) {\n    if (prevCode === 92) {\n      return this.readKeyWord()\n    }\n    if (this.input.length <= this.state.pos) {\n      this.finishToken(eofTok)\n    } else if (this.curContext() === bracketDContext) {\n      this.readIgnoreString()\n    } else if (code === 123) {\n      this.state.pos++\n      this.finishToken(braceLTok)\n    } else if (code === 125) {\n      this.state.pos++\n      this.finishToken(braceRTok)\n    } else if (code === 42) {\n      this.state.pos++\n      if (this.getCode() === 42) {\n        this.state.pos++\n        return this.finishToken(dbStarTok)\n      }\n      this.finishToken(starTok)\n    } else if (code === 33) {\n      this.state.pos++\n      this.finishToken(bangTok)\n    } else if (code === 46) {\n      this.state.pos++\n      this.finishToken(dotTok)\n    } else if (code === 91) {\n      this.state.pos++\n      if (this.getCode() === 91) {\n        this.state.pos++\n        return this.finishToken(bracketDLTok)\n      }\n      this.finishToken(bracketLTok)\n    } else if (code === 126) {\n      this.state.pos++\n      this.finishToken(expandTok)\n    } else if (code === 93) {\n      this.state.pos++\n      this.finishToken(bracketRTok)\n    } else if (code === 40) {\n      this.state.pos++\n      this.finishToken(parenLTok)\n    } else if (code === 41) {\n      this.state.pos++\n      this.finishToken(parenRTok)\n    } else if (code === 44) {\n      this.state.pos++\n      this.finishToken(commaTok)\n    } else if (code === 58) {\n      this.state.pos++\n      this.finishToken(colonTok)\n    } else {\n      this.readKeyWord()\n    }\n  }\n}\n"]}