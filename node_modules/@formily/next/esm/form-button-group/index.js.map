{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-button-group/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * 1. FormItem网格布局\n * 2. 居中，居右，居左布局\n * 3. 行内布局\n * 4. 吸底布局\n */\nimport React, { useRef, useLayoutEffect, useState } from 'react'\nimport StickyBox from 'react-sticky-box'\nimport { ReactFC } from '@formily/react'\nimport { Space, ISpaceProps } from '../space'\nimport { BaseItem, IFormItemProps } from '../form-item'\nimport { usePrefixCls } from '../__builtins__'\nimport cls from 'classnames'\ninterface IStickyProps extends React.ComponentProps<typeof StickyBox> {\n  align?: React.CSSProperties['textAlign']\n}\n\ntype IFormButtonGroupProps = Omit<ISpaceProps, 'align' | 'size'> & {\n  align?: React.CSSProperties['textAlign']\n  gutter?: number\n}\n\ntype ComposedButtonGroup = ReactFC<IFormButtonGroupProps> & {\n  Sticky: ReactFC<IStickyProps>\n  FormItem: ReactFC<\n    IFormItemProps & {\n      gutter?: number\n    }\n  >\n}\n\nfunction getInheritedBackgroundColor(el: HTMLElement) {\n  // get default style for current browser\n  let defaultStyle = getDefaultBackground() // typically \"rgba(0, 0, 0, 0)\"\n\n  // get computed color for el\n  let backgroundColor = window.getComputedStyle(el).backgroundColor\n\n  // if we got a real value, return it\n  if (backgroundColor != defaultStyle) return backgroundColor\n\n  // if we've reached the top parent el without getting an explicit color, return default\n  if (!el.parentElement) return defaultStyle\n\n  // otherwise, recurse and try again on parent element\n  return getInheritedBackgroundColor(el.parentElement)\n}\n\nfunction getDefaultBackground() {\n  // have to add to the document in order to use getComputedStyle\n  let div = document.createElement('div')\n  document.head.appendChild(div)\n  let bg = window.getComputedStyle(div).backgroundColor\n  document.head.removeChild(div)\n  return bg\n}\n\nexport const FormButtonGroup: ComposedButtonGroup = ({\n  align,\n  gutter,\n  ...props\n}) => {\n  const prefixCls = usePrefixCls('formily-button-group')\n  return (\n    <Space\n      {...props}\n      size={gutter}\n      className={cls(prefixCls, props.className)}\n      style={{\n        ...props.style,\n        justifyContent:\n          align === 'left'\n            ? 'flex-start'\n            : align === 'right'\n            ? 'flex-end'\n            : 'center',\n        display: 'flex',\n      }}\n    >\n      {props.children}\n    </Space>\n  )\n}\n\nFormButtonGroup.defaultProps = {\n  align: 'left',\n}\n\nFormButtonGroup.FormItem = ({ gutter, ...props }) => {\n  return (\n    <BaseItem\n      {...props}\n      label=\" \"\n      style={{\n        margin: 0,\n        padding: 0,\n        ...props.style,\n        width: '100%',\n      }}\n      colon={false}\n    >\n      {props.children?.['length'] ? (\n        <Space size={gutter}>{props.children}</Space>\n      ) : (\n        props.children\n      )}\n    </BaseItem>\n  )\n}\n\nFormButtonGroup.Sticky = ({ align, ...props }) => {\n  const ref = useRef()\n  const [color, setColor] = useState('transparent')\n  const prefixCls = usePrefixCls('formily-button-group')\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      const computed = getInheritedBackgroundColor(ref.current)\n      if (computed !== color) {\n        setColor(computed)\n      }\n    }\n  })\n  return (\n    <StickyBox\n      {...props}\n      className={cls(`${prefixCls}-sticky`, props.className)}\n      style={{\n        backgroundColor: color,\n        ...props.style,\n      }}\n      bottom\n    >\n      <div\n        ref={ref}\n        className={`${prefixCls}-sticky-inner`}\n        style={{\n          ...props.style,\n          justifyContent:\n            align === 'left'\n              ? 'flex-start'\n              : align === 'right'\n              ? 'flex-end'\n              : 'center',\n        }}\n      >\n        {props.children}\n      </div>\n    </StickyBox>\n  )\n}\n\nFormButtonGroup.Sticky.defaultProps = {\n  align: 'left',\n}\n\nexport default FormButtonGroup\n"]}