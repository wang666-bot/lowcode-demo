{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/array-cards/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card } from '@alifd/next'\nimport { CardProps } from '@alifd/next/lib/card'\nimport { ArrayField } from '@formily/core'\nimport {\n  useField,\n  observer,\n  useFieldSchema,\n  RecursionField,\n} from '@formily/react'\nimport { ISchema } from '@formily/json-schema'\nimport { usePrefixCls } from '../__builtins__'\nimport { ArrayBase, ArrayBaseMixins, IArrayBaseProps } from '../array-base'\nimport cls from 'classnames'\n\ntype ComposedArrayCards = React.FC<\n  React.PropsWithChildren<CardProps & IArrayBaseProps>\n> &\n  ArrayBaseMixins\n\nconst isAdditionComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf?.('Addition') > -1\n}\n\nconst isIndexComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf?.('Index') > -1\n}\n\nconst isRemoveComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf?.('Remove') > -1\n}\n\nconst isCopyComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf?.('Copy') > -1\n}\n\nconst isMoveUpComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf?.('MoveUp') > -1\n}\n\nconst isMoveDownComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf?.('MoveDown') > -1\n}\n\nconst isOperationComponent = (schema: ISchema) => {\n  return (\n    isAdditionComponent(schema) ||\n    isRemoveComponent(schema) ||\n    isCopyComponent(schema) ||\n    isMoveDownComponent(schema) ||\n    isMoveUpComponent(schema)\n  )\n}\n\nconst Empty = () => {\n  return (\n    <div className=\"next-empty\">\n      <div className=\"next-empty-image\">\n        <svg\n          className=\"ant-empty-img-default\"\n          width=\"184\"\n          height=\"152\"\n          viewBox=\"0 0 184 152\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <g transform=\"translate(24 31.67)\">\n              <ellipse\n                className=\"ant-empty-img-default-ellipse\"\n                cx=\"67.797\"\n                cy=\"106.89\"\n                rx=\"67.797\"\n                ry=\"12.668\"\n              ></ellipse>\n              <path\n                className=\"ant-empty-img-default-path-1\"\n                d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n              ></path>\n              <path\n                className=\"ant-empty-img-default-path-2\"\n                d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\n                transform=\"translate(13.56)\"\n              ></path>\n              <path\n                className=\"ant-empty-img-default-path-3\"\n                d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n              ></path>\n              <path\n                className=\"ant-empty-img-default-path-4\"\n                d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n              ></path>\n            </g>\n            <path\n              className=\"ant-empty-img-default-path-5\"\n              d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n            ></path>\n            <g\n              className=\"ant-empty-img-default-g\"\n              transform=\"translate(149.65 15.383)\"\n            >\n              <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\"></ellipse>\n              <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\"></path>\n            </g>\n          </g>\n        </svg>\n      </div>\n    </div>\n  )\n}\n\nexport const ArrayCards: ComposedArrayCards = observer((props) => {\n  const field = useField<ArrayField>()\n  const schema = useFieldSchema()\n  const dataSource = Array.isArray(field.value) ? field.value : []\n  const prefixCls = usePrefixCls('formily-array-cards', props)\n  const { onAdd, onCopy, onRemove, onMoveDown, onMoveUp } = props\n  const renderItems = () => {\n    return dataSource?.map((item, index) => {\n      const items = Array.isArray(schema.items)\n        ? schema.items[index] || schema.items[0]\n        : schema.items\n      const title = (\n        <span>\n          <RecursionField\n            schema={items}\n            name={index}\n            filterProperties={(schema) => {\n              if (!isIndexComponent(schema)) return false\n              return true\n            }}\n            onlyRenderProperties\n          />\n          {props.title || field.title}\n        </span>\n      )\n      const extra = (\n        <span>\n          <RecursionField\n            schema={items}\n            name={index}\n            filterProperties={(schema) => {\n              if (!isOperationComponent(schema)) return false\n              return true\n            }}\n            onlyRenderProperties\n          />\n          {props.extra}\n        </span>\n      )\n      const content = (\n        <RecursionField\n          schema={items}\n          name={index}\n          filterProperties={(schema) => {\n            if (isIndexComponent(schema)) return false\n            if (isOperationComponent(schema)) return false\n            return true\n          }}\n        />\n      )\n      return (\n        <ArrayBase.Item\n          key={index}\n          index={index}\n          record={() => field.value?.[index]}\n        >\n          <Card\n            contentHeight=\"auto\"\n            {...props}\n            onChange={() => {}}\n            className={cls(`${prefixCls}-item`, props.className)}\n            title={title}\n            extra={extra}\n          >\n            {content}\n          </Card>\n        </ArrayBase.Item>\n      )\n    })\n  }\n\n  const renderAddition = () => {\n    return schema.reduceProperties((addition, schema, key) => {\n      if (isAdditionComponent(schema)) {\n        return <RecursionField schema={schema} name={key} />\n      }\n      return addition\n    }, null)\n  }\n\n  const renderEmpty = () => {\n    if (dataSource?.length) return\n    return (\n      <Card\n        contentHeight=\"auto\"\n        {...props}\n        className={cls(`${prefixCls}-item`, props.className)}\n        title={props.title || field.title}\n        onChange={() => {}}\n      >\n        <Empty />\n      </Card>\n    )\n  }\n\n  return (\n    <ArrayBase\n      onAdd={onAdd}\n      onCopy={onCopy}\n      onRemove={onRemove}\n      onMoveUp={onMoveUp}\n      onMoveDown={onMoveDown}\n    >\n      {renderEmpty()}\n      {renderItems()}\n      {renderAddition()}\n    </ArrayBase>\n  )\n})\n\nArrayCards.displayName = 'ArrayCards'\n\nArrayBase.mixin(ArrayCards)\n\nexport default ArrayCards\n"]}