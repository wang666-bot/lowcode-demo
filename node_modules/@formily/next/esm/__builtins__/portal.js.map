{"version":3,"file":"portal.js","sourceRoot":"","sources":["../../src/__builtins__/portal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AACvC,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAA;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAC9C,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAE,MAAM,IAAI,WAAW,EAAE,OAAO,IAAI,YAAY,EAAE,MAAM,UAAU,CAAA;AAKzE,IAAM,SAAS,GAAG,UAAU,CAAC,IAAI,GAAG,EAAoC,CAAC,CAAA;AAEzE,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,EAAmB;IACtD,IAAM,MAAM,GAAG,UAAC,KAA4C;QAC1D,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;YACxC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;SAC9B;QAED,OAAO,CACL,oBAAC,QAAQ;YACN,KAAK,CAAC,QAAQ;YACf,oBAAC,QAAQ,QACN;gBACC,IAAI,CAAC,KAAK,CAAC,EAAE;oBAAE,OAAO,IAAI,CAAA;gBAC1B,IAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;gBACtC,IAAI,MAAM;oBAAE,OAAO,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA;gBACtD,OAAO,IAAI,CAAA;YACb,CAAC,CACQ,CACF,CACZ,CAAA;IACH,CAAC,CAAA;IACD,MAAM,CAAC,YAAY,GAAG;QACpB,EAAE,IAAA;KACH,CAAA;IACD,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,MAAM,UAAU,gBAAgB,CAC9B,IAAiB,EACjB,EAAU;IAEV,SAAS,MAAM,CAAC,QAAkB;QAChC,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACrB,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,EAAI,CAAC,CAAA;SAChC;aAAM,IAAI,IAAI,EAAE;YACf,WAAW,CAAC,oBAAC,QAAQ,QAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,EAAI,CAAY,EAAE,IAAI,CAAC,CAAA;SACvD;IACH,CAAC;IAED,SAAS,OAAO;;QACd,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACrB,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;SACxB;QACD,IAAI,IAAI,EAAE;YACR,IAAM,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;YACxC,IAAI,aAAa,IAAI,IAAI,CAAC,UAAU,EAAE;gBACpC,MAAA,IAAI,CAAC,UAAU,0CAAE,WAAW,CAAC,IAAI,CAAC,CAAA;aACnC;SACF;IACH,CAAC;IAED,OAAO;QACL,MAAM,QAAA;QACN,OAAO,SAAA;KACR,CAAA;AACH,CAAC","sourcesContent":["import React, { Fragment } from 'react'\nimport { createPortal } from 'react-dom'\nimport { observable } from '@formily/reactive'\nimport { Observer } from '@formily/react'\nimport { render as reactRender, unmount as reactUnmount } from './render'\nexport interface IPortalProps {\n  id?: string | symbol\n}\n\nconst PortalMap = observable(new Map<string | symbol, React.ReactNode>())\n\nexport const createPortalProvider = (id: string | symbol) => {\n  const Portal = (props: React.PropsWithChildren<IPortalProps>) => {\n    if (props.id && !PortalMap.has(props.id)) {\n      PortalMap.set(props.id, null)\n    }\n\n    return (\n      <Fragment>\n        {props.children}\n        <Observer>\n          {() => {\n            if (!props.id) return null\n            const portal = PortalMap.get(props.id)\n            if (portal) return createPortal(portal, document.body)\n            return null\n          }}\n        </Observer>\n      </Fragment>\n    )\n  }\n  Portal.defaultProps = {\n    id,\n  }\n  return Portal\n}\n\nexport function createPortalRoot<T extends React.ReactNode>(\n  host: HTMLElement,\n  id: string\n) {\n  function render(renderer?: () => T) {\n    if (PortalMap.has(id)) {\n      PortalMap.set(id, renderer?.())\n    } else if (host) {\n      reactRender(<Fragment>{renderer?.()}</Fragment>, host)\n    }\n  }\n\n  function unmount() {\n    if (PortalMap.has(id)) {\n      PortalMap.set(id, null)\n    }\n    if (host) {\n      const unmountResult = reactUnmount(host)\n      if (unmountResult && host.parentNode) {\n        host.parentNode?.removeChild(host)\n      }\n    }\n  }\n\n  return {\n    render,\n    unmount,\n  }\n}\n"]}