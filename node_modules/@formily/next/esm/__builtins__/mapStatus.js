var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
export var mapStatus = function (props, field) {
    var takeStatus = function () {
        var _a, _b, _c;
        if (!field)
            return;
        if (field.loading || field.validating)
            return 'loading';
        if ((_a = field.selfErrors) === null || _a === void 0 ? void 0 : _a.length)
            return 'error';
        if ((_b = field.selfWarnings) === null || _b === void 0 ? void 0 : _b.length)
            return 'warning';
        return (_c = field.decoratorProps) === null || _c === void 0 ? void 0 : _c.feedbackStatus;
    };
    var takeState = function (state) {
        if (state === 'validating' || state === 'pending')
            return 'loading';
        return state;
    };
    return __assign(__assign({}, props), { state: takeState(props.state) || takeStatus() });
};
//# sourceMappingURL=mapStatus.js.map