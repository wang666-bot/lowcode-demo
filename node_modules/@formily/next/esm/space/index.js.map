{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/space/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAA;AAC9C,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAA;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAY9C,IAAM,SAAS,GAAG;IAChB,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;CACV,CAAA;AAED,MAAM,CAAC,IAAM,KAAK,GAAmD,UAAC,EAKrE;;IAJC,IAAA,SAAS,eAAA,EACT,IAAI,UAAA,EACJ,KAAK,WAAA,EACF,KAAK,cAJ4D,8BAKrE,CADS;IAER,IAAM,MAAM,GAAG,aAAa,EAAE,CAAA;IAC9B,IAAM,MAAM,GAAG,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;IAC3C,IAAM,YAAY,GAAG;QACnB,IAAI,SAAS,KAAK,YAAY,EAAE;YAC9B,OAAO,KAAK,CAAA;SACb;aAAM;YACL,OAAO,QAAQ,CAAA;SAChB;IACH,CAAC,CAAA;IACD,IAAM,QAAQ,GAAG;QACf,IAAI,KAAK,KAAK,OAAO,EAAE;YACrB,OAAO,YAAY,CAAA;SACpB;aAAM,IAAI,KAAK,KAAK,KAAK,EAAE;YAC1B,OAAO,UAAU,CAAA;SAClB;aAAM;YACL,OAAO,QAAQ,CAAA;SAChB;IACH,CAAC,CAAA;IACD,IAAM,KAAK,GAAG,MAAA,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,mCAAI,CAAC,CAAA;IAC3C,IAAM,MAAM,GAAG,QAAQ,EAAE,CAAA;IACzB,OAAO,CACL,oBAAC,GAAG,eACE,KAAK,IACT,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,KAAK,aACH,UAAU,EAAE,MAAM,EAClB,OAAO,EAAE,aAAa,IACnB,KAAK,CAAC,KAAK,GAEhB,KAAK,EAAE,MAAM,EACb,SAAS,EAAE,YAAY,EAAE,KAExB,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,CAClE,6BAAK,SAAS,EAAE,UAAG,MAAM,UAAO,EAAE,GAAG,EAAE,KAAK,IACzC,KAAK,CACF,CACP,EAJmE,CAInE,CAAC,CACE,CACP,CAAA;AACH,CAAC,CAAA;AAED,KAAK,CAAC,YAAY,GAAG;IACnB,SAAS,EAAE,YAAY;IACvB,KAAK,EAAE,OAAO;CACf,CAAA;AAED,eAAe,KAAK,CAAA","sourcesContent":["import React from 'react'\nimport { Box } from '@alifd/next'\nimport { isNumberLike } from '@formily/shared'\nimport { toArray, usePrefixCls } from '../__builtins__'\nimport { useFormLayout } from '../form-layout'\nexport interface ISpaceProps {\n  prefix?: string\n  className?: string\n  style?: React.CSSProperties\n  size?: number | 'small' | 'large' | 'middle'\n  direction?: 'horizontal' | 'vertical'\n  // No `stretch` since many components do not support that.\n  align?: 'start' | 'end' | 'center' | 'baseline'\n  wrap?: boolean\n}\n\nconst spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24,\n}\n\nexport const Space: React.FC<React.PropsWithChildren<ISpaceProps>> = ({\n  direction,\n  size,\n  align,\n  ...props\n}) => {\n  const layout = useFormLayout()\n  const prefix = usePrefixCls('space', props)\n  const getDirection = () => {\n    if (direction === 'horizontal') {\n      return 'row'\n    } else {\n      return 'column'\n    }\n  }\n  const getAlign = () => {\n    if (align === 'start') {\n      return 'flex-start'\n    } else if (align === 'end') {\n      return 'flex-end'\n    } else {\n      return 'center'\n    }\n  }\n  const _size = size ?? layout?.spaceGap ?? 8\n  const _align = getAlign()\n  return (\n    <Box\n      {...props}\n      spacing={isNumberLike(_size) ? _size : spaceSize[_size] || 8}\n      style={{\n        alignItems: _align,\n        display: 'inline-flex',\n        ...props.style,\n      }}\n      align={_align}\n      direction={getDirection()}\n    >\n      {toArray(props.children, { keepEmpty: true }).map((child, index) => (\n        <div className={`${prefix}-item`} key={index}>\n          {child}\n        </div>\n      ))}\n    </Box>\n  )\n}\n\nSpace.defaultProps = {\n  direction: 'horizontal',\n  align: 'start',\n}\n\nexport default Space\n"]}