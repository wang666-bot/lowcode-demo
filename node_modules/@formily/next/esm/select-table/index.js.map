{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/select-table/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport {\n  observer,\n  useFieldSchema,\n  useField,\n  Schema,\n  RecursionField,\n} from '@formily/react'\nimport cls from 'classnames'\nimport { GeneralField, FieldDisplayTypes } from '@formily/core'\nimport { isArr, isBool, isFn } from '@formily/shared'\nimport { Search, Table } from '@alifd/next'\nimport { TableProps, ColumnProps } from '@alifd/next/types/table'\nimport { SearchProps } from '@alifd/next/types/search'\nimport { useFilterOptions } from './useFilterOptions'\nimport { useFlatOptions } from './useFlatOptions'\nimport { useSize } from './useSize'\nimport { useTitleAddon } from './useTitleAddon'\nimport { useCheckSlackly, getIndeterminate } from './useCheckSlackly'\nimport { getUISelected, getOutputData } from './utils'\nimport { usePrefixCls } from '../__builtins__'\n\ninterface ObservableColumnSource {\n  field: GeneralField\n  columnProps: ColumnProps\n  schema: Schema\n  display: FieldDisplayTypes\n  name: string\n}\n\ntype IFilterOption = boolean | ((option: any, keyword: string) => boolean)\n\ntype IFilterSort = (optionA: any, optionB: any) => number\n\nexport interface ISelectTableColumnProps extends ColumnProps {\n  key: React.ReactText\n}\n\nexport interface ISelectTableProps\n  extends Omit<TableProps, 'primaryKey' | 'onChange'> {\n  mode?: 'multiple' | 'single'\n  dataSource?: any[]\n  optionAsValue?: boolean\n  valueType?: 'all' | 'parent' | 'child' | 'path'\n  showSearch?: boolean\n  searchProps?: SearchProps\n  primaryKey?: string | ((record: any) => string)\n  filterOption?: IFilterOption\n  filterSort?: IFilterSort\n  onSearch?: (keyword: string) => void\n  onChange?: (value: any, options: any) => void\n  value?: any\n  rowSelection?: TableProps['rowSelection'] & {\n    checkStrictly?: boolean\n  }\n}\n\ntype ComposedSelectTable = React.FC<\n  React.PropsWithChildren<ISelectTableProps>\n> & {\n  Column?: React.FC<React.PropsWithChildren<ISelectTableColumnProps>>\n}\n\nconst isColumnComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Column') > -1\n}\n\nconst useSources = () => {\n  const arrayField = useField()\n  const schema = useFieldSchema()\n  const parseSources = (schema: Schema): ObservableColumnSource[] => {\n    if (isColumnComponent(schema)) {\n      if (!schema['x-component-props']?.['dataIndex'] && !schema['name'])\n        return []\n      const name = schema['x-component-props']?.['dataIndex'] || schema['name']\n      const field = arrayField.query(arrayField.address.concat(name)).take()\n      const columnProps =\n        field?.component?.[1] || schema['x-component-props'] || {}\n      const display = field?.display || schema['x-display']\n      return [\n        {\n          name,\n          display,\n          field,\n          schema,\n          columnProps: {\n            title: field?.title || columnProps.title,\n            ...columnProps,\n          },\n        },\n      ]\n    } else if (schema.properties) {\n      return schema.reduceProperties((buf, schema) => {\n        return buf.concat(parseSources(schema))\n      }, [])\n    }\n  }\n\n  const parseArrayItems = (schema: Schema['items']) => {\n    if (!schema) return []\n    const sources: ObservableColumnSource[] = []\n    const items = isArr(schema) ? schema : [schema]\n    return items.reduce((columns, schema) => {\n      const item = parseSources(schema)\n      if (item) {\n        return columns.concat(item)\n      }\n      return columns\n    }, sources)\n  }\n\n  const validSchema = (\n    schema?.type === 'array' && schema?.items ? schema.items : schema\n  ) as Schema\n\n  return parseArrayItems(validSchema)\n}\n\nconst useColumns = (\n  sources: ObservableColumnSource[]\n): TableProps['columns'] => {\n  return sources.reduce((buf, { name, columnProps, schema, display }, key) => {\n    if (display !== 'visible') return buf\n    if (!isColumnComponent(schema)) return buf\n    return buf.concat({\n      ...columnProps,\n      key,\n      dataIndex: name,\n    })\n  }, [])\n}\n\nconst addPrimaryKey = (dataSource, rowKey, primaryKey) =>\n  dataSource.map((item) => {\n    const children = isArr(item.children)\n      ? addPrimaryKey(item.children, rowKey, primaryKey)\n      : {}\n    return {\n      ...item,\n      ...children,\n      [primaryKey]: rowKey(item),\n    }\n  })\n\nexport const SelectTable: ComposedSelectTable = observer((props) => {\n  const {\n    mode,\n    dataSource: propsDataSource,\n    optionAsValue,\n    valueType,\n    showSearch,\n    filterOption,\n    filterSort,\n    onSearch,\n    searchProps,\n    className,\n    value,\n    onChange,\n    rowSelection,\n    primaryKey: rowKey,\n    ...otherTableProps\n  } = props\n  const prefixCls = usePrefixCls('formily-select-table', props)\n  const [searchValue, setSearchValue] = useState<string>()\n  const field = useField() as any\n  const loading = isBool(props.loading) ? props.loading : field.loading\n  const disabled = field.disabled\n  const readOnly = field.readOnly\n  const readPretty = field.readPretty\n  const { searchSize, tableSize } = useSize(\n    field.decoratorProps?.size,\n    searchProps?.size,\n    props?.size\n  )\n  const primaryKey = isFn(rowKey) ? '__formily_key__' : rowKey\n  const sources = useSources()\n  const columns = useColumns(sources)\n\n  // dataSource\n  let dataSource = isArr(propsDataSource) ? propsDataSource : field.dataSource\n  dataSource = isFn(rowKey)\n    ? addPrimaryKey(dataSource, rowKey, primaryKey)\n    : dataSource\n\n  // Filter dataSource By Search\n  const filteredDataSource = useFilterOptions(\n    dataSource,\n    searchValue,\n    filterOption,\n    rowSelection?.checkStrictly\n  )\n\n  // Order dataSource By filterSort\n  const orderedFilteredDataSource = useMemo(() => {\n    if (!filterSort) {\n      return filteredDataSource\n    }\n    return [...filteredDataSource].sort((a, b) => filterSort(a, b))\n  }, [filteredDataSource, filterSort])\n\n  const flatDataSource = useFlatOptions(dataSource)\n  const flatFilteredDataSource = useFlatOptions(filteredDataSource)\n\n  // 分页或异步查询时，dataSource会丢失已选数据，配置optionAsValue则无法获取已选数据，需要进行合并\n  const getWholeDataSource = () => {\n    if (optionAsValue && mode === 'multiple' && value?.length) {\n      const map = new Map()\n      const arr = [...flatDataSource, ...value]\n      arr.forEach((item) => {\n        if (!map.has(item[primaryKey])) {\n          map.set(item[primaryKey], item)\n        }\n      })\n      return [...map.values()]\n    }\n    return flatDataSource\n  }\n\n  // selected keys for Table UI\n  const selected = getUISelected(\n    value,\n    flatDataSource,\n    primaryKey,\n    valueType,\n    optionAsValue,\n    mode,\n    rowSelection?.checkStrictly,\n    rowKey\n  )\n\n  // readPretty Value\n  const readPrettyDataSource = useFilterOptions(\n    orderedFilteredDataSource,\n    selected,\n    (value, item) => value.includes(item[primaryKey])\n  )\n\n  const onInnerSearch = (searchText) => {\n    const formatted = (searchText || '').trim()\n    setSearchValue(searchText)\n    onSearch?.(formatted)\n  }\n\n  const onInnerChange = (selectedRowKeys: any[]) => {\n    if (readOnly) {\n      return\n    }\n    // 筛选后onChange默认的records数据不完整，此处需使用完整数据过滤\n    const wholeRecords = getWholeDataSource().filter((item) =>\n      selectedRowKeys.includes(item?.[primaryKey])\n    )\n\n    const { outputValue, outputOptions } = getOutputData(\n      selectedRowKeys,\n      wholeRecords,\n      dataSource,\n      primaryKey,\n      valueType,\n      optionAsValue,\n      mode,\n      rowSelection?.checkStrictly\n    )\n\n    onChange?.(outputValue, outputOptions)\n  }\n\n  const onRowClick = (record) => {\n    if (readPretty || disabled || readOnly || record?.disabled) {\n      return\n    }\n    const selectedRowKey = record?.[primaryKey]\n    const isSelected = selected?.includes(selectedRowKey)\n    let selectedRowKeys = []\n    if (mode === 'single') {\n      selectedRowKeys = [selectedRowKey]\n    } else {\n      if (isSelected) {\n        selectedRowKeys = selected.filter((item) => item !== selectedRowKey)\n      } else {\n        selectedRowKeys = [...selected, selectedRowKey]\n      }\n    }\n    if (rowSelection?.checkStrictly !== false) {\n      onInnerChange(selectedRowKeys)\n    } else {\n      onSlacklyChange(selectedRowKeys)\n    }\n  }\n\n  // TreeData SlacklyChange\n  const onSlacklyChange = (currentSelected: any[]) => {\n    let { selectedRowKeys } = useCheckSlackly(\n      currentSelected,\n      selected,\n      flatDataSource,\n      flatFilteredDataSource,\n      primaryKey,\n      rowSelection?.checkStrictly\n    )\n    onInnerChange(selectedRowKeys)\n  }\n\n  // Table All Checkbox\n  const titleAddon = useTitleAddon(\n    selected,\n    flatDataSource,\n    flatFilteredDataSource,\n    primaryKey,\n    mode,\n    disabled,\n    readOnly,\n    rowSelection?.checkStrictly,\n    onInnerChange\n  )\n\n  return (\n    <div className={prefixCls}>\n      {showSearch ? (\n        <Search\n          {...searchProps}\n          className={cls(`${prefixCls}-search`, searchProps?.className)}\n          style={{ width: '100%', ...searchProps?.style }}\n          onSearch={onInnerSearch}\n          onChange={onInnerSearch}\n          disabled={disabled}\n          readOnly={readOnly}\n          size={searchSize}\n          buttonProps={{ ...searchProps?.buttonProps, loading }} // fusion\n        />\n      ) : null}\n      <Table\n        {...otherTableProps}\n        className={cls(`${prefixCls}-table`, className)}\n        dataSource={\n          readPretty ? readPrettyDataSource : orderedFilteredDataSource\n        }\n        rowSelection={\n          readPretty\n            ? undefined\n            : {\n                ...rowSelection,\n                ...titleAddon,\n                getProps: (record, index) => ({\n                  ...(rowSelection?.getProps?.(record, index) as any),\n                  ...(rowSelection?.checkStrictly !== false\n                    ? {}\n                    : {\n                        indeterminate: getIndeterminate(\n                          record,\n                          flatDataSource,\n                          selected,\n                          primaryKey\n                        ),\n                      }), // 父子关联模式indeterminate值\n                  disabled: disabled || record?.disabled,\n                }), // fusion\n                selectedRowKeys: selected,\n                onChange:\n                  rowSelection?.checkStrictly !== false\n                    ? onInnerChange\n                    : onSlacklyChange,\n                mode,\n              }\n        }\n        columns={props.columns || columns}\n        primaryKey={primaryKey}\n        loading={loading}\n        size={tableSize}\n        onRowClick={(record, index, e) => {\n          // fusion\n          onRowClick(record)\n          props.onRowClick?.(record, index, e)\n        }}\n      >\n        {''}\n      </Table>\n      {sources.map((column, key) => {\n        //专门用来承接对Column的状态管理\n        if (!isColumnComponent(column.schema)) return\n        return React.createElement(RecursionField, {\n          name: column.name,\n          schema: column.schema,\n          onlyRenderSelf: true,\n          key,\n        })\n      })}\n    </div>\n  )\n})\n\nconst TableColumn: React.FC<\n  React.PropsWithChildren<ISelectTableColumnProps>\n> = () => <></>\n\nSelectTable.Column = TableColumn\n\nSelectTable.defaultProps = {\n  showSearch: false,\n  valueType: 'all',\n  primaryKey: 'key',\n  mode: 'multiple',\n}\n\nexport default SelectTable\n"]}