/**
 * 获取树列表某个键值的集合
 * @param tree 树列表
 * @param primaryKey 键名称
 * @returns 键值数组集合
 */
declare const getTreeKeys: (tree: any[], primaryKey: string) => any;
/**
 * 判断树列表中是否有任一 key 被选中
 * @param tree 树列表
 * @param selected 已选中的 keys
 * @param primaryKey 键名
 * @returns
 */
declare const hasSelectedKey: (tree: any[], selected: any[], primaryKey: string) => boolean;
/**
 * 判断列表项是否全部被选中
 * @param list 一阶列表
 * @param selected 当前选中的字段值集合
 * @param primaryKey 键名称
 * @returns 是否全部被选中
 */
declare const isAllSelected: (list: any[], selected: any[], primaryKey: string) => boolean;
/**
 * 完善TableUI Keys（添加选中所有子元素的父元素，或移除未选中所有子元素的父元素）
 * @param flatDataSource 完整数据平铺列表
 * @param selected 当前选中的字段值集合
 * @param primaryKey 键名称
 * @returns 完整的字段值集合
 */
declare const completedKeys: (flatDataSource: any[], selected: any[], primaryKey: string) => any[];
/**
 * 删除树列表的某个 key/value 键值对
 * @param tree
 * @param key
 * @returns
 */
declare const deleteTreeItem: (tree: any[], key: string) => any[];
/**
 * 根据 valueType 获取最终输出值
 * @param keys 当前选中的 key 集合（all完整类型）
 * @param records 当前选中的 option 集合
 * @param dataSource 数据源集合
 * @param primaryKey 键名
 * @param originalValueType 值输出类型
 * @param originalOptionAsValue
 * @param mode
 * @param checkStrictly
 * @returns 最终输出的 keys 和 options
 */
declare const getOutputData: (keys: any, options: any, dataSource: any, primaryKey: any, originalValueType: any, originalOptionAsValue: any, mode: any, checkStrictly: any) => {
    outputValue: any[];
    outputOptions: any[];
};
/**
 * 根据 valueType 获取 TableUI 显示值
 * @param keys 回填的数据（输出的）keys 集合
 * @param flatDataSource 平铺的数据源集合
 * @param primaryKey 键名称
 * @param originalValueType 值输出类型
 * @param originalOptionAsValue
 * @param mode
 * @param checkStrictly
 * @param rowKey
 * @returns [] TableUI keys 集合
 */
declare const getUISelected: (value: any, flatDataSource: any, primaryKey: any, originalValueType: any, originalOptionAsValue: any, mode: any, checkStrictly: any, rowKey: any) => any[];
/**
 * 获取兼容筛选模式下是否全部选中子元素
 * @param selected 已选中项
 * @param dataSource 当前数据结构
 * @param usableKeys 当前数据结构的可执行项
 * @param checkStrictly
 * @param primaryKey
 * @returns 是否全部选中
 */
declare const getCompatibleAllSelected: (selected: any, dataSource: any, usableKeys: any, checkStrictly: any, primaryKey: any) => boolean;
export { hasSelectedKey, getTreeKeys, deleteTreeItem, isAllSelected, getUISelected, getOutputData, completedKeys, getCompatibleAllSelected, };
