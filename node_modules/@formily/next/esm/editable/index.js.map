{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/editable/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useRef, useState } from 'react'\nimport { isVoidField, Field } from '@formily/core'\nimport { useField, observer } from '@formily/react'\nimport { Balloon } from '@alifd/next'\nimport { BalloonProps as PopoverProps } from '@alifd/next/lib/balloon'\nimport { BaseItem, IFormItemProps } from '../form-item'\nimport {\n  useClickAway,\n  usePrefixCls,\n  EditOutlinedIcon,\n  CloseOutlinedIcon,\n  MessageOutlinedIcon,\n} from '../__builtins__'\n/**\n * 默认Inline展示\n */\n\ntype IPopoverProps = PopoverProps\n\ntype ComposedEditable = React.FC<React.PropsWithChildren<IFormItemProps>> & {\n  Popover?: React.FC<\n    React.PropsWithChildren<IPopoverProps & { title?: React.ReactNode }>\n  >\n}\n\nconst useParentPattern = () => {\n  const field = useField<Field>()\n  return field?.parent?.pattern || field?.form?.pattern\n}\n\nconst useEditable = (): [boolean, (payload: boolean) => void] => {\n  const pattern = useParentPattern()\n  const field = useField<Field>()\n  useLayoutEffect(() => {\n    if (pattern === 'editable') {\n      field.setPattern('readPretty')\n    }\n  }, [pattern])\n  return [\n    field.pattern === 'editable',\n    (pyaload: boolean) => {\n      if (pattern !== 'editable') return\n      field.setPattern(pyaload ? 'editable' : 'readPretty')\n    },\n  ]\n}\n\nconst useFormItemProps = (): IFormItemProps => {\n  const field = useField()\n  if (isVoidField(field)) return {}\n  if (!field) return {}\n  const takeMessage = () => {\n    if (field.selfErrors.length) return field.selfErrors\n    if (field.selfWarnings.length) return field.selfWarnings\n    if (field.selfSuccesses.length) return field.selfSuccesses\n  }\n\n  return {\n    feedbackStatus:\n      field.validateStatus === 'validating' ? 'pending' : field.validateStatus,\n    feedbackText: takeMessage(),\n    extra: field.description,\n  }\n}\n\nexport const Editable: ComposedEditable = observer((props) => {\n  const [editable, setEditable] = useEditable()\n  const pattern = useParentPattern()\n  const itemProps = useFormItemProps()\n  const field = useField<Field>()\n  const basePrefixCls = usePrefixCls()\n  const prefixCls = usePrefixCls('formily-editable')\n  const ref = useRef<boolean>()\n  const innerRef = useRef<HTMLDivElement>()\n  const recover = () => {\n    if (ref.current && !field?.errors?.length) {\n      setEditable(false)\n    }\n  }\n  const renderEditHelper = () => {\n    if (editable) return\n    return (\n      <BaseItem {...props} {...itemProps}>\n        {pattern === 'editable' && (\n          <EditOutlinedIcon className={`${prefixCls}-edit-btn`} />\n        )}\n        {pattern !== 'editable' && (\n          <MessageOutlinedIcon className={`${prefixCls}-edit-btn`} />\n        )}\n      </BaseItem>\n    )\n  }\n\n  const renderCloseHelper = () => {\n    if (!editable) return\n    return (\n      <BaseItem {...props}>\n        <CloseOutlinedIcon className={`${prefixCls}-close-btn`} />\n      </BaseItem>\n    )\n  }\n\n  useClickAway((e) => {\n    const target = e.target as HTMLElement\n    if (target?.closest(`.${basePrefixCls}-overlay-wrapper`)) return\n    recover()\n  }, innerRef)\n\n  const onClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const target = e.target as HTMLElement\n    const close = innerRef.current.querySelector(`.${prefixCls}-close-btn`)\n    if (target?.contains(close) || close?.contains(target)) {\n      recover()\n    } else if (!ref.current) {\n      setTimeout(() => {\n        setEditable(true)\n        setTimeout(() => {\n          innerRef.current.querySelector('input')?.focus()\n        })\n      })\n    }\n  }\n\n  ref.current = editable\n\n  return (\n    <div className={prefixCls} ref={innerRef} onClick={onClick}>\n      <div className={`${prefixCls}-content`}>\n        <BaseItem {...props} {...itemProps}>\n          {props.children}\n        </BaseItem>\n        {renderEditHelper()}\n        {renderCloseHelper()}\n      </div>\n    </div>\n  )\n})\n\nEditable.Popover = observer((props) => {\n  const field = useField<Field>()\n  const pattern = useParentPattern()\n  const [visible, setVisible] = useState(false)\n  const prefixCls = usePrefixCls('formily-editable')\n  const closePopover = async () => {\n    try {\n      await field.form.validate(`${field.address}.*`)\n    } finally {\n      const errors = field.form.queryFeedbacks({\n        type: 'error',\n        address: `${field.address}.*`,\n      })\n      if (errors?.length) return\n      setVisible(false)\n    }\n  }\n  const openPopover = () => {\n    setVisible(true)\n  }\n  return (\n    <Balloon\n      {...props}\n      title={field.title}\n      visible={visible}\n      className={props.className}\n      onVisibleChange={(visible) => {\n        if (visible) {\n          openPopover()\n        } else {\n          closePopover()\n        }\n      }}\n      align=\"t\"\n      triggerType=\"click\"\n      closable={false}\n      trigger={\n        <div style={{ display: 'inline-flex' }}>\n          <BaseItem className={`${prefixCls}-trigger`}>\n            <div className={`${prefixCls}-content`}>\n              <span className={`${prefixCls}-preview`}>\n                {props.title || field.title}\n              </span>\n              {pattern === 'editable' && (\n                <EditOutlinedIcon className={`${prefixCls}-edit-btn`} />\n              )}\n              {pattern !== 'editable' && (\n                <MessageOutlinedIcon className={`${prefixCls}-edit-btn`} />\n              )}\n            </div>\n          </BaseItem>\n        </div>\n      }\n    >\n      {props.children}\n    </Balloon>\n  )\n})\n\nexport default Editable\n"]}