{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/reset/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AAGpC,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAQ9C,MAAM,CAAC,IAAM,KAAK,GAAmD,UAAC,EAMxD;IALZ,IAAA,UAAU,gBAAA,EACV,QAAQ,cAAA,EACR,qBAAqB,2BAAA,EACrB,sBAAsB,4BAAA,EACnB,KAAK,cAL4D,6EAMrE,CADS;IAER,IAAM,IAAI,GAAG,aAAa,EAAE,CAAA;IAC5B,OAAO,CACL,oBAAC,MAAM,eACD,KAAK,IACT,OAAO,EAAE,UAAC,CAAC;YACT,IAAI,KAAK,CAAC,OAAO,EAAE;gBACjB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK;oBAAE,OAAM;aACvC;YACD,IAAI;iBACD,KAAK,CAAC,GAAG,EAAE;gBACV,UAAU,YAAA;gBACV,QAAQ,UAAA;aACT,CAAC;iBACD,IAAI,CAAC,sBAAsB,CAAC;iBAC5B,KAAK,CAAC,qBAAqB,CAAC,CAAA;QACjC,CAAC,KAEA,KAAK,CAAC,QAAQ,CACR,CACV,CAAA;AACH,CAAC,CAAA;AAED,eAAe,KAAK,CAAA","sourcesContent":["import React from 'react'\nimport { Button } from '@alifd/next'\nimport { ButtonProps } from '@alifd/next/lib/button'\nimport { IFormFeedback, IFieldResetOptions } from '@formily/core'\nimport { useParentForm } from '@formily/react'\n\nexport interface IResetProps extends IFieldResetOptions, ButtonProps {\n  onClick?: (e: React.MouseEvent<Element, MouseEvent>) => any\n  onResetValidateSuccess?: (payload: any) => void\n  onResetValidateFailed?: (feedbacks: IFormFeedback[]) => void\n}\n\nexport const Reset: React.FC<React.PropsWithChildren<IResetProps>> = ({\n  forceClear,\n  validate,\n  onResetValidateFailed,\n  onResetValidateSuccess,\n  ...props\n}: IResetProps) => {\n  const form = useParentForm()\n  return (\n    <Button\n      {...props}\n      onClick={(e) => {\n        if (props.onClick) {\n          if (props.onClick(e) === false) return\n        }\n        form\n          .reset('*', {\n            forceClear,\n            validate,\n          })\n          .then(onResetValidateSuccess)\n          .catch(onResetValidateFailed)\n      }}\n    >\n      {props.children}\n    </Button>\n  )\n}\n\nexport default Reset\n"]}