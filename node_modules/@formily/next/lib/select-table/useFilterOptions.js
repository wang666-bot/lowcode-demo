"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useFilterOptions = void 0;
var React = __importStar(require("react"));
var shared_1 = require("@formily/shared");
function includes(test, search) {
    return toArray(test).join('').toUpperCase().includes(search);
}
function includesOption(option, search) {
    var searched = new Set();
    var _includesOption = function (option) {
        var keys = Object.keys(option || {});
        return keys.some(function (key) {
            if (key === '__level') {
                return false;
            }
            var value = option[key];
            if (React.isValidElement(value))
                return false;
            if (key !== 'children' && !searched.has(value)) {
                if (typeof value === 'object') {
                    searched.add(value);
                    return _includesOption(value);
                }
                return includes(value, search);
            }
            return false;
        });
    };
    return _includesOption(option);
}
function toArray(value) {
    if ((0, shared_1.isArr)(value)) {
        return value;
    }
    return value !== undefined ? [value] : [];
}
var useFilterOptions = function (options, searchValue, filterOption, checkStrictly) {
    return React.useMemo(function () {
        if (!searchValue || filterOption === false) {
            return options;
        }
        var filterFunc = (0, shared_1.isFn)(filterOption)
            ? filterOption
            : function (value, option) { return includesOption(option, value.toUpperCase()); };
        var doFilter = function (arr) {
            var filterArr = [];
            arr === null || arr === void 0 ? void 0 : arr.forEach(function (item) {
                var _a;
                if ((_a = item === null || item === void 0 ? void 0 : item.children) === null || _a === void 0 ? void 0 : _a.length) {
                    var filterChildren = doFilter(item.children);
                    if (filterChildren.length) {
                        filterArr.push(__assign(__assign({}, item), { children: filterChildren }));
                    }
                    else if (filterFunc(searchValue, item) && checkStrictly !== false) {
                        // 父子关系启用时，没有可用子元素，不添加父元素
                        filterArr.push(__assign(__assign({}, item), { children: [] }));
                    }
                }
                else if (filterFunc(searchValue, item)) {
                    filterArr.push(item);
                }
            });
            return filterArr;
        };
        return doFilter(options);
    }, [options, searchValue, filterOption]);
};
exports.useFilterOptions = useFilterOptions;
//# sourceMappingURL=useFilterOptions.js.map