{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/date-picker/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,wCAAiE;AACjE,oCAA0D;AAO1D,gDAA6C;AAC7C,+CAKwB;AAmBxB,IAAM,aAAa,GAAG,UAAU,IAAgC;IAC9D,IAAM,gBAAgB,GAAG,UAAC,KAA2C;QACnE,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAA;QACnC,IAAI,KAAK,KAAK,OAAO,EAAE;YACrB,OAAO,SAAS,CAAA;SACjB;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YAC3B,OAAO,MAAM,CAAA;SACd;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YAC3B,OAAO,SAAS,CAAA;SACjB;QACD,OAAO,YAAY,CAAA;IACrB,CAAC,CAAA;IAED,OAAO,UAAC,KAAU;QAChB,IAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAA;QAE7D,IAAI,WAAW,GAAG,UAAU,CAAA;QAC5B,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,IAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,IAAI,UAAU,CAAA;YACtD,WAAW,GAAG,UAAG,WAAW,cAAI,UAAU,CAAE,CAAA;SAC7C;QAED,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;QAC/B,6BACK,KAAK,KACR,MAAM,EAAE,UAAU,EAClB,KAAK,EAAE,IAAA,wBAAU,EACf,KAAK,CAAC,KAAK,EACX,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CACnD,EACD,QAAQ,EAAE,UAAC,KAAsC;gBAC/C,IAAI,QAAQ,EAAE;oBACZ,QAAQ,CAAC,IAAA,+BAAiB,EAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAA;iBAChD;YACH,CAAC,IACF;IACH,CAAC,CAAA;AACH,CAAC,CAAA;AAEY,QAAA,UAAU,GAAuB,IAAA,eAAO,EACnD,iBAAc,EACd,IAAA,gBAAQ,EAAC,aAAa,EAAE,EAAE,qBAAO,EAAE,uBAAS,CAAC,EAC7C,IAAA,qBAAa,EAAC,0BAAW,CAAC,UAAU,CAAC,CACtC,CAAA;AAED,kBAAU,CAAC,WAAW,GAAG,IAAA,eAAO,EAC9B,iBAAc,CAAC,WAAW,EAC1B,IAAA,gBAAQ,EAAC,aAAa,EAAE,EAAE,qBAAO,EAAE,uBAAS,CAAC,EAC7C,IAAA,qBAAa,EAAC,0BAAW,CAAC,eAAe,CAAC,CAC3C,CAAA;AAED,kBAAU,CAAC,UAAU,GAAG,IAAA,eAAO,EAC7B,iBAAc,CAAC,UAAU,EACzB,IAAA,gBAAQ,EAAC,aAAa,CAAC,MAAM,CAAC,EAAE,qBAAO,EAAE,uBAAS,CAAC,EACnD,IAAA,qBAAa,EAAC,0BAAW,CAAC,UAAU,CAAC,CACtC,CAAA;AAED,kBAAU,CAAC,WAAW,GAAG,IAAA,eAAO,EAC9B,iBAAc,CAAC,WAAW,EAC1B,IAAA,gBAAQ,EAAC,aAAa,CAAC,OAAO,CAAC,EAAE,qBAAO,EAAE,uBAAS,CAAC,EACpD,IAAA,qBAAa,EAAC,0BAAW,CAAC,UAAU,CAAC,CACtC,CAAA;AAED,kBAAU,CAAC,UAAU,GAAG,IAAA,eAAO,EAC7B,iBAAc,CAAC,UAAU,EACzB,IAAA,gBAAQ,EAAC,aAAa,CAAC,MAAM,CAAC,EAAE,qBAAO,EAAE,uBAAS,CAAC,EACnD,IAAA,qBAAa,EAAC,0BAAW,CAAC,UAAU,CAAC,CACtC,CAAA;AAED,kBAAe,kBAAU,CAAA","sourcesContent":["import moment from 'moment'\nimport { connect, mapProps, mapReadPretty } from '@formily/react'\nimport { DatePicker as NextDatePicker } from '@alifd/next'\nimport {\n  DatePickerProps as NextDatePickerProps,\n  MonthPickerProps,\n  YearPickerProps,\n  RangePickerProps,\n} from '@alifd/next/lib/date-picker'\nimport { PreviewText } from '../preview-text'\nimport {\n  formatMomentValue,\n  momentable,\n  mapSize,\n  mapStatus,\n} from '../__builtins__'\n\ntype DatePickerProps<PickerProps> = Exclude<\n  PickerProps,\n  'value' | 'onChange'\n> & {\n  value: string\n  onChange: (value: string | string[]) => void\n}\n\ntype ComposedDatePicker = React.FC<\n  React.PropsWithChildren<NextDatePickerProps>\n> & {\n  RangePicker?: React.FC<React.PropsWithChildren<RangePickerProps>>\n  MonthPicker?: React.FC<React.PropsWithChildren<MonthPickerProps>>\n  YearPicker?: React.FC<React.PropsWithChildren<YearPickerProps>>\n  WeekPicker?: React.FC<React.PropsWithChildren<NextDatePickerProps>>\n}\n\nconst mapDateFormat = function (type?: 'month' | 'year' | 'week') {\n  const getDefaultFormat = (props: DatePickerProps<NextDatePickerProps>) => {\n    const _type = props['type'] || type\n    if (_type === 'month') {\n      return 'YYYY-MM'\n    } else if (_type === 'year') {\n      return 'YYYY'\n    } else if (_type === 'week') {\n      return 'YYYY-wo'\n    }\n    return 'YYYY-MM-DD'\n  }\n\n  return (props: any) => {\n    const dateFormat = props['format'] || getDefaultFormat(props)\n\n    let valueFormat = dateFormat\n    if (props.showTime) {\n      const timeFormat = props.showTime.format || 'HH:mm:ss'\n      valueFormat = `${valueFormat} ${timeFormat}`\n    }\n\n    const onChange = props.onChange\n    return {\n      ...props,\n      format: dateFormat,\n      value: momentable(\n        props.value,\n        valueFormat === 'YYYY-wo' ? 'YYYY-w' : valueFormat\n      ),\n      onChange: (value: moment.Moment | moment.Moment[]) => {\n        if (onChange) {\n          onChange(formatMomentValue(value, valueFormat))\n        }\n      },\n    }\n  }\n}\n\nexport const DatePicker: ComposedDatePicker = connect(\n  NextDatePicker,\n  mapProps(mapDateFormat(), mapSize, mapStatus),\n  mapReadPretty(PreviewText.DatePicker)\n)\n\nDatePicker.RangePicker = connect(\n  NextDatePicker.RangePicker,\n  mapProps(mapDateFormat(), mapSize, mapStatus),\n  mapReadPretty(PreviewText.DateRangePicker)\n)\n\nDatePicker.YearPicker = connect(\n  NextDatePicker.YearPicker,\n  mapProps(mapDateFormat('year'), mapSize, mapStatus),\n  mapReadPretty(PreviewText.DatePicker)\n)\n\nDatePicker.MonthPicker = connect(\n  NextDatePicker.MonthPicker,\n  mapProps(mapDateFormat('month'), mapSize, mapStatus),\n  mapReadPretty(PreviewText.DatePicker)\n)\n\nDatePicker.WeekPicker = connect(\n  NextDatePicker.WeekPicker,\n  mapProps(mapDateFormat('week'), mapSize, mapStatus),\n  mapReadPretty(PreviewText.DatePicker)\n)\n\nexport default DatePicker\n"]}