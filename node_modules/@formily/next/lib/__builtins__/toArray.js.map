{"version":3,"file":"toArray.js","sourceRoot":"","sources":["../../src/__builtins__/toArray.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAyB;AACzB,qCAAqC;AAMrC,SAAgB,OAAO,CACrB,QAAyB,EACzB,MAA0B;IAA1B,uBAAA,EAAA,WAA0B;IAE1B,IAAI,GAAG,GAAyB,EAAE,CAAA;IAElC,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,KAAU;QAC1C,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YAChE,OAAM;SACP;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;SACjC;aAAM,IAAI,IAAA,qBAAU,EAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE;YAC3C,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAA;SACxD;aAAM;YACL,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;SAChB;IACH,CAAC,CAAC,CAAA;IAEF,OAAO,GAAG,CAAA;AACZ,CAAC;AArBD,0BAqBC","sourcesContent":["import React from 'react'\nimport { isFragment } from 'react-is'\n\nexport interface toArrayOption {\n  keepEmpty?: boolean\n}\n\nexport function toArray(\n  children: React.ReactNode,\n  option: toArrayOption = {}\n): React.ReactElement[] {\n  let ret: React.ReactElement[] = []\n\n  React.Children.forEach(children, (child: any) => {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return\n    }\n\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child))\n    } else if (isFragment(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option))\n    } else {\n      ret.push(child)\n    }\n  })\n\n  return ret\n}\n"]}