{"version":3,"file":"BaseField.js","sourceRoot":"","sources":["../../src/models/BaseField.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  FormPath,\n  FormPathPattern,\n  isValid,\n  toArr,\n  each,\n  isFn,\n} from '@formily/shared'\nimport {\n  JSXComponent,\n  LifeCycleTypes,\n  FieldDisplayTypes,\n  FieldPatternTypes,\n  FieldDecorator,\n  FieldComponent,\n  IFieldActions,\n} from '../types'\nimport {\n  locateNode,\n  destroy,\n  initFieldUpdate,\n  getArrayParent,\n  getObjectParent,\n} from '../shared/internals'\nimport { Form } from './Form'\nimport { Query } from './Query'\n\nexport class BaseField<Decorator = any, Component = any, TextType = any> {\n  title: TextType\n  description: TextType\n\n  selfDisplay: FieldDisplayTypes\n  selfPattern: FieldPatternTypes\n  initialized: boolean\n  mounted: boolean\n  unmounted: boolean\n\n  content: any\n\n  data: any\n\n  decoratorType: Decorator\n  decoratorProps: Record<string, any>\n  componentType: Component\n  componentProps: Record<string, any>\n\n  designable: boolean\n  address: FormPath\n  path: FormPath\n  form: Form\n\n  disposers: (() => void)[] = []\n\n  actions: IFieldActions = {}\n\n  locate(address: FormPathPattern) {\n    this.form.fields[address.toString()] = this as any\n    locateNode(this as any, address)\n  }\n\n  get indexes(): number[] {\n    return this.path.transform(/^\\d+$/, (...args) =>\n      args.map((index) => Number(index))\n    ) as number[]\n  }\n\n  get index() {\n    return this.indexes[this.indexes.length - 1] ?? -1\n  }\n\n  get records() {\n    const array = getArrayParent(this)\n    return array?.value\n  }\n\n  get record() {\n    const obj = getObjectParent(this)\n    if (obj) {\n      return obj.value\n    }\n    const index = this.index\n    const array = getArrayParent(this, index)\n    if (array) {\n      return array.value?.[index]\n    }\n    return this.form.values\n  }\n\n  get component() {\n    return [this.componentType, this.componentProps]\n  }\n\n  set component(value: FieldComponent<Component>) {\n    const component = toArr(value)\n    this.componentType = component[0]\n    this.componentProps = component[1] || {}\n  }\n\n  get decorator() {\n    return [this.decoratorType, this.decoratorProps]\n  }\n\n  set decorator(value: FieldDecorator<Decorator>) {\n    const decorator = toArr(value)\n    this.decoratorType = decorator[0]\n    this.decoratorProps = decorator[1] || {}\n  }\n\n  get parent() {\n    let parent = this.address.parent()\n    let identifier = parent.toString()\n    while (!this.form.fields[identifier]) {\n      parent = parent.parent()\n      identifier = parent.toString()\n      if (!identifier) return\n    }\n    return this.form.fields[identifier]\n  }\n\n  get display(): FieldDisplayTypes {\n    const parentDisplay = (this.parent as any)?.display\n    if (parentDisplay && parentDisplay !== 'visible') {\n      if (this.selfDisplay && this.selfDisplay !== 'visible')\n        return this.selfDisplay\n      return parentDisplay\n    }\n    if (isValid(this.selfDisplay)) return this.selfDisplay\n    return parentDisplay || this.form.display || 'visible'\n  }\n\n  get pattern(): FieldPatternTypes {\n    const parentPattern: FieldPatternTypes =\n      (this.parent as any)?.pattern || this.form.pattern || 'editable'\n    const selfPattern = this.selfPattern\n    if (isValid(selfPattern)) {\n      if (parentPattern === 'readPretty' && selfPattern !== 'editable') {\n        return parentPattern\n      }\n      return selfPattern\n    }\n    return parentPattern\n  }\n\n  get editable() {\n    return this.pattern === 'editable'\n  }\n\n  get disabled() {\n    return this.pattern === 'disabled'\n  }\n\n  get readOnly() {\n    return this.pattern === 'readOnly'\n  }\n\n  get readPretty() {\n    return this.pattern === 'readPretty'\n  }\n\n  get hidden() {\n    return this.display === 'hidden'\n  }\n\n  get visible() {\n    return this.display === 'visible'\n  }\n\n  get destroyed() {\n    return !this.form.fields[this.address.toString()]\n  }\n\n  set hidden(hidden: boolean) {\n    if (!isValid(hidden)) return\n    if (hidden) {\n      this.display = 'hidden'\n    } else {\n      this.display = 'visible'\n    }\n  }\n\n  set visible(visible: boolean) {\n    if (!isValid(visible)) return\n    if (visible) {\n      this.display = 'visible'\n    } else {\n      this.display = 'none'\n    }\n  }\n\n  set editable(editable: boolean) {\n    if (!isValid(editable)) return\n    if (editable) {\n      this.pattern = 'editable'\n    } else {\n      this.pattern = 'readPretty'\n    }\n  }\n\n  set readOnly(readOnly: boolean) {\n    if (!isValid(readOnly)) return\n    if (readOnly) {\n      this.pattern = 'readOnly'\n    } else {\n      this.pattern = 'editable'\n    }\n  }\n\n  set disabled(disabled: boolean) {\n    if (!isValid(disabled)) return\n    if (disabled) {\n      this.pattern = 'disabled'\n    } else {\n      this.pattern = 'editable'\n    }\n  }\n\n  set readPretty(readPretty: boolean) {\n    if (!isValid(readPretty)) return\n    if (readPretty) {\n      this.pattern = 'readPretty'\n    } else {\n      this.pattern = 'editable'\n    }\n  }\n\n  set pattern(pattern: FieldPatternTypes) {\n    this.selfPattern = pattern\n  }\n\n  set display(display: FieldDisplayTypes) {\n    this.selfDisplay = display\n  }\n\n  setTitle = (title?: TextType) => {\n    this.title = title\n  }\n\n  setDescription = (description?: TextType) => {\n    this.description = description\n  }\n\n  setDisplay = (type?: FieldDisplayTypes) => {\n    this.display = type\n  }\n\n  setPattern = (type?: FieldPatternTypes) => {\n    this.pattern = type\n  }\n\n  setComponent = <C extends JSXComponent, ComponentProps extends object = {}>(\n    component?: C,\n    props?: ComponentProps\n  ) => {\n    if (component) {\n      this.componentType = component as any\n    }\n    if (props) {\n      this.componentProps = this.componentProps || {}\n      Object.assign(this.componentProps, props)\n    }\n  }\n\n  setComponentProps = <ComponentProps extends object = {}>(\n    props?: ComponentProps\n  ) => {\n    if (props) {\n      this.componentProps = this.componentProps || {}\n      Object.assign(this.componentProps, props)\n    }\n  }\n\n  setDecorator = <D extends JSXComponent, ComponentProps extends object = {}>(\n    component?: D,\n    props?: ComponentProps\n  ) => {\n    if (component) {\n      this.decoratorType = component as any\n    }\n    if (props) {\n      this.decoratorProps = this.decoratorProps || {}\n      Object.assign(this.decoratorProps, props)\n    }\n  }\n\n  setDecoratorProps = <ComponentProps extends object = {}>(\n    props?: ComponentProps\n  ) => {\n    if (props) {\n      this.decoratorProps = this.decoratorProps || {}\n      Object.assign(this.decoratorProps, props)\n    }\n  }\n\n  setData = (data: any) => {\n    this.data = data\n  }\n\n  setContent = (content: any) => {\n    this.content = content\n  }\n\n  onInit = () => {\n    this.initialized = true\n    initFieldUpdate(this as any)\n    this.notify(LifeCycleTypes.ON_FIELD_INIT)\n  }\n\n  onMount = () => {\n    this.mounted = true\n    this.unmounted = false\n    this.notify(LifeCycleTypes.ON_FIELD_MOUNT)\n  }\n\n  onUnmount = () => {\n    this.mounted = false\n    this.unmounted = true\n    this.notify(LifeCycleTypes.ON_FIELD_UNMOUNT)\n  }\n\n  query = (pattern: FormPathPattern | RegExp) => {\n    return new Query({\n      pattern,\n      base: this.address,\n      form: this.form,\n    })\n  }\n\n  notify = (type: LifeCycleTypes, payload?: any) => {\n    return this.form.notify(type, payload ?? this)\n  }\n\n  dispose = () => {\n    this.disposers.forEach((dispose) => {\n      dispose()\n    })\n    this.form.removeEffects(this)\n  }\n\n  destroy = (forceClear = true) => {\n    destroy(this.form.fields, this.address.toString(), forceClear)\n  }\n\n  match = (pattern: FormPathPattern) => {\n    return FormPath.parse(pattern).matchAliasGroup(this.address, this.path)\n  }\n\n  inject = (actions: IFieldActions) => {\n    each(actions, (action, key) => {\n      if (isFn(action)) {\n        this.actions[key] = action\n      }\n    })\n  }\n\n  invoke = (name: string, ...args: any[]) => {\n    return this.actions[name]?.(...args)\n  }\n}\n"]}