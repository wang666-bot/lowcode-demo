{"version":3,"file":"checkers.js","sourceRoot":"","sources":["../../src/shared/checkers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAA;AAEtC,OAAO,EACL,IAAI,EACJ,KAAK,EACL,UAAU,EACV,WAAW,EACX,SAAS,EACT,KAAK,GACN,MAAM,WAAW,CAAA;AASlB,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,IAAS;IAC9B,OAAO,IAAI,YAAY,IAAI,CAAA;AAC7B,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,IAAS;IACtC,OAAO,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,SAAS,CAAA;AAC3D,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,OAAO,GAAG,UAMrB,IAAS;IAET,OAAO,IAAI,YAAY,KAAK,CAAA;AAC9B,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,YAAY,GAAG,UAI1B,IAAS;IAET,OAAO,IAAI,YAAY,UAAU,CAAA;AACnC,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,aAAa,GAAG,UAI3B,IAAS;IAET,OAAO,IAAI,YAAY,WAAW,CAAA;AACpC,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,WAAW,GAAG,UACzB,IAAS;IAET,OAAO,IAAI,YAAY,SAAS,CAAA;AAClC,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,WAAW,GAAG,UACzB,KAAU;IAEV,IAAI,IAAI,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,CAAC;QAAE,OAAO,KAAK,CAAA;IACzC,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,MAAK,MAAM,CAAA;AACtC,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,KAAU;IACrC,IAAI,IAAI,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,CAAC;QAAE,OAAO,KAAK,CAAA;IACzC,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,MAAK,OAAO,CAAA;AACvC,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAAC,IAAS;;IAC3C,IAAI,IAAI,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;QAAE,OAAO,KAAK,CAAA;IACxC,OAAO,CAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,OAAO,CAAC,OAAO,CAAC,IAAG,CAAC,CAAC,CAAA;AACjD,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAAC,KAAU;IAC1C,IAAI,IAAI,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,CAAC;QAAE,OAAO,KAAK,CAAA;IACzC,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,MAAK,YAAY,CAAA;AAC5C,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,IAAS;IACnC,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,CAAA;AACnE,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,IAAS;IACxC,OAAO,CACL,YAAY,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAC1E,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,kBAAkB,GAAG,UAAC,KAAU;IAC3C,IAAI,IAAI,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,CAAC;QAAE,OAAO,KAAK,CAAA;IACzC,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,MAAK,aAAa,CAAA;AAC7C,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,KAAU;IACzC,IAAI,IAAI,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,CAAC;QAAE,OAAO,KAAK,CAAA;IACzC,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,MAAK,WAAW,CAAA;AAC3C,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,KAAU;IAChC,OAAO,KAAK,IAAI,KAAK,YAAY,KAAK,CAAA;AACxC,CAAC,CAAA","sourcesContent":["import { isFn } from '@formily/shared'\nimport { DataField, JSXComponent } from '..'\nimport {\n  Form,\n  Field,\n  ArrayField,\n  ObjectField,\n  VoidField,\n  Query,\n} from '../models'\nimport {\n  IFormState,\n  IFieldState,\n  IVoidFieldState,\n  GeneralField,\n  IGeneralFieldState,\n} from '../types'\n\nexport const isForm = (node: any): node is Form => {\n  return node instanceof Form\n}\n\nexport const isGeneralField = (node: any): node is GeneralField => {\n  return node instanceof Field || node instanceof VoidField\n}\n\nexport const isField = <\n  Decorator extends JSXComponent = any,\n  Component extends JSXComponent = any,\n  TextType = any,\n  ValueType = any\n>(\n  node: any\n): node is Field<Decorator, Component, TextType, ValueType> => {\n  return node instanceof Field\n}\n\nexport const isArrayField = <\n  Decorator extends JSXComponent = any,\n  Component extends JSXComponent = any\n>(\n  node: any\n): node is ArrayField<Decorator, Component> => {\n  return node instanceof ArrayField\n}\n\nexport const isObjectField = <\n  Decorator extends JSXComponent = any,\n  Component extends JSXComponent = any\n>(\n  node: any\n): node is ObjectField<Decorator, Component> => {\n  return node instanceof ObjectField\n}\n\nexport const isVoidField = <Decorator = any, Component = any, TextType = any>(\n  node: any\n): node is VoidField<Decorator, Component, TextType> => {\n  return node instanceof VoidField\n}\n\nexport const isFormState = <T extends Record<any, any> = any>(\n  state: any\n): state is IFormState<T> => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'Form'\n}\n\nexport const isFieldState = (state: any): state is IFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'Field'\n}\n\nexport const isGeneralFieldState = (node: any): node is IGeneralFieldState => {\n  if (isFn(node?.initialize)) return false\n  return node?.displayName?.indexOf('Field') > -1\n}\n\nexport const isArrayFieldState = (state: any): state is IFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'ArrayField'\n}\n\nexport const isDataField = (node: any): node is DataField => {\n  return isField(node) || isArrayField(node) || isObjectField(node)\n}\n\nexport const isDataFieldState = (node: any) => {\n  return (\n    isFieldState(node) || isObjectFieldState(node) || isArrayFieldState(node)\n  )\n}\n\nexport const isObjectFieldState = (state: any): state is IFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'ObjectField'\n}\n\nexport const isVoidFieldState = (state: any): state is IVoidFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'VoidField'\n}\n\nexport const isQuery = (query: any): query is Query => {\n  return query && query instanceof Query\n}\n"]}