{"version":3,"file":"ObjectField.js","sourceRoot":"","sources":["../../src/models/ObjectField.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,8CAA4C;AAC5C,iDAA2D;AAE3D,iCAA+B;AAG/B;IAGU,+BAAqD;IAG7D,qBACE,OAAwB,EACxB,KAAwC,EACxC,IAAU,EACV,UAAmB;QAJrB,YAME,kBAAM,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,SAExC;QAVD,iBAAW,GAAG,aAAa,CAAA;QACnB,0BAAoB,GAAa,EAAE,CAAA;QAyB3C,iBAAW,GAAG,UAAC,GAAW,EAAE,KAAU;YACpC,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;YACnD,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACnC,OAAO,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,CAAA;QACjC,CAAC,CAAA;QAED,oBAAc,GAAG,UAAC,GAAW;YAC3B,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YAC/C,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3E,OAAO,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,CAAA;QACjC,CAAC,CAAA;QAED,mBAAa,GAAG,UAAC,GAAW;YAC1B,OAAO,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;QACvD,CAAC,CAAA;QA/BC,KAAI,CAAC,iBAAiB,EAAE,CAAA;;IAC1B,CAAC;IAES,uCAAiB,GAA3B;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAA,mBAAQ,EACN,cAAM,OAAA,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,IAAI,EAAE,CAAC,EAA7B,CAA6B,EACnC,UAAC,OAAO;YACN,IAAM,UAAU,GAAG,KAAI,CAAC,oBAAoB,CAAC,MAAM,CACjD,UAAC,GAAG,IAAK,OAAA,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAtB,CAAsB,CAChC,CAAA;YACD,IAAA,iCAAqB,EAAC,KAAI,EAAE,UAAU,CAAC,CAAA;QACzC,CAAC,CACF,CACF,CAAA;IACH,CAAC;IAiBH,kBAAC;AAAD,CAAC,AA7CD,CAGU,aAAK,GA0Cd;AA7CY,kCAAW","sourcesContent":["import { reaction } from '@formily/reactive'\nimport { cleanupObjectChildren } from '../shared/internals'\nimport { JSXComponent, IFieldProps, FormPathPattern } from '../types'\nimport { Field } from './Field'\nimport { Form } from './Form'\n\nexport class ObjectField<\n  Decorator extends JSXComponent = any,\n  Component extends JSXComponent = any\n> extends Field<Decorator, Component, any, Record<string, any>> {\n  displayName = 'ObjectField'\n  private additionalProperties: string[] = []\n  constructor(\n    address: FormPathPattern,\n    props: IFieldProps<Decorator, Component>,\n    form: Form,\n    designable: boolean\n  ) {\n    super(address, props, form, designable)\n    this.makeAutoCleanable()\n  }\n\n  protected makeAutoCleanable() {\n    this.disposers.push(\n      reaction(\n        () => Object.keys(this.value || {}),\n        (newKeys) => {\n          const filterKeys = this.additionalProperties.filter(\n            (key) => !newKeys.includes(key)\n          )\n          cleanupObjectChildren(this, filterKeys)\n        }\n      )\n    )\n  }\n\n  addProperty = (key: string, value: any) => {\n    this.form.setValuesIn(this.path.concat(key), value)\n    this.additionalProperties.push(key)\n    return this.onInput(this.value)\n  }\n\n  removeProperty = (key: string) => {\n    this.form.deleteValuesIn(this.path.concat(key))\n    this.additionalProperties.splice(this.additionalProperties.indexOf(key), 1)\n    return this.onInput(this.value)\n  }\n\n  existProperty = (key: string) => {\n    return this.form.existValuesIn(this.path.concat(key))\n  }\n}\n"]}