"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Swiper = void 0;
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _getParams2 = require("./get-params");
var _initSwiper = require("./init-swiper");
var _utils = require("./utils");
var _loop = require("./loop");
var _getChangedParams = require("./get-changed-params");
var _getChildren2 = require("./get-children");
var _updateSwiper = require("./update-swiper");
var _virtual = require("./virtual");
var _useIsomorphicLayoutEffect = require("./use-isomorphic-layout-effect");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var Swiper = exports.Swiper = /*#__PURE__*/(0, _react.forwardRef)(function () {
  var _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var externalElRef = arguments.length > 1 ? arguments[1] : undefined;
  var className = _a.className,
    _a$tag = _a.tag,
    Tag = _a$tag === void 0 ? 'div' : _a$tag,
    _a$wrapperTag = _a.wrapperTag,
    WrapperTag = _a$wrapperTag === void 0 ? 'div' : _a$wrapperTag,
    children = _a.children,
    onSwiper = _a.onSwiper,
    rest = (0, _tslib.__rest)(_a, ["className", "tag", "wrapperTag", "children", "onSwiper"]);
  var _useState = (0, _react.useState)('swiper-container'),
    _useState2 = _slicedToArray(_useState, 2),
    containerClasses = _useState2[0],
    setContainerClasses = _useState2[1];
  var _useState3 = (0, _react.useState)(null),
    _useState4 = _slicedToArray(_useState3, 2),
    virtualData = _useState4[0],
    setVirtualData = _useState4[1];
  var initializedRef = (0, _react.useRef)(false);
  var swiperElRef = (0, _react.useRef)(null);
  var swiperRef = (0, _react.useRef)(null);
  var oldPassedParamsRef = (0, _react.useRef)(null);
  var oldSlides = (0, _react.useRef)(null);
  var nextElRef = (0, _react.useRef)(null);
  var prevElRef = (0, _react.useRef)(null);
  var paginationElRef = (0, _react.useRef)(null);
  var scrollbarElRef = (0, _react.useRef)(null);
  var _getParams = (0, _getParams2.getParams)(rest),
    swiperParams = _getParams.params,
    passedParams = _getParams.passedParams,
    restProps = _getParams.rest;
  var _getChildren = (0, _getChildren2.getChildren)(children),
    slides = _getChildren.slides,
    slots = _getChildren.slots;
  var changedParams = (0, _getChangedParams.getChangedParams)(passedParams, oldPassedParamsRef.current, slides, oldSlides.current);
  oldPassedParamsRef.current = passedParams;
  oldSlides.current = slides;
  Object.assign(swiperParams.on, {
    _containerClasses: function _containerClasses(swiper, classes) {
      setContainerClasses(classes);
    },
    _swiper: function _swiper(swiper) {
      swiper.loopCreate = function () {};
      swiper.loopDestroy = function () {};
      if (swiperParams.loop) {
        swiper.loopedSlides = (0, _loop.calcLoopedSlides)(slides, swiperParams);
      }
      swiperRef.current = swiper;
      if (swiper.virtual && swiper.params.virtual.enabled) {
        swiper.virtual.slides = slides;
        swiper.params.virtual.cache = false;
        swiper.params.virtual.renderExternal = setVirtualData;
        swiper.params.virtual.renderExternalUpdate = false;
      }
    }
  });
  (0, _react.useEffect)(function () {
    if (!initializedRef.current && swiperRef.current) {
      swiperRef.current.emitSlidesClasses();
      initializedRef.current = true;
    }
  });
  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    if (changedParams.length && swiperRef.current && !swiperRef.current.destroyed) {
      (0, _updateSwiper.updateSwiper)(swiperRef.current, slides, passedParams, changedParams);
    }
  });
  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    (0, _virtual.updateOnVirtualData)(swiperRef.current);
  }, [virtualData]);
  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    if (externalElRef) {
      externalElRef.current = swiperElRef.current;
    }
    if (!swiperElRef.current) return;
    (0, _initSwiper.initSwiper)({
      el: swiperElRef.current,
      nextEl: nextElRef.current,
      prevEl: prevElRef.current,
      paginationEl: paginationElRef.current,
      scrollbarEl: scrollbarElRef.current
    }, swiperParams);
    if (onSwiper) onSwiper(swiperRef.current);
    return function () {
      if (swiperRef.current && !swiperRef.current.destroyed) {
        swiperRef.current.destroy();
      }
    };
  }, []);
  return /*#__PURE__*/_react["default"].createElement(Tag, Object.assign({
    ref: swiperElRef,
    className: (0, _utils.uniqueClasses)("".concat(containerClasses).concat(className ? " ".concat(className) : ''))
  }, restProps), slots['container-start'], (0, _utils.needsNavigation)(swiperParams) && ( /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("div", {
    ref: prevElRef,
    className: "swiper-button-prev"
  }), /*#__PURE__*/_react["default"].createElement("div", {
    ref: nextElRef,
    className: "swiper-button-next"
  }))), (0, _utils.needsScrollbar)(swiperParams) && /*#__PURE__*/_react["default"].createElement("div", {
    ref: scrollbarElRef,
    className: "swiper-scrollbar"
  }), (0, _utils.needsPagination)(swiperParams) && ( /*#__PURE__*/_react["default"].createElement("div", {
    ref: paginationElRef,
    className: "swiper-pagination"
  })), /*#__PURE__*/_react["default"].createElement(WrapperTag, {
    className: "swiper-wrapper"
  }, slots['wrapper-start'], function () {
    if (swiperParams.virtual) {
      return (0, _virtual.renderVirtual)(swiperRef.current, slides, virtualData);
    }
    if (!swiperParams.loop || swiperRef.current && swiperRef.current.destroyed) {
      return slides.map(function (child) {
        return /*#__PURE__*/(0, _react.cloneElement)(child, {
          swiper: swiperRef.current
        });
      });
    }
    return (0, _loop.renderLoop)(swiperRef.current, slides, swiperParams);
  }(), slots['wrapper-end']), slots['container-end']);
});
Swiper.displayName = 'Swiper';