"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _text = _interopRequireDefault(require("../text"));
var _view = _interopRequireDefault(require("../view"));
var _image = _interopRequireDefault(require("../image"));
require("./index.css");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function isFunction(functionToCheck) {
  return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';
}
function Time(props) {
  var num = props.num,
    timeWrapStyle = props.timeWrapStyle,
    timeBackground = props.timeBackground,
    timeBackgroundStyle = props.timeBackgroundStyle,
    timeStyle = props.timeStyle,
    secondStyle = props.secondStyle;
  var displayNum = num.toString();
  if (num < 0) {
    displayNum = '00';
  } else if (num < 10) {
    displayNum = '0' + num;
  }
  var numList = displayNum.split('');
  var numListLength = numList.length - 1;
  return /*#__PURE__*/_react["default"].createElement(_view["default"], {
    className: "react-countdown-item",
    style: timeWrapStyle
  }, timeBackground ? /*#__PURE__*/_react["default"].createElement(_image["default"], {
    className: "react-countdown-background",
    source: timeBackground,
    style: timeBackgroundStyle
  }) : null, numList.map(function (time, index) {
    return /*#__PURE__*/_react["default"].createElement(_text["default"], {
      key: "time_".concat(index),
      style: index === numListLength ? secondStyle : timeStyle
    }, time);
  }));
}
var Index = /*#__PURE__*/function (_Component) {
  _inherits(Index, _Component);
  var _super = _createSuper(Index);
  function Index() {
    var _this;
    _classCallCheck(this, Index);
    _this = _super.apply(this, arguments);
    _this.state = {
      timeRemaining: 0
    };
    _this.timeoutId = 0;
    _this.tick = function () {
      var _this$props = _this.props,
        onComplete = _this$props.onComplete,
        onTick = _this$props.onTick,
        interval = _this$props.interval;
      var timeRemaining = _this.state.timeRemaining;
      var countdownComplete = 1000 > timeRemaining;
      if (_this.timeoutId) {
        clearTimeout(_this.timeoutId);
      }
      if (countdownComplete && isFunction(onComplete)) {
        onComplete();
      } else {
        _this.timeoutId = !countdownComplete ? setTimeout(function () {
          return _this.setState({
            timeRemaining: timeRemaining - interval
          }, function () {
            return isFunction(onTick) && onTick(timeRemaining);
          });
        }, interval) : false;
      }
    };
    return _this;
  }
  _createClass(Index, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var timeRemaining = this.props.timeRemaining;
      this.setState({
        timeRemaining: timeRemaining
      });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.tick();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.tick();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(newProps) {
      if (newProps.timeRemaining !== this.props.timeRemaining) {
        if (this.timeoutId) {
          clearTimeout(this.timeoutId);
        }
        this.setState({
          timeRemaining: newProps.timeRemaining
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return this.props.timeRemaining !== nextProps.timeRemaining || this.state.timeRemaining !== nextState.timeRemaining;
    }
  }, {
    key: "render",
    value: function render() {
      var timeRemaining = this.state.timeRemaining;
      var _this$props2 = this.props,
        formatFunc = _this$props2.formatFunc,
        timeStyle = _this$props2.timeStyle,
        timeBackgroundStyle = _this$props2.timeBackgroundStyle,
        timeWrapStyle = _this$props2.timeWrapStyle,
        timeBackground = _this$props2.timeBackground,
        secondStyle = _this$props2.secondStyle,
        textStyle = _this$props2.textStyle,
        tpl = _this$props2.tpl;
      if (formatFunc) {
        return formatFunc(timeRemaining);
      }
      var totalSeconds = Math.floor(timeRemaining / 1000);
      var days = parseInt(totalSeconds / 3600 / 24);
      var hours = parseInt(totalSeconds / 3600) % 24;
      var minutes = parseInt(totalSeconds / 60) % 60;
      var seconds = parseInt(totalSeconds % 60);
      var timeType = {
        'd': days,
        'h': hours,
        'm': minutes,
        's': seconds
      };
      var rule = new RegExp('\{[d,h,m,s]\}', 'g');
      var matchlist = [];
      var tmp = null;
      while ((tmp = rule.exec(tpl)) !== null) {
        matchlist.push(tmp.index, tmp.index);
      }
      if (matchlist.length !== 0) {
        matchlist.push(-1);
      }
      var lastPlaintextIndex = 0;
      return /*#__PURE__*/_react["default"].createElement(_view["default"], {
        className: "react-countdown-main"
      }, matchlist.map(function (val, index) {
        if (val === -1) {
          var lastPlaintext = tpl.slice(lastPlaintextIndex);
          return lastPlaintext ? ( /*#__PURE__*/_react["default"].createElement(_text["default"], {
            style: textStyle,
            key: "text_".concat(index)
          }, lastPlaintext)) : null;
        }
        var matchedCharacter = tpl[val + 1];
        switch (matchedCharacter) {
          case 'd':
          case 'h':
          case 'm':
          case 's':
            if (index % 2 === 0) {
              var preText = tpl.slice(lastPlaintextIndex, val);
              return preText ? /*#__PURE__*/_react["default"].createElement(_text["default"], {
                style: textStyle,
                key: "text_".concat(index)
              }, preText) : null;
            } else {
              lastPlaintextIndex = val + 3;
              return /*#__PURE__*/_react["default"].createElement(Time, {
                num: timeType[matchedCharacter],
                timeWrapStyle: timeWrapStyle,
                timeBackground: timeBackground,
                timeBackgroundStyle: timeBackgroundStyle,
                timeStyle: timeStyle,
                secondStyle: secondStyle,
                key: "time_".concat(index)
              });
            }
          default:
            return null;
        }
      }));
    }
  }]);
  return Index;
}(_react.Component);
Index.propTypes = {
  formatFunc: _propTypes["default"].func,
  onTick: _propTypes["default"].func,
  onComplete: _propTypes["default"].func,
  tpl: _propTypes["default"].string,
  timeRemaining: _propTypes["default"].number,
  secondStyle: _propTypes["default"].object,
  timeStyle: _propTypes["default"].object,
  textStyle: _propTypes["default"].object,
  timeWrapStyle: _propTypes["default"].object,
  timeBackground: _propTypes["default"].shape({
    uri: _propTypes["default"].string
  }),
  timeBackgroundStyle: _propTypes["default"].object,
  interval: _propTypes["default"].number
};
Index.defaultProps = {
  tpl: '{d}天{h}时{m}分{s}秒',
  timeRemaining: 0,
  interval: 1000
};
var _default = exports["default"] = Index;