"use strict";

exports.__esModule = true;
exports.default = void 0;
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _field = require("../field");
var _upload = _interopRequireDefault(require("../upload"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
var UploadField = exports.default = /*#__PURE__*/function (_FieldElement) {
  _inheritsLoose(UploadField, _FieldElement);
  function UploadField() {
    return _FieldElement.apply(this, arguments) || this;
  }
  var _proto = UploadField.prototype;
  _proto.getProps = function getProps() {
    return Object.assign(Object.assign({}, _FieldElement.prototype.getProps.call(this)), {
      embedded: true
    });
  };
  _proto.renderControl = function renderControl() {
    var _a = this.getProps(),
      embedded = _a.embedded,
      others = (0, _tslib.__rest)(_a, ["embedded"]);
    return /*#__PURE__*/(0, _react.createElement)(_upload.default, others);
  };
  return UploadField;
}(_field.FieldElement);
UploadField.displayName = 'UploadField';