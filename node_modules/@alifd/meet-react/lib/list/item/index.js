"use strict";

exports.__esModule = true;
exports.default = void 0;
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _view = _interopRequireDefault(require("../../view"));
var _icon = _interopRequireDefault(require("../../icon"));
var _caption = _interopRequireDefault(require("./caption"));
var _content = _interopRequireDefault(require("./content"));
var _media = require("./media");
var _title = _interopRequireDefault(require("./title"));
var _utils = require("../../utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var arrowIconMap = {
  right: 'arrow-right',
  up: 'arrow-up',
  down: 'arrow-down',
  loading: 'loading'
};
var renderExtra = function (ext) {
  if ((0, _utils.isString)(ext)) {
    return /*#__PURE__*/(0, _react.createElement)(_caption.default, null, ext);
  } else if (ext) {
    return ext;
  }
  return null;
};
var ListItem = function (props, ref) {
  var _classNames;
  var children = props.children,
    _props$prefix = props.prefix,
    prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
    arrow = props.arrow,
    media = props.media,
    title = props.title,
    subTitle = props.subTitle,
    description = props.description,
    extra = props.extra,
    className = props.className,
    _onClick = props.onClick,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    others = (0, _tslib.__rest)(props, ["children", "prefix", "arrow", "media", "title", "subTitle", "description", "extra", "className", "onClick", "disabled"]);
  return /*#__PURE__*/(0, _react.createElement)(_view.default, _extends({}, others, {
    className: (0, _classnames.default)(prefix + "list-item", (_classNames = {}, _classNames[prefix + "list-item--clickable"] = (0, _utils.isFunction)(_onClick), _classNames[prefix + "list-item--disabled"] = disabled, _classNames), className),
    ref: ref,
    onClick: function onClick() {
      if (!disabled && _onClick) {
        _onClick.apply(void 0, arguments);
      }
    }
  }), media ? /*#__PURE__*/(0, _react.createElement)(_media.ListItemMedia, null, media) : null, /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: prefix + "list-item-container"
  }, title || description ? /*#__PURE__*/(0, _react.createElement)(_content.default, null, title ? /*#__PURE__*/(0, _react.createElement)(_title.default, null, title) : null, subTitle ? /*#__PURE__*/(0, _react.createElement)(_caption.default, null, subTitle) : null, description ? /*#__PURE__*/(0, _react.createElement)(_caption.default, null, description) : null) : null, extra || (0, _utils.isString)(arrow) ? /*#__PURE__*/(0, _react.createElement)(_media.ListItemAction, null, renderExtra(extra), (0, _utils.isString)(arrow) ? /*#__PURE__*/(0, _react.createElement)(_icon.default, {
    size: "xs",
    className: prefix + "list-item-icon",
    name: arrowIconMap[arrow]
  }) : null) : null, children));
};
ListItem.displayName = 'ListItem';
var _default = exports.default = /*#__PURE__*/(0, _react.forwardRef)(ListItem);