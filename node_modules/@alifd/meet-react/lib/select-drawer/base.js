"use strict";

exports.__esModule = true;
exports.default = void 0;
var _tslib = require("tslib");
var _classnames = _interopRequireDefault(require("classnames"));
var _react = _interopRequireWildcard(require("react"));
var _button = _interopRequireDefault(require("../button"));
var _drawer = _interopRequireDefault(require("../drawer"));
var _view = _interopRequireDefault(require("../view"));
var _locale = require("../locale");
var _zhCn = _interopRequireDefault(require("../locale/lang/zh-cn"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var _default = exports.default = function _default(props) {
  var _props$prefix = props.prefix,
    prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
    _props$visible = props.visible,
    visible = _props$visible === void 0 ? false : _props$visible,
    drawerClassName = props.drawerClassName,
    drawerTitle = props.drawerTitle,
    onCancel = props.onCancel,
    onClose = props.onClose,
    onOk = props.onOk,
    children = props.children,
    others = (0, _tslib.__rest)(props, ["prefix", "visible", "drawerClassName", "drawerTitle", "onCancel", "onClose", "onOk", "children"]);
  var _useState = (0, _react.useState)(false),
    drawerVisible = _useState[0],
    setDrawerVisible = _useState[1];
  var clsPrefix = prefix + "selectdrawer";
  (0, _react.useEffect)(function () {
    if (drawerVisible !== visible) {
      setDrawerVisible(visible);
    }
  }, [visible]);
  var locale = (0, _locale.useLocale)('SelectDrawer', others, _zhCn.default.SelectDrawer);
  return /*#__PURE__*/(0, _react.createElement)(_drawer.default, _extends({}, others, {
    visible: drawerVisible,
    placement: "bottom",
    closeMode: ['mask'],
    onClose: onClose,
    className: (0, _classnames.default)(clsPrefix + "-drawer", drawerClassName)
  }), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clsPrefix + "-toolbar"
  }, /*#__PURE__*/(0, _react.createElement)(_button.default, {
    model: "text",
    onClick: onCancel
  }, locale.cancel), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clsPrefix + "-toolbar-title"
  }, drawerTitle), /*#__PURE__*/(0, _react.createElement)(_button.default, {
    model: "text",
    type: "primary",
    onClick: onOk
  }, locale.ok)), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clsPrefix + "-drawer-content"
  }, children));
};