"use strict";

exports.__esModule = true;
exports.default = void 0;
var _babelRuntimeJsxStyleTransform = require("@alifd/babel-runtime-jsx-style-transform");
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _meetReactComponentOne = require("@alifd/meet-react-component-one");
var _env = require("@uni/env");
var _view = _interopRequireDefault(require("../view"));
var _icon = _interopRequireDefault(require("../icon"));
var _button = _interopRequireDefault(require("../button"));
var _utils = require("../utils");
var _hooks = require("../utils/hooks");
var _utils2 = require("./utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function () { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function (t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : "suspendedYield", p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
var MAX_NUMBER_PICKER_THRESHOLD = 9999999;
var isIOSH5 = _env.isWeb && window.navigator.userAgent.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/);
function getInitInputValue(props) {
  var initialValue;
  if ('value' in props) {
    initialValue = props.value;
  } else if (!(0, _utils.isUndef)(props.defaultValue)) {
    initialValue = props.defaultValue;
  }
  return !(0, _utils.isInvalidValue)(initialValue) ? (0, _utils2.toNumber)(initialValue) : '';
}
function isDecreaseDisabled(value, min) {
  if (!(0, _utils.isNumber)(value)) {
    return false;
  }
  return min !== -Infinity && value <= min;
}
function isIncreaseDisabled(value, max) {
  if (!(0, _utils.isNumber)(value)) {
    return false;
  }
  return max !== Infinity && value >= max;
}
function getPrecision(precision, step) {
  if (typeof precision !== 'number' || precision < 0) {
    precision = 0;
  }
  var stepString = step.toString();
  var pcs = 0;
  if (stepString.indexOf('.') >= 0) {
    pcs = stepString.length - stepString.indexOf('.') - 1;
  }
  return Math.max(pcs, precision);
}
function getPrecisionFactor(precision) {
  return Math.pow(10, precision);
}
function hackChrome(value, precision) {
  if (precision > 0) {
    return Number(Number(value).toFixed(precision));
  }
  return value;
}
var NumberPicker = function (props, ref) {
  var _classNames, _classNames2, _classNames3, _classNames4, _classNames5;
  var className = props.className,
    _props$prefix = props.prefix,
    prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
    _props$size = props.size,
    size = _props$size === void 0 ? 'medium' : _props$size,
    value = props.value,
    defaultValue = props.defaultValue,
    _props$max = props.max,
    max = _props$max === void 0 ? MAX_NUMBER_PICKER_THRESHOLD : _props$max,
    _props$min = props.min,
    min = _props$min === void 0 ? -MAX_NUMBER_PICKER_THRESHOLD : _props$min,
    _props$step = props.step,
    step = _props$step === void 0 ? 1 : _props$step,
    _k1 = props.keybordType,
    _k2 = props.keyboardType,
    _props$readOnly = props.readOnly,
    readOnly = _props$readOnly === void 0 ? false : _props$readOnly,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    _props$hideButton = props.hideButton,
    hideButton = _props$hideButton === void 0 ? false : _props$hideButton,
    enableNative = props.enableNative,
    _props$precision = props.precision,
    precisionProp = _props$precision === void 0 ? 0 : _props$precision,
    _props$focused = props.focused,
    focusedProp = _props$focused === void 0 ? false : _props$focused,
    _props$controlled = props.controlled,
    controlled = _props$controlled === void 0 ? false : _props$controlled,
    _props$inputStyle = props.inputStyle,
    inputStyle = _props$inputStyle === void 0 ? {} : _props$inputStyle,
    _props$onBeforeChange = props.onBeforeChange,
    onBeforeChange = _props$onBeforeChange === void 0 ? function () {
      return Promise.resolve();
    } : _props$onBeforeChange,
    onDisableClickProp = props.onDisableClick,
    onDisabledClickProp = props.onDisabledClick,
    _props$onChange = props.onChange,
    onChange = _props$onChange === void 0 ? function () {} : _props$onChange,
    _props$style = props.style,
    style = _props$style === void 0 ? {} : _props$style,
    _props$onInput = props.onInput,
    onInput = _props$onInput === void 0 ? function () {} : _props$onInput,
    _props$onFocus = props.onFocus,
    onFocus = _props$onFocus === void 0 ? function () {} : _props$onFocus,
    _props$onBlur = props.onBlur,
    onBlur = _props$onBlur === void 0 ? function () {} : _props$onBlur,
    _props$onCorrect = props.onCorrect,
    onCorrect = _props$onCorrect === void 0 ? function () {} : _props$onCorrect,
    others = (0, _tslib.__rest)(props, ["className", "prefix", "size", "value", "defaultValue", "max", "min", "step", "keybordType", "keyboardType", "readOnly", "disabled", "hideButton", "enableNative", "precision", "focused", "controlled", "inputStyle", "onBeforeChange", "onDisableClick", "onDisabledClick", "onChange", "style", "onInput", "onFocus", "onBlur", "onCorrect"]);
  var clsPrefix = prefix + "numberpicker";
  var isControlled = ('value' in props);
  var onDisabledClick = onDisabledClickProp || onDisableClickProp;
  var precision = getPrecision(precisionProp, step);
  var factor = getPrecisionFactor(precision);
  var inputRef = (0, _react.useRef)(null);
  var defaultValAtEmpty = (0, _utils2.getDefaultValue)(min, max, MAX_NUMBER_PICKER_THRESHOLD);
  var _useState = (0, _react.useState)(!!props.focused),
    focused = _useState[0],
    setFocused = _useState[1];
  var _useState2 = (0, _react.useState)(getInitInputValue(props)),
    inputValue = _useState2[0],
    setInputValue = _useState2[1];
  var inputId = (0, _hooks.useGuid)('mt-np-input-');
  var _useState3 = (0, _react.useState)(isDecreaseDisabled(inputValue, min)),
    decreaseDisabled = _useState3[0],
    setDecreaseDisabled = _useState3[1];
  var _useState4 = (0, _react.useState)(isIncreaseDisabled(inputValue, max)),
    increaseDisabled = _useState4[0],
    setIncreaseDisabled = _useState4[1];
  var keyboardType = (0, _hooks.useDeprecated)('NumberPicker', props, 'keybordType', 'keyboardType', 'number-pad');
  (0, _react.useEffect)(function () {
    var fn = function () {
      if (isControlled) {
        if ((0, _utils.isInvalidValue)(value)) {
          setInputValue('');
          updateInputVal('');
        } else {
          setInputValue((0, _utils2.toNumber)(props.value));
          updateInputVal(props.value);
        }
      }
    };
    if (_utils.isMiniappPlatform) {
      setTimeout(fn, 100);
    } else {
      fn();
    }
  });
  (0, _react.useEffect)(function () {
    setDecreaseDisabled(isDecreaseDisabled(inputValue, min));
    setIncreaseDisabled(isIncreaseDisabled(inputValue, max));
  }, [inputValue, max, min]);
  function handleChange(numValue, e) {
    return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!readOnly) {
              _context.next = 2;
              break;
            }
            return _context.abrupt("return");
          case 2:
            _context.prev = 2;
            _context.next = 5;
            return onBeforeChange(numValue);
          case 5:
            _context.next = 10;
            break;
          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](2);
            throw _context.t0;
          case 10:
            doChange(numValue, e);
          case 11:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[2, 7]]);
    }));
  }
  function doChange(val, e) {
    if (!isControlled) {
      setInputValue(val);
    }
    onChange(val, e);
  }
  function updateInputVal(newVal) {
    var cur = inputRef.current;
    if (_env.isWeb && cur && cur._nativeNode) {
      cur._nativeNode.value = '';
      cur._nativeNode.value = newVal;
    } else if (_utils.isStrictWechatMiniProgram || _utils.isStrictMiniApp) {
      var input = document.querySelector("#" + inputId);
      input.value = '';
      input.value = (0, _utils2.toNumber)(newVal);
    }
  }
  var handleDisableClick = function handleDisableClick(actionType, e) {
    if ((0, _utils.isFunction)(onDisabledClick)) {
      onDisabledClick(actionType, e);
    }
  };
  var classNameObj = {
    numberPicker: (0, _classnames.default)("" + clsPrefix, clsPrefix + "--" + size),
    textInput: (0, _classnames.default)(clsPrefix + "-input", clsPrefix + "-input--" + size, (_classNames = {}, _classNames[clsPrefix + "-input--focused"] = focused, _classNames[clsPrefix + "-input--disabled"] = !isIOSH5 && disabled, _classNames[clsPrefix + "-input--readonly"] = readOnly, _classNames[clsPrefix + "-input--no-button"] = hideButton, _classNames)),
    decrease: (0, _classnames.default)(clsPrefix + "-button", clsPrefix + "-button-decrease", clsPrefix + "-button--" + size, (_classNames2 = {}, _classNames2[clsPrefix + "-button--disabled"] = disabled || decreaseDisabled, _classNames2)),
    decreaseIcon: (0, _classnames.default)(clsPrefix + "-button-icon", clsPrefix + "-button-icon--" + size, (_classNames3 = {}, _classNames3[clsPrefix + "-button-icon--disabled"] = disabled || decreaseDisabled, _classNames3)),
    increase: (0, _classnames.default)(clsPrefix + "-button", clsPrefix + "-button-increase", clsPrefix + "-button--" + size, (_classNames4 = {}, _classNames4[clsPrefix + "-button--disabled"] = disabled || increaseDisabled, _classNames4)),
    increaseIcon: (0, _classnames.default)(clsPrefix + "-button-icon", clsPrefix + "-button-icon--" + size, (_classNames5 = {}, _classNames5[clsPrefix + "-button-icon--disabled"] = disabled || increaseDisabled, _classNames5))
  };
  return /*#__PURE__*/(0, _react.createElement)(_view.default, _extends({
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)(style),
    className: (0, _classnames.default)(classNameObj.numberPicker, className),
    ref: ref
  }, others), !hideButton ? /*#__PURE__*/(0, _react.createElement)(_button.default, {
    disabled: disabled || decreaseDisabled,
    type: "normal",
    model: "outline",
    size: size,
    className: classNameObj.decrease,
    onClick: function handleDecrease(e) {
      if ((0, _utils.isInvalidValue)(inputValue)) {
        handleChange(defaultValAtEmpty, e);
        return;
      }
      var newValue = (0, _utils2.clamp)(inputValue - step, min, max);
      var result = factor * newValue / factor;
      result = hackChrome(result, precision);
      if (newValue !== result && (0, _utils.isFunction)(onCorrect)) {
        onCorrect(result, newValue);
      }
      handleChange(result, e);
    },
    onDisabledClick: function onDisabledClick(e) {
      handleDisableClick('decrease', e);
    }
  }, /*#__PURE__*/(0, _react.createElement)(_icon.default, {
    name: "minus",
    className: classNameObj.decreaseIcon
  })) : null, /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.TextInput, {
    id: inputId,
    className: classNameObj.textInput,
    ref: inputRef,
    value: "" + inputValue,
    editable: !disabled && !readOnly,
    keyboardType: keyboardType,
    enableNative: enableNative === true,
    onFocus: function handleFocus(e) {
      setFocused(true);
      if ((0, _utils.isFunction)(onFocus)) {
        onFocus(e);
      }
    },
    onBlur: function handleBlur(e) {
      var val = (0, _utils2.toNumber)((0, _utils.getValueFromEvents)(e));
      if ((0, _utils.isFunction)(onBlur)) {
        onBlur(e);
      }
      if ((0, _utils.isInvalidValue)(val)) {
        setFocused(false);
        handleChange('', Object.assign(Object.assign({}, e), {
          originalValue: (0, _utils.getValueFromEvents)(e)
        }));
        return;
      }
      var limitedValue = (0, _utils2.clamp)(val, min, max);
      if (!isControlled) {
        updateInputVal(limitedValue);
      }
      var result = factor * limitedValue / factor;
      result = hackChrome(result, precision);
      if (val !== result) {
        if (!isControlled) {
          updateInputVal(result);
        }
        onCorrect(result, val);
      }
      setFocused(false);
      handleChange(result, Object.assign(Object.assign({}, e), {
        originalValue: (0, _utils.getValueFromEvents)(e)
      }));
    },
    onInput: function handleInput(e) {
      if ((0, _utils.isFunction)(onInput)) {
        var val = (0, _utils2.toNumber)((0, _utils.getValueFromEvents)(e));
        onInput(val, e);
      }
    },
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)(inputStyle),
    controlled: controlled
  }), !hideButton ? /*#__PURE__*/(0, _react.createElement)(_button.default, {
    disabled: disabled || increaseDisabled,
    type: "normal",
    model: "outline",
    size: size,
    className: classNameObj.increase,
    onClick: function handleIncrease(e) {
      if ((0, _utils.isInvalidValue)(inputValue)) {
        handleChange(defaultValAtEmpty, e);
        return;
      }
      var newValue = (0, _utils2.clamp)(inputValue + step, min, max);
      var result = factor * newValue / factor;
      result = hackChrome(result, precision);
      if (newValue !== result && (0, _utils.isFunction)(onCorrect)) {
        onCorrect(result, newValue);
      }
      handleChange(result, e);
    },
    onDisabledClick: function onDisabledClick(e) {
      handleDisableClick('increase', e);
    }
  }, /*#__PURE__*/(0, _react.createElement)(_icon.default, {
    name: "add",
    className: classNameObj.increaseIcon
  })) : null);
};
NumberPicker.displayName = 'NumberPicker';
var _default = exports.default = /*#__PURE__*/(0, _react.forwardRef)(NumberPicker);