"use strict";

exports.__esModule = true;
exports.default = void 0;
var _babelRuntimeJsxStyleTransform = require("@alifd/babel-runtime-jsx-style-transform");
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _utils = require("../utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var RichTextImage = function (props) {
  var item = props.item,
    className = props.className,
    src = props.src,
    style = props.style,
    id = props.id,
    onLoad = props.onLoad,
    onPlay = props.onPlay,
    otherProps = (0, _tslib.__rest)(props, ["item", "className", "src", "style", "id", "onLoad", "onPlay"]);
  (0, _react.useEffect)(function () {
    if ((0, _utils.isFunction)(onLoad)) {
      onLoad(id);
    }
  }, []);
  return /*#__PURE__*/(0, _react.createElement)("video", _extends({}, otherProps, {
    id: id,
    src: src,
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)(style),
    className: className,
    onPlay: function handlePlay() {
      if ((0, _utils.isFunction)(onPlay)) {
        onPlay(id);
      }
    }
  }));
};
var _default = exports.default = RichTextImage;