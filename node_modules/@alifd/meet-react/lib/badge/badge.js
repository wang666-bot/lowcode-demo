"use strict";

exports.__esModule = true;
exports.default = void 0;
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _meetReactComponentOne = require("@alifd/meet-react-component-one");
var _view = _interopRequireDefault(require("../view"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var Badge = function (props, ref) {
  var _classNames, _classNames2;
  var _props$overflowCount = props.overflowCount,
    overflowCount = _props$overflowCount === void 0 ? 99 : _props$overflowCount,
    className = props.className,
    _props$count = props.count,
    count = _props$count === void 0 ? 0 : _props$count,
    _props$dot = props.dot,
    dot = _props$dot === void 0 ? false : _props$dot,
    children = props.children,
    _props$content = props.content,
    content = _props$content === void 0 ? '' : _props$content,
    _props$prefix = props.prefix,
    prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
    others = (0, _tslib.__rest)(props, ["overflowCount", "className", "count", "dot", "children", "content", "prefix"]);
  var type = dot ? 'dot' : 'normal';
  var auto = _react.Children.count(children) > 0;
  var sup = count;
  sup = Number(count);
  if (!isNaN(sup) && sup !== 0) {
    sup = sup > overflowCount ? overflowCount + "+" : sup;
  } else {
    sup = count;
  }
  var BadgeComponent = sup === 0 && type === 'normal' && !content ? null : /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: (0, _classnames.default)((_classNames = {}, _classNames[prefix + "badge--custom"] = content, _classNames[prefix + "badge-content"] = !content, _classNames[prefix + "badge-content--" + type] = !content, _classNames[prefix + "badge-content--auto"] = auto, _classNames))
  }, content ? content : dot ? null : /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.Text, {
    className: prefix + "badge-text"
  }, sup));
  return /*#__PURE__*/(0, _react.createElement)(_view.default, _extends({}, others, {
    ref: ref,
    className: (0, _classnames.default)(className, prefix + "badge", prefix + "badge--" + type, (_classNames2 = {}, _classNames2[prefix + "badge--auto"] = auto, _classNames2))
  }), children, BadgeComponent);
};
Badge.displayName = 'Badge';
var _default = exports.default = /*#__PURE__*/(0, _react.forwardRef)(Badge);