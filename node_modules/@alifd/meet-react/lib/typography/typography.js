"use strict";

exports.__esModule = true;
exports.default = void 0;
var _babelRuntimeJsxStyleTransform = require("@alifd/babel-runtime-jsx-style-transform");
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _meetReactComponentOne = require("@alifd/meet-react-component-one");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var Typography = function (props) {
  var _classNames;
  var _props$prefix = props.prefix,
    prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
    _props$type = props.type,
    type = _props$type === void 0 ? 'body-1' : _props$type,
    className = props.className,
    children = props.children,
    _props$mark = props.mark,
    mark = _props$mark === void 0 ? false : _props$mark,
    _props$underline = props.underline,
    underline = _props$underline === void 0 ? false : _props$underline,
    _props$strong = props.strong,
    strong = _props$strong === void 0 ? false : _props$strong,
    _props$code = props.code,
    code = _props$code === void 0 ? false : _props$code,
    del = props.delete,
    indented = props.indented,
    color = props.color,
    style = props.style,
    others = (0, _tslib.__rest)(props, ["prefix", "type", "className", "children", "mark", "underline", "strong", "code", "delete", "indented", "color", "style"]);
  var clsPrefix = prefix + "typography";
  var newStyle = Object.assign({
    color: color
  }, style);
  return /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.Text, _extends({}, others, {
    className: (0, _classnames.default)("" + clsPrefix, className, clsPrefix + "--" + type, (_classNames = {}, _classNames[clsPrefix + "--mark"] = mark, _classNames[clsPrefix + "--underline"] = underline, _classNames[clsPrefix + "--strong"] = strong, _classNames[clsPrefix + "--code"] = code, _classNames[clsPrefix + "--delete"] = del, _classNames[clsPrefix + "--" + type + "-indented"] = indented, _classNames)),
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)(newStyle)
  }), children);
};
Typography.displayName = 'Typography';
var _default = exports.default = Typography;