"use strict";

exports.__esModule = true;
exports.default = exports.TabContext = void 0;
var _babelRuntimeJsxStyleTransform = require("@alifd/babel-runtime-jsx-style-transform");
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _meetReactComponentOne = require("@alifd/meet-react-component-one");
var _view = _interopRequireDefault(require("../view"));
var _icon = _interopRequireDefault(require("../icon"));
var _picker = _interopRequireDefault(require("../picker"));
var _selectDrawer = require("../select-drawer");
var _item = _interopRequireDefault(require("./item"));
var _locale = require("../locale");
var _zhCn = _interopRequireDefault(require("../locale/lang/zh-cn"));
var _utils = require("../utils");
var _hooks = require("../utils/hooks");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function () { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function (t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : "suspendedYield", p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
var TabContext = exports.TabContext = /*#__PURE__*/(0, _react.createContext)({
  activeKey: -1,
  fullWidth: true,
  shape: 'normal',
  activeLineType: 'normal',
  change: function change() {}
});
var getTabData = function (props) {
  var dataSource = props.dataSource,
    children = props.children;
  if ((0, _utils.isValidArray)(dataSource)) {
    return dataSource.map(function (item) {
      return Object.assign(Object.assign({}, item), {
        label: item.title,
        value: item.key
      });
    });
  } else if (children) {
    return _react.Children.map(children, function (child) {
      var title = child.props.title;
      var key = child.key;
      return {
        label: title,
        value: key
      };
    });
  } else {
    return [];
  }
};
var getInitActiveKey = function (props) {
  if ('activeKey' in props && props.activeKey) {
    return props.activeKey;
  } else if (props.defaultActiveKey || props.defaultActiveKey === 0) {
    return props.defaultActiveKey;
  } else {
    return undefined;
  }
};
var timerMap = {};
var Tab = function (props, ref) {
  var _classNames, _classNames2, _classNames3;
  var _props$prefix = props.prefix,
    prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
    activeKey = props.activeKey,
    _props$defaultActiveK = props.defaultActiveKey,
    defaultActiveKey = _props$defaultActiveK === void 0 ? -1 : _props$defaultActiveK,
    _props$size = props.size,
    size = _props$size === void 0 ? 'medium' : _props$size,
    _props$activeLineType = props.activeLineType,
    activeLineType = _props$activeLineType === void 0 ? 'normal' : _props$activeLineType,
    _props$shape = props.shape,
    shape = _props$shape === void 0 ? 'normal' : _props$shape,
    _props$fullWidth = props.fullWidth,
    fullWidth = _props$fullWidth === void 0 ? true : _props$fullWidth,
    renderTool = props.renderTool,
    _props$onChange = props.onChange,
    onChange = _props$onChange === void 0 ? function () {} : _props$onChange,
    _props$dataSource = props.dataSource,
    dataSource = _props$dataSource === void 0 ? [] : _props$dataSource,
    className = props.className,
    contentClassName = props.contentClassName,
    contentStyle = props.contentStyle,
    renderTab = props.renderTab,
    children = props.children,
    others = (0, _tslib.__rest)(props, ["prefix", "activeKey", "defaultActiveKey", "size", "activeLineType", "shape", "fullWidth", "renderTool", "onChange", "dataSource", "className", "contentClassName", "contentStyle", "renderTab", "children"]);
  var locale = (0, _locale.useLocale)('Tab', others, _zhCn.default.Tab);
  var _useState = (0, _react.useState)(getInitActiveKey(props)),
    curActiveKey = _useState[0],
    setActiveKey = _useState[1];
  var _useState2 = (0, _react.useState)(false),
    drawerVisible = _useState2[0],
    setDrawerVisible = _useState2[1];
  var _useState3 = (0, _react.useState)(getInitActiveKey(props)),
    internalTabKey = _useState3[0],
    setInternalActiveKey = _useState3[1];
  var curTabScrollId = (0, _hooks.useGuid)('tab-scroll-');
  var curScrollContainerId = (0, _hooks.useGuid)('tab-ctn-');
  var scrollRef = (0, _react.useRef)();
  var activeTabRef = (0, _react.useRef)();
  var isControlled = ('activeKey' in props);
  var _useState4 = (0, _react.useState)(false),
    isOverflow = _useState4[0],
    setOverflow = _useState4[1];
  var isExcessMode = !fullWidth && isOverflow;
  var clsPrefix = prefix + "tab";
  var clses = {
    tab: (0, _classnames.default)([clsPrefix, clsPrefix + "--" + shape, className]),
    divider: (0, _classnames.default)((_classNames = {}, _classNames[clsPrefix + "-divider"] = shape !== 'capsule', _classNames)),
    container: (0, _classnames.default)((_classNames2 = {}, _classNames2[clsPrefix + "-container"] = true, _classNames2[clsPrefix + "-container--" + size] = true, _classNames2[clsPrefix + "-container--wechat"] = _utils.isStrictWechatMiniProgram, _classNames2)),
    scrollContainer: (0, _classnames.default)(clsPrefix + "-scroll-container", clsPrefix + "-scroll-container--" + size, (_classNames3 = {}, _classNames3[clsPrefix + "-scroll-container--fullwidth"] = fullWidth, _classNames3[clsPrefix + "-scroll-container--wechat"] = _utils.isStrictWechatMiniProgram, _classNames3)),
    tool: (0, _classnames.default)(clsPrefix + "-tool", clsPrefix + "-tool--" + size),
    toolIcon: (0, _classnames.default)(clsPrefix + "-tool-icon", clsPrefix + "-tool-icon--" + size),
    drawer: (0, _classnames.default)(clsPrefix + "-drawer"),
    content: (0, _classnames.default)(clsPrefix + "-content", contentClassName)
  };
  var scrollTo = function (offset) {
    if (!timerMap[curTabScrollId]) {
      timerMap[curTabScrollId] = setTimeout(function () {
        if (scrollRef && scrollRef.current && scrollRef.current.scrollTo) {
          scrollRef.current.scrollTo(Object.assign(Object.assign({}, offset), {
            duration: 150
          }));
          timerMap[curTabScrollId] = null;
        }
      }, 200);
    }
  };
  (0, _react.useEffect)(function () {
    if (isControlled && curActiveKey && !props.activeKey) {
      setActiveKey(getInitActiveKey(props));
      return;
    }
    if (isControlled) {
      setActiveKey(props.activeKey);
    }
  });
  (0, _react.useEffect)(function () {
    setTimeout(function () {
      (function () {
        return (0, _tslib.__awaiter)(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
          var activeTabId, containerWidth, containerOffsetLeft, scrollLeft, activeTabWidth, activeTabOffsetLeft, totalWidth, centerMarkerPos, distance;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                activeTabId = activeTabRef.current && activeTabRef.current.id;
                _context.next = 3;
                return (0, _utils.getWidth)(curTabScrollId);
              case 3:
                containerWidth = _context.sent;
                _context.next = 6;
                return (0, _utils.getLeft)(curTabScrollId);
              case 6:
                containerOffsetLeft = _context.sent;
                _context.next = 9;
                return (0, _utils.getScrollLeft)(curTabScrollId);
              case 9:
                scrollLeft = _context.sent;
                _context.next = 12;
                return (0, _utils.getWidth)(activeTabId);
              case 12:
                activeTabWidth = _context.sent;
                _context.next = 15;
                return (0, _utils.getLeft)(activeTabId);
              case 15:
                _context.t0 = _context.sent;
                _context.t1 = containerOffsetLeft;
                activeTabOffsetLeft = _context.t0 - _context.t1;
                _context.next = 20;
                return (0, _utils.getWidth)(curScrollContainerId);
              case 20:
                totalWidth = _context.sent;
                centerMarkerPos = containerWidth / 2;
                if (!fullWidth) {
                  setOverflow(totalWidth > containerWidth);
                }
                if (scrollRef.current && activeTabRef.current) {
                  distance = Math.floor(Math.max(activeTabOffsetLeft - centerMarkerPos + scrollLeft + activeTabWidth / 2, 0));
                  if (scrollLeft !== distance) {
                    scrollTo({
                      x: distance / _utils.screenPixelRatio,
                      y: 0
                    });
                  }
                }
              case 24:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
      })();
    }, 50);
  });
  var content;
  if (dataSource && dataSource.length > 0) {
    content = dataSource.map(function (item, index) {
      return /*#__PURE__*/(0, _react.createElement)(_item.default, _extends({
        key: item.key || index,
        itemKey: item.key,
        renderContent: renderTab,
        ref: item.key === curActiveKey ? activeTabRef : null,
        prefix: prefix,
        size: size
      }, item));
    });
  } else {
    content = _react.Children.map(children, function (child, index) {
      return (0, _react.cloneElement)(child, {
        key: "mt_tab_" + index,
        itemKey: child.key || index,
        ref: "" + child.key === "" + curActiveKey ? activeTabRef : null,
        renderContent: child.renderContent || renderTab,
        prefix: prefix,
        size: size
      });
    });
  }
  var handleChange = function handleChange(v) {
    if (!isControlled) {
      setActiveKey(v);
    }
    if ((0, _utils.isFunction)(onChange) && v !== curActiveKey) {
      onChange(v);
    }
  };
  return /*#__PURE__*/(0, _react.createElement)(TabContext.Provider, {
    value: {
      activeKey: curActiveKey,
      change: handleChange,
      shape: shape,
      fullWidth: fullWidth,
      activeLineType: activeLineType
    }
  }, /*#__PURE__*/(0, _react.createElement)(_view.default, null, /*#__PURE__*/(0, _react.createElement)(_view.default, _extends({}, others, {
    className: clses.tab,
    ref: ref
  }), /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.ScrollView, {
    ref: scrollRef,
    id: curTabScrollId,
    className: clses.container,
    contentContainerStyle: {
      flex: props.renderTool ? null : 1
    },
    horizontal: true,
    showsHorizontalScrollIndicator: false
  }, /*#__PURE__*/(0, _react.createElement)(_view.default, {
    id: curScrollContainerId,
    className: clses.scrollContainer
  }, content)), shape !== 'capsule' && /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clses.divider
  }), function getTool() {
    if (!isExcessMode) {
      return null;
    }
    var _children = /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.Text, null, locale.more), /*#__PURE__*/(0, _react.createElement)(_icon.default, {
      className: clses.toolIcon,
      name: "arrow-down",
      size: "xxs"
    }));
    if ((0, _utils.isFunction)(renderTool)) {
      var renderedToolEl = renderTool();
      if (renderedToolEl) {
        _children = renderedToolEl;
      } else {
        _children = null;
      }
    }
    return _children ? /*#__PURE__*/(0, _react.createElement)(_view.default, {
      className: clses.tool,
      onClick: function onClick() {
        setDrawerVisible(true);
        setInternalActiveKey(curActiveKey);
      }
    }, _children) : null;
  }()), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clses.content,
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)(contentStyle)
  }, function getChildren(activeTabKey) {
    var ret = null;
    _react.Children.forEach(children, function (child) {
      if (ret) {
        return;
      }
      var _key = child.key;
      if ("" + _key === "" + activeTabKey) {
        ret = child.props.children;
      }
    });
    return ret;
  }(curActiveKey))), isExcessMode ? /*#__PURE__*/(0, _react.createElement)(_selectDrawer.BaseSelectDrawer, {
    visible: drawerVisible,
    onOk: function handleDrawerOk() {
      setDrawerVisible(false);
      handleChange(internalTabKey);
    },
    onCancel: function handleDrawerCancel() {
      setDrawerVisible(false);
      setInternalActiveKey(curActiveKey);
    }
  }, /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.ScrollView, {
    className: clses.drawer
  }, /*#__PURE__*/(0, _react.createElement)(_picker.default, {
    cascade: true,
    data: getTabData(props),
    value: [internalTabKey],
    onChange: function onChange(v) {
      if ((0, _utils.isValidArray)(v)) {
        setInternalActiveKey(v[0]);
      }
    }
  }))) : null);
};
Tab.displayName = 'Tab';
var _default = exports.default = /*#__PURE__*/(0, _react.forwardRef)(Tab);