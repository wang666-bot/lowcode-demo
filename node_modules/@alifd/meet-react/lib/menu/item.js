"use strict";

exports.__esModule = true;
exports.default = void 0;
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _classnames2 = _interopRequireDefault(require("classnames"));
var _icon = _interopRequireDefault(require("../icon"));
var _list = _interopRequireDefault(require("../list"));
var _menuContext = _interopRequireDefault(require("./menu-context"));
var _utils = require("../utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var MenuItem = function (props, ref) {
  var _classnames;
  var context = (0, _react.useContext)(_menuContext.default);
  var className = props.className,
    children = props.children,
    disabled = props.disabled,
    itemKey = props.itemKey,
    title = props.title,
    others = (0, _tslib.__rest)(props, ["className", "children", "disabled", "itemKey", "title"]);
  var prefix = context.prefix,
    selectMode = context.selectMode,
    selectedKeys = context.selectedKeys,
    onClickItem = context.onClickItem,
    onSelect = context.onSelect;
  var selected = !(0, _utils.isInvalidValue)(itemKey) && selectedKeys.includes(itemKey);
  return /*#__PURE__*/(0, _react.createElement)(_list.default.Item, _extends({}, others, {
    ref: ref,
    className: (0, _classnames2.default)(prefix + "menu-item", className, (_classnames = {}, _classnames[prefix + "menu-item--disabled"] = disabled, _classnames)),
    title: children || title,
    disabled: disabled,
    extra: selected ? /*#__PURE__*/(0, _react.createElement)(_icon.default, {
      name: "select"
    }) : null,
    onClick: function handleClick(e) {
      onClickItem(itemKey, props, e);
      if (selectMode) {
        onSelect(!selected, props);
      }
    }
  }));
};
var _default = exports.default = /*#__PURE__*/(0, _react.forwardRef)(MenuItem);