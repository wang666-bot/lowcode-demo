"use strict";

exports.__esModule = true;
exports.default = void 0;
var _tslib = require("tslib");
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _utils = require("../utils");
require("./styles/index.css");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var View = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var _classNames;
  var selfRef = (0, _react.useRef)(null);
  var onFirstAppear = props.onFirstAppear,
    _props$prefix = props.prefix,
    prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
    className = props.className,
    hasSafeArea = props.hasSafeArea,
    onAppear = props.onAppear,
    _props$withoutTouch = props.withoutTouch,
    withoutTouch = _props$withoutTouch === void 0 ? true : _props$withoutTouch,
    rest = (0, _tslib.__rest)(props, ["onFirstAppear", "prefix", "className", "hasSafeArea", "onAppear", "withoutTouch"]);
  var newClsName = (0, _classnames.default)(className, (_classNames = {}, _classNames[prefix + "view-safe-area"] = hasSafeArea, _classNames));
  if (_utils.isStrictMiniApp) {
    return withoutTouch ? /*#__PURE__*/(0, _react.createElement)("view", _extends({}, rest, {
      className: newClsName,
      onAppear: onAppear,
      onDisappear: rest.onDisappear,
      onFirstAppear: onFirstAppear,
      ref: ref
    })) : /*#__PURE__*/(0, _react.createElement)("div", _extends({}, rest, {
      className: newClsName,
      onAppear: onAppear,
      onDisappear: rest.onDisappear,
      onFirstAppear: onFirstAppear,
      ref: ref
    }));
  }
  var handleAppear = onAppear;
  if (onFirstAppear) {
    handleAppear = function (event) {
      if (onAppear) {
        onAppear(event);
      }
      if (!selfRef.triggeredAppear) {
        if (onFirstAppear) {
          onFirstAppear(event);
        }
      } else {
        selfRef.triggeredAppear = true;
      }
    };
  }
  return /*#__PURE__*/(0, _react.createElement)("div", _extends({}, rest, {
    className: newClsName,
    onAppear: handleAppear,
    ref: ref
  }));
});
View.displayName = 'View';
var _default = exports.default = View;