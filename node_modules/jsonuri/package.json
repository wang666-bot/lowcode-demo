{
  "name": "jsonuri",
  "version": "2.6.0",
  "description": "Use URI path to get or set data",
  "keywords": [
    "array",
    "data",
    "data operator",
    "javascript",
    "json",
    "json path",
    "jsonuri",
    "nodejs",
    "object",
    "path",
    "uri",
    "vue"
  ],
  "homepage": "https://jsonuri.js.org",
  "bugs": "https://github.com/aligay/jsonuri/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/aligay/jsonuri.git"
  },
  "license": "MIT",
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "types": "dist/typings/index.d.ts",
  "config": {
    "ghooks": {
      "pre-commit": "sh scripts/pre-commit.sh"
    }
  },
  "devDependencies": {
    "@babel/preset-env": "^7.16.11",
    "@babel/preset-typescript": "^7.16.7",
    "@types/jest": "^27.4.1",
    "@types/node": "^17.0.21",
    "@typescript-eslint/eslint-plugin": "^5.14.0",
    "codecov": "^3.8.3",
    "eslint": "^8.10.0",
    "eslint-config-standard-with-typescript": "^21.0.1",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-promise": "^6.0.0",
    "gh-pages": "^3.2.3",
    "ghooks": "^2.0.4",
    "imod": "^1.5.0",
    "jest": "^27.5.1",
    "multi-shell": "^2.0.0-alpha.1",
    "rimraf": "^3.0.2",
    "tslib": "^2.3.1",
    "typescript": "^4.6.2"
  },
  "scripts": {
    "build": "pnpm run clean && pnpm run lint && node scripts/build.js",
    "clean": "rimraf ./dist",
    "debug": "node --inspect-brk dist/index.js",
    "deploy:gh-pages": "node scripts/gh-pages.js",
    "dev": "m-sh 'pnpm run dev:tsc'",
    "dev:tsc": "pnpm run clean && tsc -w",
    "lint": "eslint ./src  --fix",
    "test": "pnpm run lint && pnpm run build && jest --coverage"
  },
  "readme": "# JSON URI\n\n---\n\n`Use URI style methods to operate data.`\nAll operations friendly support Vue-like frameworks.\n\n[![Build Status](https://travis-ci.com/aligay/jsonuri.svg?branch=master)](https://travis-ci.com/github/aligay/jsonuri/branches)\n[![codecov](https://codecov.io/gh/aligay/jsonuri/branch/master/graph/badge.svg)](https://codecov.io/gh/aligay/jsonuri/branch/master)\n[![npm](https://img.shields.io/npm/v/jsonuri.svg)](https://www.npmjs.com/package/jsonuri)\n[![dependencies Status](https://david-dm.org/aligay/jsonuri/status.svg)](https://david-dm.org/aligay/jsonuri)\n[![devDependencies Status](https://david-dm.org/aligay/jsonuri/dev-status.svg)](https://david-dm.org/aligay/jsonuri?type=dev)\n\n## Use\n\n```shell\n$ npm install jsonuri --save\n```\n\n```javascript\nimport * as jsonuri from 'jsonuri'\n// or\nimport { get, set, ... } from 'jsonuri' // recommended practice, friendly to tree-shaking\n```\n\n### Example Data:\n```json\n{\n  \"menu\": {\n    \"id\": 123,\n    \"list\": [0, 1, 2, 3, 4],\n    \"popup\": {\n      \"menuitem\": [{\n          \"value\": \"New\",\n          \"onclick\": \"CreateNewDoc()\"\n        },\n        {\n          \"value\": \"Open\",\n          \"onclick\": \"OpenDoc()\"\n        },\n        {\n          \"value\": \"Close\",\n          \"onclick\": \"CloseDoc()\"\n        }\n      ]\n    }\n  }\n}\n\n```\n\n## Methods:\n\n### get (data, path)\nGet the value of the specified data for the path.\n\n\n**Example:**\n\n```javascript\njsonuri.get(data, 'menu/id')\n// return 123\n\njsonuri.get(data, 'menu/popup/menuitem/0/value')\n// return 'New'\n\njsonuri.get(data, 'menu/popup/menuitem/0/value/..')\n// {value: \"New\", onclick: \"CreateNewDoc()\"}\n\n```\n[see more](test/spec/get_spec.js)\n### set (data, path, value)\nSet the value of the specified data for the path.\n\n**Example:**\n\n```javascript\njsonuri.set(data, 'menu/id/', 789)\njsonuri.get(data, 'menu/id')\n//789\n\n```\n[see more](test/spec/set_spec.js)\n\n### rm (data, path)\nRemove the value of the specified data for the path.\n\n**Example:**\n\n```javascript\njsonuri.rm(data, 'menu/id')\njsonuri.get(data, 'menu/id') // undefined\n```\n[see more](test/spec/rm_spec.js)\n\n\n### mv (data, pathA, pathB, sequence)\nData A moved to target B before or after.\n\n**Example:**\n\n```javascript\njsonuri.mv(data, 'menu/list/0', 'menu/list/3')\njsonuri.get(data, 'menu/list') // [1, 2, 3, 0, 4]\n[see more](test/spec/mv_spec.js)\n\n\njsonuri.set(data, 'menu/list/',[0,1,2,3,4])\njsonuri.mv(data, 'menu/list/0', 'menu/list/3', 'before')\njsonuri.get(data, 'menu/list') // [1, 2, 0, 3, 4]\n\n```\n[see more](test/spec/mv_spec.js)\n\n### swap (data, pathA, pathB)\nData swap in an array.\n\n**Example:**\n\n```javascript\njsonuri.swap(data, 'menu/list/0', 'menu/list/4')\njsonuri.get(data, 'menu/list') // [4, 1, 2, 3, 0]\n\njsonuri.swap(data, 'menu/list/0', 'menu/list/4')\njsonuri.get(data, 'menu/list') // [4, 1, 2, 3, 0]\n\n```\n[see more](test/spec/swap_spec.js)\n\n\n### insert (data, pathA, value, direction)\n\nInsert data into an `array` that is described in the path.\n\n**Example:**\n\n```javascript\njsonuri.insert(data, 'menu/list/0', 9999, 'before') // [9999, 0, 1, 2, 3, 4]\n\n```\n[see more](test/spec/insert_spec.js)\n\n\n### up(data, path, gap)\n[see more](test/spec/up_spec.js)\n\n\n### down(data, path, gap)\n\n[see more](test/spec/down_spec.js)\n\n\n### walk(data, descentionFn, ascentionFn)\nTraverse each data of each node and value.\n\n**Example:**\n\n```javascript\njsonuri.walk({a:{a1:'x'}}, (value, key, parent, { path }) => {\n  console.log(value, key, parent, path)\n})\n\n// { a1: 'x' } 'a' { a: { a1: 'x' } } 'a'\n// x a1 { a1: 'x' } 'a/a1'\n```\n[see more](test/spec/walk_spec.js)\n\n### normalizePath(path1, path2, ...)\n\n**Example:**\n\n```javascript\njsonuri.normalizePath('a', 'b') // a/b\n\njsonuri.normalizePath(['a', 'b', '../'], 'c') // a/c\n\n\n```\n[see more](test/spec/normalizePath_spec.js)\n\n### isCircular(obj)\n\n**Example:**\n\n```javascript\njsonuri.isCircular({}) // return false\njsonuri.isCircular(window) // return true\n\nvar a = {}\njsonuri.set(a, '/b/c/d/e/f/g', a)\njsonuri.isCircular(a) // return true\n\n\n```\n[see more](test/spec/isCircular_spec.js)\n"
}